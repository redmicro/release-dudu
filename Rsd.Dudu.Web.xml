<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rsd.Dudu.Web</name>
    </assembly>
    <members>
        <member name="T:Rsd.Dudu.Web.Authorization.AuthenticationHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Authorization.AuthenticationHandler.SendAsync">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Authorization.FormAuthenticationFilterAttribute.Authorization">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Authorization.FormAuthenticationFilterAttribute.GetTicket(System.Web.HttpCookieCollection)">
            <summary>
            
            </summary>
            <param name="cookies"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Authorization.Header.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Authorization.Header.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="header"></param>
            <param name="method"></param>
        </member>
        <member name="P:Rsd.Dudu.Web.Authorization.Header.Cnonce">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Authorization.Header.Nonce">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Authorization.Header.Realm">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Authorization.Header.UserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Authorization.Header.Uri">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Authorization.Header.Response">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Authorization.Header.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Authorization.Header.NounceCounter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Authorization.Header.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Authorization.NonceHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Authorization.NonceHelper.Generate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Authorization.NonceHelper.IsValid(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="nonce"></param>
            <param name="nonceCount"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Controllers.BaseController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.Index">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.BadRequest(System.String)">
            <summary>
            返回：ErrorCodes.W2000 非法请求 (token 为空)
            </summary>
            <param name="msg"></param>
            <returns>非法请求</returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.NoSessionRequest">
            <summary>
            返回：ErrorCodes.W2001 Session信息不存在
            </summary>
            <returns>Session信息不存在</returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.SaveObject(System.Type,Rsd.Dudu.BizModel.JsonObject,Rsd.Dudu.BizModel.ObjectStateType)">
            <summary>
            保存对象至数据，并将返回内存中的对象
            </summary>
            <param name="type"></param>
            <param name="json"></param>
            <param name="objectState">指定当前对象状态（New or Update）</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.SaveObject(Rsd.Dudu.Core.IMyType,Rsd.Dudu.BizModel.JsonObject,Rsd.Dudu.BizModel.ObjectStateType)">
            <summary>
            保存对象至数据，并将返回内存中的对象
            </summary>
            <param name="myType"></param>
            <param name="json"></param>
            <param name="objectState">当前对象状态</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.SaveObjects``1(``0[])">
            <summary>
            保存对象至数据，并将返回内存中的对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objs"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.SaveObject``1(``0)">
            <summary>
            保存对象至数据，并将返回内存中的对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.SaveObject``1(Rsd.Dudu.BizModel.JsonObject,Rsd.Dudu.BizModel.ObjectStateType)">
            <summary>
            保存对象至数据，并将返回内存中的对象
            </summary>
            <param name="json"></param>
            <param name="objectState">当前对象状态</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.DeleteObject(Rsd.Dudu.Core.IMyType,System.String,Rsd.Dudu.BizModel.DeleteType)">
            <summary>
            
            </summary>
            <param name="myType"></param>
            <param name="key"></param>
            <param name="delType"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.DeleteObject(System.Type,System.String,Rsd.Dudu.BizModel.DeleteType)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="key"></param>
            <param name="delType"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.DeleteObject``1(System.String,Rsd.Dudu.BizModel.DeleteType)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="delType"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.DeleteObject``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetListJson``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Rsd.Dudu.DBServices.SortType,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <param name="expression"></param>
            <param name="orderBy"></param>
            <param name="type"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetListJson``2(Rsd.Dudu.Core.IDBSession,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Rsd.Dudu.DBServices.SortType,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <param name="dbSession"></param>
            <param name="expression"></param>
            <param name="orderBy"></param>
            <param name="type"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetListJson``1(Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.String,System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <param name="bizFormat">先转化为业务对象模型,再格式化为Json</param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetListJson``1(Rsd.Dudu.Core.IDBSession,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.String,System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dbSession"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <param name="bizFormat">先转化为业务对象模型,再格式化为Json</param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetListJson(Rsd.Dudu.Core.IMyType,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.String,System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="myType"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <param name="bizFormat">先转化为业务对象模型,再格式化为Json</param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetListJson(Rsd.Dudu.Core.IDBSession,Rsd.Dudu.Core.IMyType,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.String,System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="dbSession"></param>
            <param name="myType"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <param name="bizFormat">先转化为业务对象模型,再格式化为Json</param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetPaggingJson(Rsd.Dudu.Core.IMyType,System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.String,System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="myType"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <param name="bizFormat">先转化为业务对象模型,再格式化为Json</param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetPaggingJson(Rsd.Dudu.Core.IDBSession,Rsd.Dudu.Core.IMyType,System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.String,System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="dbSession"></param>
            <param name="myType"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <param name="bizFormat">先转化为业务对象模型,再格式化为Json</param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetPaggingJson``1(Rsd.Dudu.Core.IDBSession,System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.String,System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dbSession"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <param name="bizFormat">先转化为业务对象模型,再格式化为Json</param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetPaggingJson``1(System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.String,System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <param name="bizFormat">先转化为业务对象模型,再格式化为Json</param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetPaggingJson``2(Rsd.Dudu.Core.IDBSession,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,Rsd.Dudu.DBServices.SortType,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <param name="dbSession"></param>
            <param name="expression"></param>
            <param name="orderBy"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetPaggingJson``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,Rsd.Dudu.DBServices.SortType,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <param name="expression"></param>
            <param name="orderBy"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="tableNameSuffix">分表存储对象，表名称后缀</param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetPaggingJson``1(System.Int32,System.Int32,System.Data.DataTable,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="table"></param>
            <param name="total"></param>
            <param name="bizFormat">先转化为业务对象模型,再格式化为Json</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetObject(System.Type,System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="key"></param>
            <param name="tableNameSuffixList">分表存储对象，表名称后缀</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetObject``1(System.String,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">主键</param>
            <param name="tableNameSuffixList">分表存储对象，表名称后缀</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetObject``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <param name="tableNameSuffixList">分表存储对象，表名称后缀</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetObjects``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <param name="tableNameSuffixList">分表存储对象，表名称后缀</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetObjects``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Rsd.Dudu.DBServices.SortType,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <param name="expression"></param>
            <param name="orderBy"></param>
            <param name="type"></param>
            <param name="tableNameSuffixList">分表存储对象，表名称后缀</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetObjects``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}},Rsd.Dudu.DBServices.SortType,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <param name="expression"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="orderBy"></param>
            <param name="type"></param>
            <param name="tableNameSuffixList">分表存储对象，表名称后缀</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.SignIn(System.String,System.Object,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="userName"></param>
            <param name="data"></param>
            <param name="clientIp"></param>
            <param name="host"></param>
            <param name="referer"></param>
            <param name="userAgent"></param>
            <param name="minutes">过期时间（分钟），默认30分钟</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.SignOut">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseController.GetAppSetting(System.String)">
            <summary>
            获取配置项值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Controllers.BaseHttpHandler">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.BaseHttpHandler.DefaultAction">
            <summary>
            默认api
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.BaseHttpHandler.RoutePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.BaseHttpHandler.Item(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.BaseHttpHandler.SessionId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.BaseHttpHandler.Context">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.BaseHttpHandler.HasResponsed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.BaseHttpHandler.IsReusable">
            <summary>
            您将需要在网站的 Web.config 文件中配置此处理程序 
            并向 IIS 注册它，然后才能使用它。有关详细信息，
            请参阅以下链接: https://go.microsoft.com/?linkid=8101007
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.BaseHttpHandler.Proxcy">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.BeginBusying(System.String)">
            <summary>
            当前线程独占系统使用，阻止其他请求访问
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.EndBusying">
            <summary>
            当前线程释放独占资源，允许其他请求执行
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.RedirectToRoute(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="routeValues"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            
            </summary>
            <param name="requestContext"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetService``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="user"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.HttpRequest(Rsd.Dudu.Net.HttpRequestData)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.HttpRequest(System.String,Rsd.Dudu.BizModel.JsonObject,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="data"></param>
            <param name="method"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.HttpRequest(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="data"></param>
            <param name="authorization"></param>
            <param name="method"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetDes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetAppId">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetAppToken">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.CheckPermission(System.String,Rsd.Dudu.Web.Service.ServiceAccessLevel)">
            <summary>
            验证权限
            </summary>
            <param name="actionName"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.OnBeforeRoute(System.String,Rsd.Dudu.Web.Service.ServiceAccessLevel)">
            <summary>
            在路由进入目标api之前执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetAccessToken">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.CheckAccessToken(System.String)">
            <summary>
            验证Token是否有效（存在且未过期）
            </summary>
            <param name="accessToken">指定accessToken，空表示本次请求默认accessToken</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetSession">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetSessionData``1">
            <summary>
            获取指定类型的Session数据。类型不一致时，返回null
            </summary>
            <typeparam name="T">Session数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.ResetSession(System.Int32)">
            <summary>
            重置Session 并延长有效时间
            </summary>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.RefreshSession(System.Int32)">
            <summary>
            刷新会话  延长Session有效时间
            </summary>
            <param name="minutes"></param>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.BaseHttpHandler.ClientIP">
            <summary>
            当前请求客户端IP
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetClientIP">
            <summary>
            请求客户端IP
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetBrowserId">
            <summary>
            浏览器指纹
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetHostAddress">
            <summary>
             获取远程客户端的 IP 主机地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.BaseHttpHandler.GetHostName">
            <summary>
            获取远程客户端的 DNS 名称
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Controllers.LogController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.Debug">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.Info">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.Warn">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.Error">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.PageView">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.PageEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.PageTiming">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.PageMemory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.PageEntry">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.Log">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.GetUILogList">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.GetSysLogList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.LogSaveThread(System.Object)">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.LogController.Handle(Rsd.Dudu.Exception.ExceptionObject[])">
            <summary>
            
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Controllers.UIController">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.UIController.Proxcy">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.UIController.IsReusable">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Controllers.UIController.Context">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.UIController.ProcessRequest(System.Web.HttpContext)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.UIController.DoUrlRequest(Rsd.Dudu.Web.Core.IWebUIService,System.String)">
            <summary>
            
            </summary>
            <param name="uiService"></param>
            <param name="url"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.UIController.GetRequestPath(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="pathPrefix"></param>
            <param name="defaultIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.UIController.GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            
            </summary>
            <param name="requestContext"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.UIController.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Controllers.DeveloperController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.Index">
            <summary>
            服务探测
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.Startup">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.InitialDatabase(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="dllpath"></param>
            <param name="assemblyName"></param>
            <param name="drop"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.UpdateDatabase(System.String,System.String,Rsd.Dudu.DBServices.TableExistOperationType)">
            <summary>
            
            </summary>
            <param name="dllpath"></param>
            <param name="assemblyName"></param>
            <param name="operationType"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.SetLogLevel(Rsd.Dudu.Log.ILogService,Rsd.Dudu.Log.LogLevelTypes,System.Boolean)">
            <summary>
            启动或关闭指定级别日志(系统重启后失效)
            </summary>
            <param name="logService"></param>
            <param name="logLevel"></param>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.SetUILogLevel(Rsd.Dudu.Web.Log.IUILogService,Rsd.Dudu.Web.Log.UILogLevelTypes,System.Boolean)">
            <summary>
            启动或关闭指定级别UI日志(系统重启后失效)
            </summary>
            <param name="logService"></param>
            <param name="logLevel"></param>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.GetSchema(System.String)">
            <summary>
            
            </summary>
            <param name="modelType"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.GetSchemaList(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.GetPageList(Rsd.Dudu.Permission.IPermSerivce,System.String)">
            <summary>
            
            </summary>
            <param name="permSerivce"></param>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.AddPage(Rsd.Dudu.Permission.IPermSerivce,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="permSerivce"></param>
            <param name="name"></param>
            <param name="text"></param>
            <param name="viewType"></param>
            <param name="modelType"></param>
            <param name="icon"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.GetRoleList(Rsd.Dudu.Permission.IPermSerivce,System.String)">
            <summary>
            
            </summary>
            <param name="permSerivce"></param>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.AddRole(Rsd.Dudu.Permission.IPermSerivce,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="permSerivce"></param>
            <param name="name"></param>
            <param name="desc"></param>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.GetApiList(Rsd.Dudu.Permission.IPermSerivce,System.String)">
            <summary>
            
            </summary>
            <param name="permSerivce"></param>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.AddApi(Rsd.Dudu.Permission.IPermSerivce,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="permSerivce"></param>
            <param name="path"></param>
            <param name="group"></param>
            <param name="text"></param>
            <param name="desc"></param>
            <param name="level"></param>
            <param name="session"></param>
            <param name="log"></param>
            <param name="thread"></param>
            <param name="block"></param>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.GetAllMyTypes">
            <summary>
            
            </summary> 
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.CheckDbSchema">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.GetMyType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.ClearCache(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.GetRouteTable">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.GetServiceList(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.GetSessionList(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.DeveloperController.GetSysMonitor(Rsd.Dudu.SysMonitorDataType,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Controllers.JobController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.JobController.Notify(Rsd.Dudu.Job.IJobService,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="action"></param> 
        </member>
        <member name="T:Rsd.Dudu.Web.Controllers.TestController">
            <summary>
            测试控制类
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.TestController.TestAllNullValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.TestController.TestAllEmptyValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.TestController.TestAllRandom">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.TestController.TestAll(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Controllers.TestController.TestModel(Rsd.Dudu.Core.IMyType,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="data"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.BaseWebPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.BaseWebPage.Item(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebPage.GetToken(System.Boolean)">
            <summary>
            
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebPage.GetSessionId">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.ControllerRuoteAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ControllerRuoteAttribute.Path">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ControllerRuoteAttribute.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ControllerRuoteAttribute.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="path">路径</param>
            <param name="name">名称</param>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.DBMemorySessionCacheService">
            <summary>
            通过 继承DBMemoryCacheService~DbMemorySession 类，限定数据存储位置
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionCacheService.Proxcy">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DBMemorySessionCacheService.#ctor(Rsd.Dudu.Core.IDBSession,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="dBSession"></param>
            <param name="group"></param>
            <param name="initial">是否初始化 缓存对象 存储表</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DBMemorySessionCacheService.Rsd#Dudu#Web#Core#ISessionCacheService#Add(System.String,System.String,System.Object,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="userId"></param>
            <param name="data"></param>
            <param name="clientIP"></param>
            <param name="host"></param>
            <param name="referer"></param>
            <param name="userAgent"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DBMemorySessionCacheService.Rsd#Dudu#Web#Core#ISessionCacheService#Add(System.String,System.String,System.Object,System.String,System.String,System.String,System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="userId"></param>
            <param name="data"></param>
            <param name="clientIP"></param>
            <param name="host"></param>
            <param name="referer"></param>
            <param name="userAgent"></param>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DBMemorySessionCacheService.Rsd#Dudu#Web#Core#ISessionCacheService#GetList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DBMemorySessionCacheService.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.DBMemorySessionModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.UserId">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.Group">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.DataType">
            <summary>
            数据类型名称
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.DataStream">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.ExpireAt">
            <summary>
            失效时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.Duration">
            <summary>
            相对过期时间 时间间隔（秒）
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.TimeSpan">
            <summary>
            相对过期时间 时间间隔
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.ClientIP">
            <summary>
            客户端IP
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.FromHost">
            <summary>
            访问域名
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.FromReferer">
            <summary>
            请求的referer
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.FromUserAgent">
            <summary>
            请求的UserAgent
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.Host">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DBMemorySessionModel.Text">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DBMemorySessionModel.#ctor">
            <summary>
            反序列化使用
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DBMemorySessionModel.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DBMemorySessionModel.#ctor(System.Object,System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="minutes">会话有效期</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DBMemorySessionModel.#ctor(System.String,System.Object,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="data"></param>
            <param name="timeSpan"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DBMemorySessionModel.GetData``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DBMemorySessionModel.SetData``1(``0)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.IJsFileListService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IJsFileListService.GetFiles(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.ISession">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ISession.ModifyTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ISession.CreateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ISession.ClientIP">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ISession.FromHost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ISession.FromReferer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ISession.FromUserAgent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ISession.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.IWebUIService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IWebUIService.SourceHost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IWebUIService.PathPrefix">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IWebUIService.DefaultIndex">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WebIndex(System.Web.HttpContext,System.String,System.String,System.String,System.String[])">
            <summary>
            起始页输出
            </summary>
            <param name="context"></param>
            <param name="redjsVersion"></param>
            <param name="appJs"></param>
            <param name="exJs"></param>
            <param name="css"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WebIndex(System.Web.HttpContext,System.String,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            起始页输出
            </summary>
            <param name="context"></param>
            <param name="redjsHost"></param>
            <param name="skin"></param>
            <param name="redjsVersion"></param>
            <param name="appJs"></param>
            <param name="exJs"></param>
            <param name="css"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WebPathMap(System.Web.HttpContext,System.String)">
            <summary>
            WEB 源码映射,并将代码类文件压缩后，输出到浏览器
            </summary>
            <param name="context"></param>
            <param name="sourceHost">指定源站</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WebPathMap(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WebPathMap(System.Web.HttpContext,System.String,System.String,System.Boolean)">
            <summary>
            WEB 源码映射,并将代码类文件压缩后，输出到浏览器
            </summary>
            <param name="context"></param>
            <param name="sourceHost">指定源站</param>
            <param name="url"></param>
            <param name="compress"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WebPathMap(System.Web.HttpContext,System.String,System.Boolean)">
            <summary>
            WEB 源码映射,并将代码类文件压缩后，输出到浏览器
            </summary>
            <param name="context"></param>
            <param name="url"></param>
            <param name="compress"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WebPathMap(System.Web.HttpContext,System.String,System.String,System.Boolean,System.String[])">
            <summary>
            WEB 源码映射,并将多个代码类文件压缩后，输出到浏览器
            </summary>
            <param name="context"></param>
            <param name="url"></param>
            <param name="sourceHost"></param>
            <param name="compress"></param>
            <param name="files">文件组</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WebPathMap(System.Web.HttpContext,System.String,System.Boolean,System.String[])">
            <summary>
            WEB 源码映射,并将多个代码类文件压缩后，输出到浏览器
            </summary>
            <param name="context"></param>
            <param name="url"></param>
            <param name="compress"></param>
            <param name="files">文件组</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.RedjsPathMap(System.Web.HttpContext,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Redjs 代码处理 并输出到浏览器
            </summary>
            <param name="context"></param>
            <param name="sourceHost">指定源站</param>
            <param name="url"></param>
            <param name="domainName">授权可引用框架的域名</param>
            <param name="urlEn">url 加密</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.RedjsPathMap(System.Web.HttpContext,System.String,System.String,System.Boolean)">
            <summary>
            Redjs 代码处理 并输出到浏览器
            </summary>
            <param name="context"></param>
            <param name="url"></param>
            <param name="domainName">授权可引用框架的域名</param>
            <param name="urlEn"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.CompressCss(System.String)">
            <summary>
            压缩CSS代码
            </summary>
            <param name="css">css代码</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.CompressCss(System.Boolean,System.String,System.Boolean,System.String[])">
            <summary>
            压缩CSS文件，以代码形式输出
            </summary>
            <param name="isAjax"></param>
            <param name="uiHost"></param>
            <param name="compress"></param>
            <param name="files">css文件</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.CompressJs(System.String)">
            <summary>
            压缩JS代码
            </summary>
            <param name="js">js代码</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.CompressJs(System.Boolean,System.String,System.Boolean,System.String[])">
            <summary>
            压缩JS文件
            </summary>
            <param name="isAjax"></param>
            <param name="uiHost"></param>
            <param name="compress"></param>
            <param name="files">js文件</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WriteCss(System.Web.HttpContext,System.String,System.String[])">
            <summary>
            将数据样式文件压缩后，以代码的方式输入到浏览器
            </summary>
            <param name="context"></param>
            <param name="uiHost"></param>
            <param name="files">样式文件</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WriteCss(System.Web.HttpContext,System.String)">
            <summary>
            数据样式代码压缩后输出到浏览器
            </summary>
            <param name="context"></param>
            <param name="css"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WriteJavaScriptEx(System.Web.HttpContext,System.String,System.String,System.String,Rsd.Dudu.Web.Core.ExJsPositionTypes)">
            <summary>
            输出javascript文件以及追加的代码到浏览器
            </summary>
            <param name="context"></param>
            <param name="uiHost">源站</param>
            <param name="jsFile">js文件目录</param>
            <param name="exJs">追加的输出内容</param>
            <param name="type">追加代码位置</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WriteJavaScript(System.Web.HttpContext,System.String,System.String[])">
            <summary>
             将源站js文件以压缩代码的方式 ，输出javascript代码到浏览器
            </summary>
            <param name="context"></param>
            <param name="uiHost"></param>
            <param name="files"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WriteScriptFiles(System.Web.HttpContext,System.String[])">
            <summary>
             以javascript文件引用的方式，将输出javascript文件到浏览器
            </summary>
            <param name="context"></param>
            <param name="files"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WriteScriptFiles(System.Web.HttpContext,System.String[],System.String)">
            <summary>
             以javascript文件引用的方式，将输出javascript文件到浏览器
            </summary>
            <param name="context"></param>
            <param name="files"></param>
            <param name="type"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WriteJavaScript(System.Web.HttpContext,System.String[])">
            <summary>
             将javascript代码输出到浏览器 
            </summary>
            <param name="context"></param>
            <param name="jsCodeList">js代码</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WriteLinkFiles(System.Web.HttpContext,System.String[])">
            <summary>
            输出文件引用到浏览器
            </summary>
            <param name="context"></param>
            <param name="files"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WriteLinkFiles(System.Web.HttpContext,System.String[],System.String)">
            <summary>
            输出样式文件引用到浏览器
            </summary>
            <param name="context"></param>
            <param name="files"></param>
            <param name="rel"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.WriteMessage(System.String,System.Boolean,System.Boolean)">
            <summary>
            输出消息
            </summary>
            <param name="msg"></param>
            <param name="back"></param>
            <param name="end"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.CloseWindow">
            <summary>
            关闭浏览器窗口
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.PictureExt(System.String)">
            <summary>
            获取图片文件扩展名
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.RequestFileBytes(System.Boolean,System.String,System.String)">
            <summary>
             请求文件，原样输出，不压缩
            </summary>
            <param name="isAjax"></param>
            <param name="uiHost"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.RequestFileContent(System.Boolean,System.String,System.String)">
            <summary>
             请求文件，原样输出，不压缩
            </summary>
            <param name="isAjax"></param>
            <param name="uiHost"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.RequestFileStream(System.Boolean,System.String,System.String)">
            <summary>
             请求文件，原样输出，不压缩
            </summary>
            <param name="isAjax"></param>
            <param name="uiHost"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IWebUIService.GetSafeHtml(System.String)">
            <summary>
            html 文件安全过滤
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1">
            <summary>
            Http运行时对象缓存服务
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.IsLocalCache">
            <summary>
            是否是本地存储
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.Clear(System.String)">
            <summary>
            
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.GetValue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.GetValue``1(System.String,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <param name="group"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.GetList(System.String)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.Get(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.Put(Rsd.Dudu.Cache.ICacheObject[])">
            <summary>
            
            </summary>
            <param name="objs"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.Put(System.String,System.String,`0,System.DateTime)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="key"></param>
            <param name="data"></param>
            <param name="expireAt"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.Put``1(System.String,System.String,``0,System.TimeSpan)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <param name="group"></param>
            <param name="key"></param>
            <param name="data"></param>
            <param name="timeSpan"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.Put``1(System.String,System.String,``0,System.DateTime)">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <param name="group"></param>
            <param name="key"></param>
            <param name="data"></param>
            <param name="expireAt"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.Contains(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.Remove(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.OnRemoveCallBack(System.String,System.Object,System.Web.Caching.CacheItemRemovedReason)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="r"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.OnUpdateCallBack(System.String,System.Web.Caching.CacheItemUpdateReason,System.Object@,System.Web.Caching.CacheDependency@,System.DateTime@,System.TimeSpan@)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="reason"></param>
            <param name="expensiveObject"></param>
            <param name="dependency"></param>
            <param name="absoluteExpiration"></param>
            <param name="slidingExpiration"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.HttpRuntimeCacheProvider`1.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.JsFileListService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.JsFileListService.Proxcy">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.JsFileListService.GetFiles(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.JsFileListService.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.RedjsConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RedjsConfig.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RedjsConfig.ReleaseTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RedjsConfig.CopyRight">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RedjsConfig.Remark">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RedjsConfig.Script">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.RedjsConfig.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="script"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.ISchemaCacheServcie">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ISchemaCacheServcie.CacheProvider">
            <summary>
            用于存储的缓存服务类型
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ISchemaCacheServcie.Add(System.String,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ISchemaCacheServcie.Get(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ISchemaCacheServcie.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ISchemaCacheServcie.ContainsKey(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ISchemaCacheServcie.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.PluginConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.Name">
            <summary>
            产品名称
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.Code">
            <summary>
            插件编码
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.Category">
            <summary>
            插件分类
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.ErrorCodeStart">
            <summary>
            错误代码起始值
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.ErrorCodeEnd">
            <summary>
            错误代码结束值
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.Logo">
            <summary>
            logo
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.Developer">
            <summary>
            开发者
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.License">
            <summary>
            版权
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.ErrorCodeType">
            <summary>
            错误代码类
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.Controllers">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.ModelTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.PluginConfig.ControllerPath">
            <summary>
            Controller注册路径
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Core.PluginConfig._assembly">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.PluginConfig.#ctor(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="assembly"></param>
            <param name="path"></param>
            <param name="category"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.PluginConfig.#ctor(System.Reflection.Assembly,System.Type,System.Type,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="assembly"></param>
            <param name="modelBase"></param>
            <param name="controllerBase"></param>
            <param name="path">Controller注册路径</param>
            <param name="category"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.PluginConfig.InitialTables(Rsd.Dudu.DBServices.TableExistOperationType)">
            <summary>
            初始化 数据表
            </summary>
            <param name="operationType"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.PluginConfig.InitialTables(Rsd.Dudu.Core.IDBSession,Rsd.Dudu.DBServices.TableExistOperationType)">
            <summary>
            初始化 数据表
            </summary>
            <param name="db"></param>
            <param name="operationType"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.PluginConfig.InitialTable``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.PluginConfig.Initial">
            <summary>
            插件初始化：遍历ModelType 和Controller
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.PluginConfig.CacheModelTypes">
            <summary>
            缓存MyType
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.PluginConfig.RegistControllers(System.String)">
            <summary>
            
            </summary>
            <param name="path">Controller注册路径</param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.SuccessResult">
            <summary>
            data 数据可以被正确解析
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SuccessResult.#ctor(System.Object,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="msg"></param>
            <param name="code"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SuccessResult.#ctor(System.Object,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="msg"></param>
            <param name="code"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.SuccessResult`1">
            <summary>
             data 数据可以被正确解析
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SuccessResult`1.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SuccessResult`1.#ctor(`0,System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="data"></param>
            <param name="codeIsValue"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.ErrorResult">
            <summary>
            返回系统执行失败结果，data 数据可能无法解释为目标结构
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ErrorResult.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="msg"></param>
            <param name="data"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ErrorResult.#ctor(System.String,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="msg"></param>
            <param name="data"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.ErrorResult`1">
            <summary>
            返回系统执行失败结果，data 数据可能无法解释为目标结构
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ErrorResult`1.#ctor(`0,System.Object[])">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="args"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ErrorResult`1.#ctor(`0,System.Object,System.Object[])">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="data"></param>
            <param name="args"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ErrorResult`1.#ctor(`0,System.Boolean,System.Object[])">
            <summary>
            无返回数据
            </summary>
            <param name="code"></param>
            <param name="codeIsValue">code是数值</param>
            <param name="args"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ErrorResult`1.#ctor(`0,System.Object,System.Boolean,System.Object[])">
            <summary>
            有返回数据
            </summary>
            <param name="code"></param>
            <param name="data"></param>
            <param name="codeIsValue">code是数值</param>
            <param name="args"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.SchemasCacheService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.SchemasCacheService.Proxcy">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.SchemasCacheService.CacheProvider">
            <summary>
            用于存储的缓存服务类型
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SchemasCacheService.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SchemasCacheService.#ctor(Rsd.Dudu.Cache.ICacheProvider)">
            <summary>
            
            </summary>
            <param name="cacheService"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SchemasCacheService.Rsd#Dudu#Web#Core#ISchemaCacheServcie#Add(System.String,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SchemasCacheService.Rsd#Dudu#Web#Core#ISchemaCacheServcie#Get(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SchemasCacheService.Rsd#Dudu#Web#Core#ISchemaCacheServcie#Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SchemasCacheService.Rsd#Dudu#Web#Core#ISchemaCacheServcie#ContainsKey(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SchemasCacheService.Rsd#Dudu#Web#Core#ISchemaCacheServcie#Remove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SchemasCacheService.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.IPramaRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IPramaRule.Max">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IPramaRule.Min">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IPramaRule.NotEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IPramaRule.DefauleValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IPramaRule.PramaName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IPramaRule.PramaNameCN">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IPramaRule.RegularExpress">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IPramaRule.Filter">
            <summary>
            安全过滤等级
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IPramaRule.ValueType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IPramaRule.TargetType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IPramaRule.Validate(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IPramaRule.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.IApiDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IApiDescription.ServiceName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IApiDescription.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IApiDescription.IsWebMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IApiDescription.EnableSession">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IApiDescription.TypeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.IApiDescription.PramaRuleList">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.RequestClientInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.URL">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.Accept">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.AcceptEncoding">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.AcceptLanguage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.Connection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.ContentLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.ContentType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.HostIP">
            <summary>
            远程客户端主机IP
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.HostName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.Origin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.Refer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.UserAgent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.DNT">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.Cookies">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.SessionId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.ClientIp">
            <summary>
            网络参数总获取
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.BrowserType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.BrowserMajorVersion">
            <summary>
            浏览器的主版本号
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.BrowserVersion">
            <summary>
            浏览器的完整版本号
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.BrowserPlatform">
            <summary>
            使用平台的名字
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.IsMobile">
            <summary>
            是否是移动设备
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.RequestClientInfo.BrowserId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.ISessionCacheService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ISessionCacheService.CacheProvider">
            <summary>
            用于存储的缓存服务类型
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ISessionCacheService.Add(System.String,System.String,System.Object,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="userId"></param>
            <param name="data"></param>
            <param name="clientIP"></param>
            <param name="host"></param>
            <param name="referer"></param>
            <param name="userAgent"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ISessionCacheService.Add(System.String,System.String,System.Object,System.String,System.String,System.String,System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="userId"></param>
            <param name="data"></param>
            <param name="clientIP"></param>
            <param name="host"></param>
            <param name="referer"></param>
            <param name="userAgent"></param>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ISessionCacheService.GetList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ISessionCacheService.Get(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ISessionCacheService.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ISessionCacheService.RemoveAll">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.IResponseResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.IResponseResult.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.DataResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DataResult.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DataResult.#ctor(System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="success"></param>
            <param name="msg"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DataResult.#ctor(System.Boolean,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="success"></param>
            <param name="msg"></param>
            <param name="data"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DataResult.#ctor(System.String,System.Boolean,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="success"></param>
            <param name="msg"></param>
            <param name="data"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.DataResult`1">
            <summary>
            
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DataResult`1.Code">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DataResult`1.Success">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DataResult`1.Msg">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.DataResult`1.Data">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DataResult`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DataResult`1.#ctor(System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="success"></param>
            <param name="msg"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DataResult`1.#ctor(System.Boolean,System.String,`0)">
            <summary>
            
            </summary>
            <param name="success"></param>
            <param name="msg"></param>
            <param name="data"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.DataResult`1.#ctor(System.String,System.Boolean,System.String,`0)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="success"></param>
            <param name="msg"></param>
            <param name="data"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.ResponseString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ResponseString.ReturnValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ResponseString.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ResponseString.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.ResponseXml">
            <summary>
            return string.Format("<xml><return_code><![CDATA[{0}]]></return_code><return_msg><![CDATA[{1}]]></return_msg></xml>", this.ReturnCode, this.ReturnMsg);
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ResponseXml.ReturnCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ResponseXml.ReturnMsg">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ResponseXml.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="returnCode"></param>
            <param name="returnMsg"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ResponseXml.ToString">
            <summary>
            return string.Format("<xml><return_code><![CDATA[{0}]]></return_code><return_msg><![CDATA[{1}]]></return_msg></xml>", this.ReturnCode, this.ReturnMsg);
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.ResponseView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ResponseView.UIView">
            <summary>
            前端View页面
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.ResponseView.DataModel">
            <summary>
            数据模型
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ResponseView.#ctor(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="view"></param>
            <param name="data"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.ResponseView.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.Session">
            <summary>
            内部使用类
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.Group">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.Key">
            <summary>
            键值
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.UserId">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.DataType">
            <summary>
            数据类型名称
            </summary> 
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.ExpireAt">
            <summary>
            失效时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.TimeSpan">
            <summary>
            相对过期时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.Duration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.ModifyTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.ClientIP">
            <summary>
            客户端IP
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.FromHost">
            <summary>
            访问域名
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.FromReferer">
            <summary>
            请求的referer
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.FromUserAgent">
            <summary>
            请求的UserAgent
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.Host">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.Token">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.Session.Text">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.Session.#ctor">
            <summary>
            反序列化使用
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.Session.#ctor(System.String,System.Object,System.Int32)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="data"></param>
            <param name="minutes">会话有效期</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.Session.#ctor(System.String,System.String,System.Object,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="group"></param>
            <param name="key"></param>
            <param name="data"></param>
            <param name="timeSpan">会话有效期</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.Session.GetData``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.Session.SetData``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.Session.GetInternalIP">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.SessionCacheService">
            <summary>
            使用的是 HttpRuntime.Cache
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.SessionCacheService.CacheProvider">
            <summary>
            用于存储的缓存服务类型
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.SessionCacheService.Proxcy">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SessionCacheService.#ctor">
            <summary>
            使用 HttpRuntime 缓存
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SessionCacheService.#ctor(Rsd.Dudu.Cache.ICacheProvider)">
            <summary>
            使用指定 缓存 如： Redis ,Memcahce
            </summary>
            <param name="cacheService"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SessionCacheService.Add(System.String,System.String,System.Object,System.String,System.String,System.String,System.String,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="userId"></param>
            <param name="data"></param>
            <param name="clientIP"></param>
            <param name="host"></param>
            <param name="referer"></param>
            <param name="userAgent"></param>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SessionCacheService.Add(System.String,System.String,System.Object,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="userId"></param>
            <param name="data"></param>
            <param name="clientIP"></param>
            <param name="host"></param>
            <param name="referer"></param>
            <param name="userAgent"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SessionCacheService.Get(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SessionCacheService.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SessionCacheService.RemoveAll">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SessionCacheService.GetList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.SessionCacheService.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.WebUIService">
            <summary>
            前端js,css文件压缩,js 混淆
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.WebUIService.SourceHost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.WebUIService.PathPrefix">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.WebUIService.DefaultIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Core.WebUIService.compressService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="sourceHost">源站主机地址</param>
            <param name="pathPrefix">UIController注册路径</param>
            <param name="defaultIndex">默认首页</param>
            <param name="isDebug"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.RequestFileBytes(System.Boolean,System.String,System.String)">
            <summary>
            请求文件，原样输出，不压缩
            </summary>
            <param name="isAjax"></param>
            <param name="uiHost"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.RequestFileStream(System.Boolean,System.String,System.String)">
            <summary>
            请求文件，原样输出，不压缩
            </summary>
            <param name="isAjax"></param>
            <param name="uiHost"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.RequestFileContent(System.Boolean,System.String,System.String)">
            <summary>
            请求文件，原样输出，不压缩
            </summary>
            <param name="isAjax"></param>
            <param name="uiHost">源站</param>
            <param name="file">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.CompressCss(System.Boolean,System.String,System.Boolean,System.String[])">
            <summary>
            压缩CSS文件代码，以代码的形式输出
            </summary>
            <param name="isAjax"></param>
            <param name="uiHost">源站</param>
            <param name="compress"></param>
            <param name="files">CSS文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.CompressJs(System.Boolean,System.String,System.Boolean,System.String[])">
            <summary>
            压缩JS文件代码，以代码的形式输出
            </summary>
            <param name="isAjax"></param>
            <param name="uiHost">源站</param>
            <param name="compress"></param>
            <param name="files">js文件</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WebPathMap(System.Web.HttpContext,System.String)">
             <summary>
            WEB 源码映射,并将代码类文件压缩后，输出到浏览器
             </summary>
             <param name="context"></param>
             <param name="sourceHost">源站</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WebPathMap(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WebPathMap(System.Web.HttpContext,System.String,System.String,System.Boolean)">
            <summary>
            将源站文件压缩后映射到url上。
            </summary>
            <param name="context"></param>
            <param name="url"></param>
            <param name="sourceHost"></param>
            <param name="compress"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WebPathMap(System.Web.HttpContext,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="url"></param>
            <param name="compress"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WebPathMap(System.Web.HttpContext,System.String,System.String,System.Boolean,System.String[])">
            <summary>
            将源站多个文件压缩后映射到一个url上。
            </summary>
            <param name="context"></param>
            <param name="requestUrl">远程请求路径</param>
            <param name="sourceHost">源码根目录</param>
            <param name="compress">是否压缩</param>
            <param name="files">源站目标源码文件组</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WebPathMap(System.Web.HttpContext,System.String,System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="requestUrl"></param>
            <param name="compress"></param>
            <param name="files"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WebIndex(System.Web.HttpContext,System.String,System.String,System.String,System.String[])">
            <summary>
            构建起始页 并输出到浏览器
            </summary>
            <param name="context"></param>
            <param name="redjsVersion"></param>
            <param name="appJs"></param>
            <param name="exJs"></param>
            <param name="css"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WebIndex(System.Web.HttpContext,System.String,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            构建起始页 并输出到浏览器
            </summary>
            <param name="context"></param>
            <param name="redjsHost">http://js.redmicro.cn/</param>
            <param name="skin">Blue</param>
            <param name="redjsVersion"></param>
            <param name="appJs">启动脚本</param>
            <param name="exJs">外部js</param>
            <param name="css"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.RedjsPathMap(System.Web.HttpContext,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Redjs 代码处理 并输出到浏览器
            </summary>
            <param name="context"></param>
            <param name="sourceHost">源站</param>
            <param name="url"></param>
            <param name="domainName">授权可引用框架的域名</param>
            <param name="urlEn">url 加密</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.RedjsPathMap(System.Web.HttpContext,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="url"></param>
            <param name="domainName">授权可引用框架的域名</param>
            <param name="urlEn"></param>
        </member>
        <member name="P:Rsd.Dudu.Web.Core.WebUIService.Proxcy">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.PictureExt(System.String)">
            <summary>
            
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.CompressCss(System.String)">
            <summary>
            压缩CSS
            </summary>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.CompressJs(System.String)">
            <summary>
            压缩JS脚本
            </summary>
            <param name="js"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WriteJavaScript(System.Web.HttpContext,System.String[])">
            <summary>
             输出javascript代码到浏览器
            </summary>
            <param name="context"></param>
            <param name="jsCodeList">js代码</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WriteJavaScriptEx(System.Web.HttpContext,System.String,System.String,System.String,Rsd.Dudu.Web.Core.ExJsPositionTypes)">
            <summary>
             将源站js文件以压缩代码的方式 ，输出javascript文件以及追加的代码到浏览器
            </summary>
            <param name="context"></param>
            <param name="uiHost">源站</param>
            <param name="jsFile">js文件目录</param>
            <param name="exJs">追加的输出内容</param>
            <param name="type">追加代码位置</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WriteJavaScript(System.Web.HttpContext,System.String,System.String[])">
            <summary>
            将源站js文件以压缩代码的方式 ，输出javascript代码到浏览器
            </summary>
            <param name="context"></param>
            <param name="uiHost"></param>
            <param name="files"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WriteScriptFiles(System.Web.HttpContext,System.String[])">
            <summary>
             以javascript文件引用的方式，将输出javascript文件到浏览器
            </summary>
            <param name="context"></param>
            <param name="files"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WriteScriptFiles(System.Web.HttpContext,System.String[],System.String)">
            <summary>
            以javascript文件引用的方式，将输出javascript文件到浏览器
            </summary>
            <param name="context"></param>
            <param name="type"></param>
            <param name="files"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WriteCss(System.Web.HttpContext,System.String,System.String[])">
            <summary>
            将数据样式文件压缩后，以代码的方式输入到浏览器
            </summary>
            <param name="context"></param>
            <param name="uiHost"></param>
            <param name="files">文件路径</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WriteCss(System.Web.HttpContext,System.String)">
            <summary>
            将数据样式代码压缩后， 输入到浏览器
            </summary>
            <param name="context"></param>
            <param name="css"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WriteLinkFiles(System.Web.HttpContext,System.String[])">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="files"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WriteLinkFiles(System.Web.HttpContext,System.String[],System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="rel"></param>
            <param name="files"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.WriteMessage(System.String,System.Boolean,System.Boolean)">
            <summary>
            输出消息
            </summary>
            <param name="msg"></param>
            <param name="back"></param>
            <param name="end"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.CloseWindow">
            <summary>
            关闭当前页面
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.GetSafeHtml(System.String)">
            <summary>
            html 文件安全过滤
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Core.WebUIService.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Core.ExJsPositionTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Core.ExJsPositionTypes.Start">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Core.ExJsPositionTypes.End">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.FilterLevel">
            <summary>
            API 接口参数安全值过滤等级
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.FilterLevel.None">
            <summary>
            不过滤
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.FilterLevel.Sql">
            <summary>
            过滤SQL 关键字
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.FilterLevel.Javascript">
            <summary>
            过滤 javascript 关键字
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.FilterLevel.Shell">
            <summary>
            过滤 shell脚本 关键字
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.FilterLevel.Bat">
            <summary>
            过滤 bat 关键字
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.FilterLevel.VB">
            <summary>
            过滤 vb脚本 关键字
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.FilterLevel.Python">
            <summary>
            过滤 python 关键字
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Script.CompressService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.CompressService.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.CompressService.CompressJs(System.String)">
            <summary>
            
            </summary>
            <param name="js"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.CompressService.CompressCss(System.String)">
            <summary>
            
            </summary>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Script.Minifier">
            <summary>
            提供压缩 JavaScript 代码的能力。
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.Minifier.#ctor(System.IO.TextReader)">
            <summary>
            初始化 <see cref="!:JavaScriptMinifier"/> 类的新实例。
            </summary>
            <param name="jsReader">包含要压缩的 JavaScript 代码的 <see cref="T:System.IO.TextReader"/>。</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.Minifier.Minify(System.Text.StringBuilder)">
            <summary>
            压缩指定的 JavaScript 代码。
            </summary>
            <param name="js">包含要压缩的 JavaScript 代码的 <see cref="T:System.Text.StringBuilder"/>。</param>
            <returns>返回包含压缩后的 JavaScript 代码的 <see cref="T:System.Text.StringBuilder"/>。</returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.Minifier.Minify(System.String)">
            <summary>
            压缩指定的 JavaScript 代码。
            </summary>
            <param name="jsCode">要压缩的 JavaScript 代码。</param>
            <returns>返回包含压缩后的 JavaScript 代码的 <see cref="T:System.Text.StringBuilder"/>。</returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.Minifier.Minify(System.IO.TextReader)">
            <summary>
            压缩指定的 JavaScript 代码。
            </summary>
            <param name="jsReader">包含要压缩的 JavaScript 代码的 <see cref="T:System.IO.TextReader"/>。</param>
            <returns>返回包含压缩后的 JavaScript 代码的 <see cref="T:System.Text.StringBuilder"/>。</returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Script.ParsedScript">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Script.ScriptEngine">
            <summary>
            Represents a Windows Script Engine such as JScript, VBScript, etc.
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Script.ScriptEngine.MethodName">
            <summary>
            The name of the function used for simple evaluation.
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Script.ScriptEngine.DefaultLanguage">
            <summary>
            The default scripting language name.
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Script.ScriptEngine.JavaScriptLanguage">
            <summary>
            The JavaScript or jscript scripting language name.
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Script.ScriptEngine.VBScriptLanguage">
            <summary>
            The javascript or jscript scripting language name.
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Script.ScriptEngine.ChakraClsid">
            <summary>
            The chakra javascript engine CLSID. The value is {16d51579-a30b-4c8b-a276-0ff4dc41e755}.
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptEngine.GetVersion(System.String)">
            <summary>
            Determines if a script engine with the input name exists.
            </summary>
            <param name="language">The language.</param>
            <returns>true if the engine exists; false otherwise.</returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptEngine.#ctor(System.String)">
            <summary> 
            Initializes a new instance of the <see cref="T:Rsd.Dudu.Web.Script.ScriptEngine"/> class. 
            </summary> 
            <param name="language">The scripting language. Standard Windows Script engines names are 'jscript' or 'vbscript'.</param> 
        </member>
        <member name="P:Rsd.Dudu.Web.Script.ScriptEngine.Version">
            <summary>
            Gets the engine version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="P:Rsd.Dudu.Web.Script.ScriptEngine.Name">
            <summary>
            Gets the engine name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptEngine.GetProperty``1(System.Int32,``0)">
            <summary>
            Gets a script engine property.
            </summary>
            <typeparam name="T">The expected property type.</typeparam>
            <param name="index">The property index.</param>
            <param name="defaultValue">The default value if not found.</param>
            <returns>The value of the property or the default value.</returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptEngine.TryGetProperty(System.Int32,System.Object@)">
            <summary>
            Gets a script engine property.
            </summary>
            <param name="index">The property index.</param>
            <param name="value">The value.</param>
            <returns>true if the property was successfully got; false otherwise.</returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptEngine.SetProperty(System.Int32,System.Object)">
            <summary>
            Sets a script engine property.
            </summary>
            <param name="index">The property index.</param>
            <param name="value">The value.</param>
            <returns>true if the property was successfully set; false otherwise.</returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptEngine.SetNamedItem(System.String,System.Object)">
            <summary> 
            Adds the name of a root-level item to the scripting engine's name space. 
            </summary> 
            <param name="name">The name. May not be null.</param> 
            <param name="value">The value. It must be a ComVisible object.</param> 
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptEngine.Eval(System.String,System.String)">
            <summary> 
            Evaluates an expression using the specified language. 
            </summary> 
            <param name="language">The language.</param> 
            <param name="expression">The expression. May not be null.</param> 
            <returns>The result of the evaluation.</returns> 
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptEngine.Eval(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary> 
            Evaluates an expression using the specified language, with an optional array of named items. 
            </summary> 
            <param name="language">The language.</param> 
            <param name="expression">The expression. May not be null.</param> 
            <param name="namedItems">The named items array.</param> 
            <returns>The result of the evaluation.</returns> 
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptEngine.Eval(System.String)">
            <summary> 
            Evaluates an expression. 
            </summary> 
            <param name="expression">The expression. May not be null.</param> 
            <returns>The result of the evaluation.</returns> 
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptEngine.Parse(System.String)">
            <summary> 
            Parses the specified text and returns an object that can be used for evaluation. 
            </summary> 
            <param name="text">The text to parse.</param> 
            <returns>An instance of the ParsedScript class.</returns> 
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptEngine.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Script.ScriptException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptException.#ctor(System.Exception)">
            <summary>
            
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Script.ScriptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Rsd.Dudu.Web.Script.ScriptException.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Script.ScriptException.Line">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Script.ScriptException.Column">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Script.ScriptException.Number">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Script.ScriptException.Text">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Service.IApiService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IApiService.Description">
            <summary>
            接口描述
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IApiService.Level">
            <summary>
            Public：公共免费接口,不需要授权,但可以通过ServiceBindIPAttribute属性限定IP
            Custom：定制付费接口,通过但可以通过ServiceBindIPAttribute属性授权指定账户（appid 和 apptoken）以及指定IP访问
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IApiService.CheckSession">
            <summary>
            是否验证session,一般为通过___key参数传递
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IApiService.ApiLogEnable">
            <summary>
            是否记录API请求日志，如果需要记录必须保证已注册IUILogService服务
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IApiService.InThread">
            <summary>
            在线程中执行
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IApiService.IsBlock">
            <summary>
            系统被特定业务独占使用，拒绝其他请求
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IApiService.BlockMsg">
            <summary>
            拒绝访问提示信息
            </summary> 
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IApiService.EncryptKey">
            <summary>
            加密key
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IApiService.EncryptHandler">
            <summary>
            指定加密方法
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IServiceBindIP.Allowed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IServiceBindIP.AppId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IServiceBindIP.AppToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IServiceBindIP.IPList">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.IServiceBindIP.Validate(System.String)">
            <summary>
            
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.IServiceBindIP.Validate(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="appToken"></param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IServiceCrossDomain.Allowed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IServiceCrossDomain.AppId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IServiceCrossDomain.AppToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.IServiceCrossDomain.DomainList">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.IServiceCrossDomain.Validate(System.String)">
            <summary>
            
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.IServiceCrossDomain.Validate(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="appToken"></param>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Service.ServiceBindIPAttribute">
            <summary>
            主要用于服务端对接权限控制
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ServiceBindIPAttribute.AppId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ServiceBindIPAttribute.AppToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ServiceBindIPAttribute.IPList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ServiceBindIPAttribute.Allowed">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ServiceBindIPAttribute.#ctor">
            <summary>
            任意用户任意IP可访问
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ServiceBindIPAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
            限制指定IP可访问或不可访问
            </summary>
            <param name="allowed">TRUE为可访问，FLASE不可访问</param>
            <param name="list">IP列表,支持网段格式,不支持localhost</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ServiceBindIPAttribute.#ctor(System.String,System.String,System.Boolean,System.String[])">
            <summary>
            限制指定账户以及指定IP可访问或不可访问
            </summary>
            <param name="appId">*表示任意用户</param>
            <param name="appToken">*表示任意用户</param>
            <param name="allowed">TRUE为可访问，FLASE不可访问</param>
            <param name="list">IP列表,支持网段格式,不支持localhost</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ServiceBindIPAttribute.Validate(System.String,System.String,System.String)">
            <summary>
             限定APP使用的服务（如付费服务，定制服务等），验证身份和IP
            </summary>
            <param name="appId"></param>
            <param name="appToken"></param>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ServiceBindIPAttribute.Validate(System.String)">
            <summary>
            没有限定APP使用的服务（如公共服务，免费服务等），只验证IP
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Service.ServiceCrossDomainAttribute">
            <summary>
             主要用于前端对接权限控制
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ServiceCrossDomainAttribute.AppId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ServiceCrossDomainAttribute.AppToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ServiceCrossDomainAttribute.DomainList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ServiceCrossDomainAttribute.Allowed">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ServiceCrossDomainAttribute.#ctor">
            <summary>
            任意用户任意网站可跨域访问
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ServiceCrossDomainAttribute.#ctor(System.Boolean,System.String[])">
            <summary>
            限制指定网站可跨域访问或不可跨域访问
            </summary>
            <param name="allowed">TRUE为可跨域访问，FLASE不可跨域访问</param>
            <param name="list">网站列表</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ServiceCrossDomainAttribute.#ctor(System.String,System.String,System.Boolean,System.String[])">
            <summary>
            限制指定账户以及指定网站可跨域访问或不可跨域访问
            </summary>
            <param name="appId">*表示任意用户</param>
            <param name="appToken">*表示任意用户</param>
            <param name="allowed">TRUE为可跨域访问，FLASE不可跨域访问</param>
            <param name="list">网站列表</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ServiceCrossDomainAttribute.Validate(System.String,System.String,System.String)">
            <summary>
             限定APP使用的服务（如付费服务，定制服务等），验证身份和IP
            </summary>
            <param name="appId"></param>
            <param name="appToken"></param>
            <param name="referer">http请求referer</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ServiceCrossDomainAttribute.Validate(System.String)">
            <summary>
            没有限定APP使用的服务（如公共服务，免费服务等），只验证IP
            </summary>
            <param name="referer">http请求referer</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ServiceCrossDomainAttribute.RefererInDomainList(System.String)">
            <summary>
            
            </summary>
            <param name="referer"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Service.ServiceAccessLevel">
            <summary>
            API服务访问级别
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Service.ServiceAccessLevel.Public">
            <summary>
            公共免费接口,不需要授权,但可以限定IP
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Service.ServiceAccessLevel.Customized">
            <summary>
            定制付费接口,必须授权appid 和 apptoken以及指定IP访问
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Service.ServiceAccessLevel.NeedPermssion">
            <summary>
            有限权限接口，请求者需要获得授权后，才能使用
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Service.ServiceAccessLevel.Admin">
            <summary>
            管理端接口，仅管理端可以访问
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Service.ServiceAccessLevel.Client">
            <summary>
            前端接口，仅提供给前端业务使
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Service.ServiceAccessLevel.CustomizedAndPermssion">
            <summary>
            定制有权限限制接口
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Service.ServiceAccessLevel.AdminAndPermssion">
            <summary>
            后端有权限限制接口
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Service.ServiceAccessLevel.ClientAndPermssion">
            <summary>
            前端有权限限制接口
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Service.ApiDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiDescription.TypeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiDescription.ServiceName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiDescription.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiDescription.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiDescription.CheckSession">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiDescription.PramaRuleList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiDescription.EnableSession">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiDescription.IsWebMethod">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Service.ApiServiceAttribute">
            <summary>
             接口描述属性： 1、可通过Level属性设置访问接口权限，2、可通过CheckSession属性设置是否验证Session
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiServiceAttribute.Level">
            <summary>
            Public：公共免费接口,不需要授权,但可以通过ServiceBindIPAttribute属性限定IP
            Custom：定制付费接口,通过但可以通过ServiceBindIPAttribute属性授权指定账户（appid 和 apptoken）以及指定IP访问
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiServiceAttribute.Description">
            <summary>
            接口描述
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiServiceAttribute.CheckSession">
            <summary>
            是否验证session,一般为通过___key参数传递
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiServiceAttribute.ApiLogEnable">
            <summary>
            是否记录API请求日志，如果需要记录必须保证已注册IUILogService服务
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiServiceAttribute.InThread">
            <summary>
            在线程中执行
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiServiceAttribute.IsBlock">
            <summary>
            系统被特定业务独占使用，拒绝其他请求
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiServiceAttribute.BlockMsg">
            <summary>
            拒绝访问提示信息
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiServiceAttribute.EncryptKey">
            <summary>
            加密key
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Service.ApiServiceAttribute.EncryptHandler">
            <summary>
            指定加密方法
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ApiServiceAttribute.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            不加密
            </summary>
            <param name="des"></param>
            <param name="checkSession"></param>
            <param name="apiLogEnable"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ApiServiceAttribute.#ctor(System.String,System.Boolean,Rsd.Dudu.Web.Service.ServiceAccessLevel,System.Boolean,System.String,System.String)">
            <summary>
            加密 返回
            </summary>
            <param name="des"></param>
            <param name="checkSession"></param>
            <param name="level"></param>
            <param name="apiLogEnable"></param>
            <param name="enKey"></param>
            <param name="enHandler"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ApiServiceAttribute.#ctor(System.String,System.Boolean,Rsd.Dudu.Web.Service.ServiceAccessLevel,System.Boolean,System.String)">
            <summary>
            AesEncrypt加密 返回
            </summary>
            <param name="des">描述</param>
            <param name="checkSession"></param>
            <param name="level"></param>
            <param name="apiLogEnable"></param>
            <param name="enKey">AesEncrypt 加密密钥</param>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ApiServiceAttribute.#ctor(System.String,System.Boolean,Rsd.Dudu.Web.Service.ServiceAccessLevel,System.Boolean,System.Boolean)">
            <summary>
             不加密 返回
            </summary>
            <param name="des"></param>
            <param name="checkSession"></param>
            <param name="level"></param>
            <param name="apiLogEnable"></param>
            <param name="inThread"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Service.ApiServiceAttribute.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="des"></param>
            <param name="blockMsg"></param>
            <param name="checkSession"></param>
            <param name="apiLogEnable"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.ApplicationInitial">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.WebApplication">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.SessionCacheProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.SchemaCacheProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.CacheProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.SysTitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.LoginUrl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.Errors">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.StartTime">
            <summary>
            初始化 开始时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.EndTime">
            <summary>
            初始化 结束时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.IsReady">
            <summary>
            系统已启动完毕
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.Success">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.IsBusying">
            <summary>
            系统被特定业务独占使用，拒绝其他请求
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.BusyingMsg">
            <summary>
            拒绝访问提示信息
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.Plugins">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.Application">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.CacheService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.#ctor(System.Web.HttpApplication,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="application"></param>
            <param name="title"></param>
            <param name="loginUrl"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.InitialConfig(Rsd.Dudu.Web.ApplicationInitial)">
            <summary>
            
            </summary>
            <param name="initialInvoke"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.AddCache(System.String,System.Object,System.DateTime)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expireAt"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.AddCache(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.AddCache(System.String,System.Object,System.Int64)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="timespan">毫秒数</param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.SetBusying(System.String,System.Boolean)">
            <summary>
            系统独占使用，阻止其他请求访问
            </summary>
            <param name="msg"></param>
            <param name="once">true:仅当前线程（请求）独占系统使用,false:系统阻止任何所有请求，例如：系统维护中</param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.EndBusying(System.Boolean)">
            <summary>
            结束独占使用，允许其他请求执行
            </summary>
            <param name="once">true:仅当前线程（请求）释放独占资源,false:系统阻止任何所有请求，例如：系统维护中</param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.GetCacheData``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.RemoveAll">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.WebApplication.InstanceIsReady">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.AddGlobalCache(System.String,System.Object,System.DateTime)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expireAt"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.AddGlobalCache(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.AddGlobalCache(System.String,System.Object,System.Int64)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="timespan">毫秒数</param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.RemoveGlobalCache(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.ClearGlobalCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.GetGlobalCache``1(System.String)">
            <summary>
            当前线程独占系统使用，阻止其他请求访问
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.SetApplicationBusying(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.EndApplicationBusying">
            <summary>
            当前线程释放独占资源，允许其他请求执行
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.Initial(System.Web.HttpApplication,Rsd.Dudu.Web.ApplicationInitial,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="application"></param>
            <param name="initialInvoke"></param>
            <param name="title"></param>
            <param name="loginUrl"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.SetCacheService(Rsd.Dudu.Cache.ICacheProvider)">
            <summary>
            
            </summary>
            <param name="cacheService"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.LoadPlugins(Rsd.Dudu.Web.Core.PluginConfig[])">
            <summary>
            加载插件：初始化(遍历ModelType 和Controller)=>缓存MyType=>注册controller 
            </summary>
            <param name="plugins"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.ClearPlugins">
            <summary>
            清除所有插件
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.RegistController(Rsd.Dudu.Web.Controllers.BaseHttpHandler)">
            <summary>
            
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.RegistController(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="handlerName"></param>
            <param name="handlerType"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.RegistController(System.String,Rsd.Dudu.Web.Controllers.BaseHttpHandler)">
            <summary>
            
            </summary>
            <param name="handlerName"></param>
            <param name="handler"></param>    
        </member>
        <member name="M:Rsd.Dudu.Web.WebApplication.RegistController``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="handlerName"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.BaseWebService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.BaseWebService.HasResponsed">
            <summary>
            已向前段返回数据，后续操作挂起
            </summary> 
        </member>
        <member name="F:Rsd.Dudu.Web.BaseWebService._beginBiz">
            <summary>
            业务开始处理方法执行标识
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.BaseWebService._handleBiz">
            <summary>
            业务处理标识
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.BaseWebService._endBiz">
            <summary>
            业务结束处理方法执行标识
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.BaseWebService.Item(System.String)">
            <summary>
            在BeginBiz方法之后才可访问。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.GetAppId(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.GetAppToken(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.GetAccessToken(System.Boolean)">
            <summary>
            获取访问授权Token
            </summary>
            <param name="session">是否获取系统sessionid,等于true时一般用于page页面</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.GetSessionId">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.ValidateAccessToken">
            <summary>
            验证访问授权Token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.GetSession``1">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.ValidateSession">
            <summary>
            验证会话，有输出。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.ResetSession">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.SignIn(System.String,System.Object,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="userName"></param>
            <param name="data"></param>
            <param name="clientIp"></param>
            <param name="host"></param>
            <param name="referer"></param>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.SignOut">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.BeginBiz(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="appToken"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.BeginBiz(System.String,System.Boolean,System.Boolean,Rsd.Dudu.Web.Core.IPramaRule[])">
            <summary>
            标识方法，以下代码开始处理业务逻辑
            </summary>
            <param name="bizFlag"></param>
            <param name="checkSession"></param>
            <param name="apiLogEnable"></param>
            <param name="rules"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.BaseWebService.BizInLogHandler">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.BaseWebService.BizHandler">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.InvokeBizInThread(Rsd.Dudu.Web.BaseWebService.BizInLogHandler)">
            <summary>
            
            </summary>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.InvokeBizInThread(Rsd.Dudu.Web.BaseWebService.BizHandler)">
            <summary>
            线程执行
            </summary>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.InvokeBiz(Rsd.Dudu.Web.BaseWebService.BizInLogHandler)">
            <summary>
            
            </summary>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.InvokeBiz(Rsd.Dudu.Web.BaseWebService.BizHandler)">
            <summary>
            
            </summary>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.EndBiz(System.Object,Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            标识方法，业务逻辑处理结束
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.EndBiz(System.Boolean,System.String,System.Object,Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            
            </summary>
            <param name="success"></param>
            <param name="msg"></param>
            <param name="data"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.EndBiz(System.String,System.Boolean,System.String,System.Object,Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            
            </summary>
            <param name="success"></param>
            <param name="msg"></param>
            <param name="data"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.EndBiz(System.String,System.Boolean,System.String,System.Object,System.String,Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            AES加密
            </summary>
            <param name="code"></param>
            <param name="success"></param>
            <param name="msg"></param>
            <param name="data"></param>
            <param name="key"></param>
            <param name="info"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.ValidateCodeStructure">
            <summary>
            验证代码结构
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.WriteResponse(System.String,System.Boolean,System.String,System.Object,Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            提交前不做任何异常处理
            </summary>
            <param name="success"></param>
            <param name="msg"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.WriteResponse(System.String,System.Boolean,System.String,System.Object,System.String,Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            AES加密
            </summary>
            <param name="code"></param>
            <param name="success"></param>
            <param name="msg"></param>
            <param name="data"></param>
            <param name="key"></param>
            <param name="info"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.WriteResponse(System.Object,Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            在提交前，先进行异常处理，如果没有异常信息提交业务数据，如果有异常数据则提交异常数据。
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.GetExceptions">
            <summary>
            获取已提交的异常
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.HandleException">
            <summary>
            异常处理
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.HandleException(Rsd.Dudu.Exception.ExceptionHandle)">
            <summary>
            
            </summary>
            <param name="handler">指定异常处理对象</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.GetType(System.String)">
            <summary>
            
            </summary>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.HttpRequest(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="data"></param>
            <param name="method"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.GetDes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.ResponseMsg(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="returnHtml"></param>
            <param name="returnMsg"></param>
            <param name="returnUrl"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.ParamSaveToRedis(System.String,Rsd.Dudu.Redis.IRedisClientService)">
            <summary>
            
            </summary>
            <param name="keyPrefix"></param>
            <param name="redis"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.GetService``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="user"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.ConvertTo(System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebService.ConvertTo``1(System.Object)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.NullKeyPramaTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.NullKeyPramaTypes.QueryString">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.NullKeyPramaTypes.FormData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.NullKeyPramaTypes.All">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.BaseWebServiceV2">
            <summary>
            优化代码逻辑结构，接口方法中，不需要再调用BeginBiz
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.BaseWebServiceV2.Item(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebServiceV2.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebServiceV2.Initial">
            <summary>
            初始化参数 并验证入口参数
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.BaseWebServiceV2.Route(System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="apiName"></param>
            <param name="sessionId"></param>
            <param name="key">密钥,数据加密后返回</param>
            <param name="inThread">是否线程执行</param>
        </member>
        <member name="T:Rsd.Dudu.Web.BizWebService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.SaveObject(System.Type,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.SaveObject``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.SaveObject``1(Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.DeleteObject(System.Type,System.String,Rsd.Dudu.BizModel.DeleteType)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="key"></param>
            <param name="delType"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.DeleteObject``1(System.String,Rsd.Dudu.BizModel.DeleteType)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.DeleteObject``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.GetListJson``1(Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.GetListJson(System.Type,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.GetPaggingJson``1(System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="fromBiz"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.GetPaggingJson(System.Type,System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="fromBiz"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.GetPaggingJson``1(Rsd.Dudu.Core.IDBSession,System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dbSession"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="fromBiz"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.GetPaggingJson(Rsd.Dudu.Core.IDBSession,System.Type,System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="dbSession"></param>
            <param name="type"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="fromBiz"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.GetObject(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.GetObject``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.GetObject``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.GetObjects``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebService.GetObjects``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Rsd.Dudu.DBServices.SortType)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <param name="expression"></param>
            <param name="orderBy"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.BizWebServiceV2">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.Cgi_Bin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.SaveObject(System.Type,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.SaveObject``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.SaveObject``1(Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.DeleteObject(System.Type,System.String,Rsd.Dudu.BizModel.DeleteType)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="key"></param>
            <param name="delType"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.DeleteObject``1(System.String,Rsd.Dudu.BizModel.DeleteType)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="type"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.DeleteObject``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.GetListJson``1(Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="fromBiz"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.GetListJson(System.Type,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="fromBiz"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.GetPaggingJson``1(System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="fromBiz"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.GetPaggingJson(System.Type,System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="fromBiz"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.GetPaggingJson``1(Rsd.Dudu.Core.IDBSession,System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dbSession"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="fromBiz"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.GetPaggingJson(Rsd.Dudu.Core.IDBSession,System.Type,System.Int32,System.Int32,Rsd.Dudu.DBServices.WhereCondition[],Rsd.Dudu.DBServices.SortCondition[],System.Boolean,System.String[])">
            <summary>
            
            </summary>
            <param name="dbSession"></param>
            <param name="type"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="where"></param>
            <param name="sort"></param>
            <param name="fromBiz"></param>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.GetObject(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.GetObject``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.GetObject``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.GetObjects``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.BizWebServiceV2.GetObjects``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Rsd.Dudu.DBServices.SortType)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <param name="expression"></param>
            <param name="orderBy"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.HttpContextExtend">
            <summary>
            该扩展类所有方法，只上报异常，不对异常做任何处理
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.ValidateIPBlackList(System.Web.HttpContext,System.String[])">
            <summary>
            验证黑名单
            </summary>
            <param name="context"></param>
            <param name="blackList"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.ValidateIPAuth(System.Web.HttpContext,System.String,System.String,Rsd.Dudu.Web.Service.IServiceBindIP[])">
            <summary>
            验证IP访问权限，主要用于类级别验证
            </summary>
            <param name="context"></param>
            <param name="appId"></param>
            <param name="appToken"></param>
            <param name="bindips"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.ValidateDomainAuth(System.Web.HttpContext,System.String,System.String,Rsd.Dudu.Web.Service.IServiceCrossDomain[])">
            <summary>
            验证Domain访问权限，主要用于类级别验证
            </summary>
            <param name="context"></param>
            <param name="appId"></param>
            <param name="appToken"></param>
            <param name="crossDomains"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.Initial(System.Web.HttpContext)">
            <summary>
            初始化 初始化路由参数
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.Route(System.Web.HttpContext,System.Reflection.MethodInfo,Rsd.Dudu.Web.Service.IApiService,System.String,System.String,System.String,System.String)">
            <summary>
            路由执行，只上报异常，不对异常做任何处理
            </summary>
            <param name="context"></param>
            <param name="method"></param>
            <param name="serviceFlag"></param>
            <param name="sessionId"></param>
            <param name="appId"></param>
            <param name="appToken"></param>
            <param name="accessToken"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.GetService(System.Web.HttpContext,System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="type"></param>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.GetService``1(System.Web.HttpContext,System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="sessionId"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.HandleException(System.Web.HttpContext,System.String,System.String,System.Boolean)">
            <summary>
            异常处理 有异常直接输出到前端 
            </summary>
            <param name="context"></param>
            <param name="bizFlag"></param>
            <param name="sessionId"></param>
            <param name="logEnabled"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.HandleException(System.Web.HttpContext,System.String,System.String,Rsd.Dudu.Exception.ExceptionHandle,System.Boolean)">
            <summary>
            异常处理
            </summary>
            <param name="context"></param>
            <param name="bizFlag"></param>
            <param name="sessionId"></param>
            <param name="handler">指定异常处理对象</param>
            <param name="logEnabled"></param>
            <returns>true 表示无异常，可以继续执行业务操作</returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.ResponseMsg(System.Web.HttpContext,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="bizFlag"></param>
            <param name="returnMsg"></param>
            <param name="returnHtml"></param>
            <param name="returnUrl"></param>
            <param name="logEnabled"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.ResponseData(System.Web.HttpContext,System.String,Rsd.Dudu.Web.Core.IResponseResult,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="bizFlag"></param>
            <param name="data"></param>
            <param name="apiLogEnable"></param>
            <param name="encryptKey">加密KEY</param>
            <param name="encryptHandler"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.ResponseData(System.Web.HttpContext,System.String,System.String,System.Boolean,System.String,System.Object,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="bizFlag"></param>
            <param name="code"></param>
            <param name="success"></param>
            <param name="msg"></param>
            <param name="data"></param>
            <param name="apiLogEnable"></param>
            <param name="encryptKey">加密KEY</param>
            <param name="encryptHandler"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.ResponseXml(System.Web.HttpContext,System.String,System.Object,System.Boolean)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="bizFlag"></param>
            <param name="data"></param>
            <param name="apiLogEnable"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.ApiLog(System.Web.HttpContext,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="bizFlag"></param>
            <param name="response"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.GetSessionId(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.Encrypt(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            加密
            </summary>
            <param name="context"></param>
            <param name="handler"> IEncryptService 的加密方法</param>
            <param name="data">加密数据</param>
            <param name="key">密钥</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.GetAppId(System.Web.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.GetAppToken(System.Web.HttpContext,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.GetAccessToken(System.Web.HttpContext,System.Boolean,System.String)">
            <summary>
            获取访问授权Token
            </summary>
            <param name="context"></param>
            <param name="session">是否获取系统sessionid,等于true时一般用于page页面</param> 
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.ValidateAccessToken(System.Web.HttpContext,System.String)">
            <summary>
            验证访问授权Token
            </summary>
            <param name="context"></param>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.LoadRequestPramas(System.Web.HttpContext,System.Reflection.MethodInfo)">
            <summary>
            加载并验证请求参数
            </summary>
            <param name="context"></param>
            <param name="method"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.GetNullKeyPrama(System.Web.HttpContext,Rsd.Dudu.Web.NullKeyPramaTypes)">
            <summary>
            获取查询参数key值为null的参数
            </summary>
            <param name="context"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.SetResponsed(System.Web.HttpContext,System.Boolean)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="value"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.HasResponsed(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpContextExtend.GetApiList(System.Web.HttpContext,System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.HttpRequestExtend">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.InitialRoute(System.Web.HttpRequest)">
            <summary>
            初始化路由参数
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.LoadPramas(System.Web.HttpRequest)">
            <summary>
            将请求参数解析为JSON格式
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.InitialPramas(System.Web.HttpRequest)">
            <summary>
            根据参数规则加载并验证请求参数
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.ValidatePramas(System.Web.HttpRequest,Rsd.Dudu.Web.Core.IPramaRule[])">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="rules"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.ArrayFormat(System.Web.HttpRequest,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            将JSON对象格式为数组对象
            </summary>
            <param name="request"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.ExistsPrama(System.Web.HttpRequest,System.String)">
            <summary>
            判断参数是否存在
            </summary>
            <param name="request"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.GetRequestData(System.Web.HttpRequest,System.String)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="name">参数名，可为null</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.GetNullKeyPrama(System.Web.HttpRequest,Rsd.Dudu.Web.NullKeyPramaTypes)">
            <summary>
            获取查询参数key值为null的参数
            </summary>
            <param name="request"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.GetPrama(System.Web.HttpRequest,System.String)">
            <summary>
            获取请求参数对象，仅在进入控制类后可用。
            </summary>
            <param name="request"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.GetPramaValue``1(System.Web.HttpRequest,System.String)">
            <summary>
            获取请求参数值，仅在进入控制类后可用。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="request"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.PramaConvertToModel``1(System.Web.HttpRequest)">
            <summary>
            将请求参数对象化，仅在进入控制类后可用。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.PramaConvertToModel(System.Web.HttpRequest,System.Type)">
            <summary>
            将请求参数转化为指定对象，仅在进入控制类后可用。
            </summary>
            <param name="request"></param>
            <param name="targetType">指定对象类型</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.GetPramaJson(System.Web.HttpRequest,System.Boolean)">
            <summary>
             获取请求参数的JSON对象，仅在进入控制类后可用。
            </summary>
            <param name="request"></param>
            <param name="throwError"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.SaveUploadFile(System.Web.HttpRequest,System.String)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.GetClientIP(System.Web.HttpRequest)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.GetBrowserId(System.Web.HttpRequest)">
            <summary>
            浏览器指纹
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.GetHostAddress(System.Web.HttpRequest)">
            <summary>
             获取远程客户端的 IP 主机地址
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.GetHostName(System.Web.HttpRequest)">
            <summary>
            获取远程客户端的 DNS 名称
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.GetClientInfo(System.Web.HttpRequest,System.String)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.GetWechatAppId(System.Web.HttpRequest)">
            <summary>
            获取微信小程序Id
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpRequestExtend.IsAjaxRequest(System.Web.HttpRequest)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.HttpResponseExtend">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpResponseExtend.DownloadFile(System.Web.HttpResponse,System.String,System.String)">
            <summary>
            完整路径
            </summary>
            <param name="response"></param>
            <param name="filePath"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpResponseExtend.DownloadFileFromMongo(System.Web.HttpResponse,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="response"></param>
            <param name="fileId"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.HttpResponseExtend.DownloadExcel(System.Web.HttpResponse,System.Data.DataTable,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="response"></param>
            <param name="data"></param>
            <param name="title"></param>
            <param name="fileName"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.WebApiLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.WebApiLog.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.WebApiLog.GetIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.WebApiLog.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.WebApiLog.StartTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.WebApiLog.EndTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.WebApiLog.RequestData">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.WebApiLog.ResponseData">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.WebApiLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.LogBaseService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.LogBaseService.Proxcy">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.LogBaseService.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.Debug(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.Info(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.Warn(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.Error(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.PageView(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.PageEvent(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.PageTiming(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.PageMemory(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.PageEntry(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.WebApi(System.String,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="user"></param>
            <param name="bizFlag"></param>
            <param name="requestTime"></param>
            <param name="responeTime"></param>
            <param name="reqData"></param>
            <param name="repData"></param>
            <param name="info"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.Log``1(``0,Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="info"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.GetData``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.GetData``1(System.String,Rsd.Dudu.Core.ServiceProxcy)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="proxcy"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.CaptureLog(Rsd.Dudu.Web.Log.UILogBase,Rsd.Dudu.Web.Core.RequestClientInfo,System.String)">
            <summary>
            
            </summary>
            <param name="log"></param>
            <param name="info"></param>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.BeginCapture(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.CancelCapture(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.LogBaseService.CommitCapture(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="sleep"></param>
            <param name="key"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.UILogRedisService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogRedisService.RedisListCache">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogRedisService.KeyPrefix">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogRedisService.#ctor(Rsd.Dudu.Redis.IRedisClientListService,System.String,Rsd.Dudu.Web.Log.UILogLevelTypes,System.Boolean)">
            <summary>
            
            </summary>
            <param name="redis"></param>
            <param name="keyPrefix"></param>
            <param name="level"></param>
            <param name="isDebug"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogRedisService.CaptureLog(Rsd.Dudu.Web.Log.UILogBase,Rsd.Dudu.Web.Core.RequestClientInfo,System.String)">
            <summary>
            
            </summary>
            <param name="log"></param>
            <param name="info"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogRedisService.BeginCapture(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogRedisService.CancelCapture(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogRedisService.CommitCapture(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="sleep"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogRedisService.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.ClientMemoryLog">
            <summary>
             描述内存多少，是在Chrome中添加的一个非标准属性。
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.ClientMemoryLog.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.ClientMemoryLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.ClientMemoryLog.GetIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.ClientMemoryLog.JsHeapSizeLimit">
            <summary>
            内存大小限制
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.ClientMemoryLog.TotalJSHeapSize">
            <summary>
             可使用的内存
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.ClientMemoryLog.UsedJSHeapSize">
            <summary>
            JS对象(包括V8引擎内部对象)占用的内存，不能大于totalJSHeapSize，如果大于，有可能出现了内存泄漏
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.ClientMemoryLog.IsWarn">
            <summary>
            占用的内存，不能大于totalJSHeapSize，如果大于，有可能出现了内存泄漏
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.ClientMemoryLog.UsingPercent">
            <summary>
            内存使用率 ： (UsedJSHeapSize *100) / TotalJSHeapSize
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.IUILogService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.IUILogService.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.Debug(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.Info(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.Warn(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.Error(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.PageView(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.PageEvent(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.PageTiming(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.PageMemory(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.PageEntry(System.String,System.Int64,System.String,Rsd.Dudu.Web.Core.RequestClientInfo,Rsd.Dudu.BizModel.JsonObject)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="logTime"></param>
            <param name="user"></param>
            <param name="info"></param>
            <param name="logData"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.WebApi(System.String,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            
            </summary>
            <param name="appId"></param>
            <param name="user"></param>
            <param name="bizFlag"></param>
            <param name="requestTime"></param>
            <param name="responeTime"></param>
            <param name="reqData"></param>
            <param name="repData"></param>
            <param name="info"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.Log``1(``0,Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="info"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.BeginCapture(System.String)">
            <summary>
            线程独立
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.CancelCapture(System.String)">
            <summary>
            线程独立
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.IUILogService.CommitCapture(System.Int32,System.String)">
            <summary>
            线程独立 提交所有捕获的日志
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.PageEventLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageEventLog.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.PageEventLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.PageEventLog.GetIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageEventLog.ElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageEventLog.ElementText">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.PageLog">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.PageLog._logLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageLog.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.PageLog.GetIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.PageLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageLog.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageLog.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.PageTimingLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.NavType">
            <summary>
            type:标志页面导航类型
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.NavigationStart">
            <summary>
            navigationStart:在同一个浏览器上下文中，前一个网页（与当前页面不一定同域）unload 的时间戳，如果无前一个网页 unload ，则与 fetchStart 值相等
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.UnloadEventStart">
            <summary>
            unloadEventStart:前一个网页（与当前页面同域）unload 的时间戳，如果无前一个网页 unload 或者前一个网页与当前页面不同域，则值为 0
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.UnloadEventEnd">
            <summary>
            unloadEventEnd:和 unloadEventStart 相对应，返回前一个网页 unload 事件绑定的回调函数执行完毕的时间戳
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.RedirectStart">
            <summary>
            redirectStart:第一个 HTTP 重定向发生时的时间。有跳转且是同域名内的重定向才算，否则值为 0
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.RedirectEnd">
            <summary>
            redirectEnd:最后一个 HTTP 重定向完成时的时间。有跳转且是同域名内的重定向才算，否则值为 0
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.FetchStart">
            <summary>
            fetchStart:浏览器准备好使用 HTTP 请求抓取文档的时间，这发生在检查本地缓存之前
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.DomainLookupStart">
            <summary>
            domainLookupStart:DNS 域名查询开始的时间，如果使用了本地缓存（即无 DNS 查询）或持久连接，则与 fetchStart 值相等
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.DomainLookupEnd">
            <summary>
            domainLookupEnd:DNS 域名查询完成的时间，如果使用了本地缓存（即无 DNS 查询）或持久连接，则与 fetchStart 值相等
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.ConnectStart">
            <summary>
            connectStart:HTTP（TCP） 开始建立连接的时间，如果是持久连接，则与 fetchStart 值相等,如果在传输层发生了错误且重新建立连接，则这里显示的是新建立的连接开始的时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.ConnectEnd">
            <summary>
            connectEnd:HTTP（TCP） 完成建立连接的时间（完成握手），如果是持久连接，则与 fetchStart 值相等,如果在传输层发生了错误且重新建立连接，则这里显示的是新建立的连接完成的时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.SecureConnectionStart">
            <summary>
            secureConnectionStart:HTTPS 连接开始的时间，如果不是安全连接，则值为 0
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.RequestStart">
            <summary>
            requestStart:HTTP 请求读取真实文档开始的时间（完成建立连接），包括从本地读取缓存,连接错误重连时，这里显示的也是新建立连接的时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.ResponseStart">
            <summary>
            responseStart:HTTP 开始接收响应的时间（获取到第一个字节），包括从本地读取缓存
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.ResponseEnd">
            <summary>
            responseEnd:HTTP 响应全部接收完成的时间（获取到最后一个字节），包括从本地读取缓存
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.DomLoading">
            <summary>
            domLoading:开始解析渲染 DOM 树的时间，此时 Document.readyState 变为 loading，并将抛出 readystatechange 相关事件
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.DomInteractive">
            <summary>
             domInteractive:完成解析 DOM 树的时间，Document.readyState 变为 interactive，并将抛出 readystatechange 相关事件
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.DomContentLoadedEventStart">
            <summary>
            domContentLoadedEventStart:DOM 解析完成后，网页内资源加载开始的时间, 文档发生 DOMContentLoaded事件的时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.DomContentLoadedEventEnd">
            <summary>
            domContentLoadedEventEnd:DOM 解析完成后，网页内资源加载完成的时间（如 JS 脚本加载执行完毕），文档的DOMContentLoaded 事件的结束时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.DomComplete">
            <summary>
            domComplete:DOM 树解析完成，且资源也准备就绪的时间，Document.readyState 变为 complete，并将抛出 readystatechange 相关事件
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.LoadEventStart">
            <summary>
            loadEventStart:load 事件发送给文档，也即 load 回调函数开始执行的时间, 如果没有绑定 load 事件，值为 0
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.LoadEventEnd">
            <summary>
             loadEventEnd:load 事件的回调函数执行完毕的时间, 如果没有绑定 load 事件，值为 0
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.DnsDuration">
            <summary>
            DNS查询耗时 ：domainLookupEnd - domainLookupStart
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.TcpDuration">
            <summary>
            TCP链接耗时 ：connectEnd - connectStart
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.RequestDuration">
            <summary>
            request请求耗时 ：responseEnd - responseStart
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.DomDuration">
            <summary>
            解析dom树耗时 ： domComplete - domInteractive
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.WhiteDuration">
            <summary>
            白屏时间 ：responseStart - navigationStart
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.OnReadyDuration">
            <summary>
            domready时间(用户可操作时间节点) ：domContentLoadedEventEnd - navigationStart
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageTimingLog.OnLoadDuration">
            <summary>
            onload时间(总下载时间) ：loadEventEnd - navigationStart
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.PageTimingLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.PageTimingLog.GetIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.NavigationTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.NavigationTypes.TYPE_NAVIGATE">
            <summary>
            普通进入，包括：点击链接、在地址栏中输入 URL、表单提交、或者通过除下表中 TYPE_RELOAD 和 TYPE_BACK_FORWARD 的方式初始化脚本。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.NavigationTypes.TYPE_RELOAD">
            <summary>
            	通过刷新进入，包括：浏览器的刷新按钮、快捷键刷新、location.reload()等方法。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.NavigationTypes.TYPE_BACK_FORWARD">
            <summary>
            通过操作历史记录进入，包括：浏览器的前进后退按钮、快捷键操作、history.forward()、history.back()、history.go(num)。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.NavigationTypes.TYPE_UNDEFINED">
            <summary>
            其他非以上类型的方式进入。
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.PerformanceEntryLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.PerformanceEntryLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.PerformanceEntryLog.GetIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.RedirectStart">
            <summary>
            redirectStart:第一个 HTTP 重定向发生时的时间。有跳转且是同域名内的重定向才算，否则值为 0
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.RedirectEnd">
            <summary>
            redirectEnd:最后一个 HTTP 重定向完成时的时间。有跳转且是同域名内的重定向才算，否则值为 0
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.FetchStart">
            <summary>
            fetchStart:浏览器准备好使用 HTTP 请求抓取文档的时间，这发生在检查本地缓存之前
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.DomainLookupStart">
            <summary>
            domainLookupStart:DNS 域名查询开始的时间，如果使用了本地缓存（即无 DNS 查询）或持久连接，则与 fetchStart 值相等
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.DomainLookupEnd">
            <summary>
            domainLookupEnd:DNS 域名查询完成的时间，如果使用了本地缓存（即无 DNS 查询）或持久连接，则与 fetchStart 值相等
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.ConnectStart">
            <summary>
            connectStart:HTTP（TCP） 开始建立连接的时间，如果是持久连接，则与 fetchStart 值相等,如果在传输层发生了错误且重新建立连接，则这里显示的是新建立的连接开始的时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.ConnectEnd">
            <summary>
            connectEnd:HTTP（TCP） 完成建立连接的时间（完成握手），如果是持久连接，则与 fetchStart 值相等,如果在传输层发生了错误且重新建立连接，则这里显示的是新建立的连接完成的时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.SecureConnectionStart">
            <summary>
            secureConnectionStart:HTTPS 连接开始的时间，如果不是安全连接，则值为 0
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.RequestStart">
            <summary>
            requestStart:HTTP 请求读取真实文档开始的时间（完成建立连接），包括从本地读取缓存,连接错误重连时，这里显示的也是新建立连接的时间
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.ResponseStart">
            <summary>
            responseStart:HTTP 开始接收响应的时间（获取到第一个字节），包括从本地读取缓存
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PerformanceEntryLog.ResponseEnd">
            <summary>
            responseEnd:HTTP 响应全部接收完成的时间（获取到最后一个字节），包括从本地读取缓存
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.EntryType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.EntryType.Mark">
            <summary>
             mark    PerformanceMark 通过mark()方法添加到数组中的对象
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.EntryType.Measure">
            <summary>
            measure PerformanceMeasure  通过measure()方法添加到数组中的对象
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.EntryType.Resource">
            <summary>
            resource    PerformanceResourceTiming   所有资源加载时间，用处最多
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.EntryType.Navigation">
            <summary>
            navigation  PerformanceNavigationTiming 现除chrome和Opera外均不支持，导航相关信息
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.EntryType.Frame">
            <summary>
            frame   PerformanceFrameTiming  URL	The document's address. 现浏览器均未支持
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.EntryType.Server">
            <summary>
            server  PerformanceServerTiming  
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.EntryType.Paint">
            <summary>
            paint PerformancePaintTiming Either 'first-paint' or 'first-contentful-paint'.
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.InitiatorType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.InitiatorType.Link">
            <summary>
            a Element   link/script/img/iframe等 通过标签形式加载的资源，值是该节点名的小写形式
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.InitiatorType.Script">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.InitiatorType.Img">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.InitiatorType.Iframe">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.InitiatorType.Css">
            <summary>
            a CSS resourc   css 通过css样式加载的资源，比如background的url方式加载资源
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.InitiatorType.Xmlhttprequest">
            <summary>
            a XMLHttpRequest object	xmlhttprequest  通过xhr加载的资源
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.InitiatorType.Navigation">
            <summary>
            a PerformanceNavigationTiming object	navigation  当对象是PerformanceNavigationTiming时返回
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.InitiatorType.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.InitiatorType.Other">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.UILogDbService">
            <summary>
            UI日志存储服务
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogDbService.DbSession">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogDbService.InitialTable(Rsd.Dudu.Core.IDBSession,Rsd.Dudu.Web.Log.UILogLevelTypes,Rsd.Dudu.DBServices.TableExistOperationType)">
            <summary>
            初始化数据库表
            </summary>
            <param name="dbSession"></param>
            <param name="levels"></param>
            <param name="drop"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogDbService.InitialTable``1(Rsd.Dudu.Core.IDBSession,Rsd.Dudu.DBServices.TableExistOperationType)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dbSession"></param>
            <param name="drop"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogDbService.InitialTable(Rsd.Dudu.Web.Log.UILogLevelTypes,Rsd.Dudu.DBServices.TableExistOperationType)">
            <summary>
            
            </summary>
            <param name="levels"></param>
            <param name="drop"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogDbService.InitialTable``1(Rsd.Dudu.DBServices.TableExistOperationType)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="drop"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogDbService.#ctor(Rsd.Dudu.Core.IDBSession,Rsd.Dudu.Web.Log.UILogLevelTypes,System.Boolean)">
            <summary>
            
            </summary>
            <param name="dbSession"></param>
            <param name="level">UILogLevel支持位运算</param>
            <param name="isDebug"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogDbService.CaptureLog(Rsd.Dudu.Web.Log.UILogBase,Rsd.Dudu.Web.Core.RequestClientInfo,System.String)">
            <summary>
            
            </summary>
            <param name="log"></param>
            <param name="info"></param>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogDbService.BeginCapture(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogDbService.CancelCapture(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogDbService.CommitCapture(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="sleep"></param>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogDbService.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.PageViewLog">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageViewLog.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageViewLog.Page">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageViewLog.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.PageViewLog.Data">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.PageViewLog.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.PageViewLog.GetIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.UILogBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogBase._logTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.LogTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.User">
            <summary>
            当前操作人
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.From">
            <summary>
            终端
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.URL">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.Method">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.Accept">
            <summary>
            Accept:text/plain, */*; q=0.01
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.AcceptEncoding">
            <summary>
            Accept-Encoding:gzip, deflate
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.ContentLength">
            <summary>
            Content-Length:0
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.ContentType">
            <summary>
            Content-Type:application/x-www-form-urlencoded; charset=UTF-8
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.Host">
            <summary>
            Host:58.213.68.41:8099
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.Origin">
            <summary>
            Origin:http://58.213.68.41:8098
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.Refer">
            <summary>
            Referer:http://58.213.68.41:8098/
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.UserAgent">
            <summary>
            User-Agent:Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.DNT">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.Cookies">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.SessionId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.ClientIp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.BrowserId">
            <summary>
            浏览器ID
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Log.UILogBase.OriginData">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogBase.GetIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogBase.Save(Rsd.Dudu.Core.IDBSession)">
            <summary>
            立刻保存
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Log.UILogBase.MergeLogInfo(Rsd.Dudu.Web.Core.RequestClientInfo)">
            <summary>
            
            </summary> 
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.Log.UILogLevelTypes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.Debug">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.Info">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.Warn">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.Error">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.PageTiming">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.ClientMemory">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.PageView">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.PageEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.PerformanceEntry">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.API">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.Log.UILogLevelTypes.All">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Prama.PramaAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Prama.PramaAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Prama.LoggerAttribute">
            <summary>
            日志服务参数特性标识
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Prama.LoggerAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Prama.RequestJsonAttribute">
            <summary>
            请求参数Json对象特性标识
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Prama.RequestJsonAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Prama.RequestPramaAttribute">
            <summary>
            普通请求参数特性标识
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Prama.RequestPramaAttribute.PramaName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Prama.RequestPramaAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Prama.RequestModelAttribute">
            <summary>
            请求参数对象化特性标识
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Prama.RequestModelAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Prama.ServiceAttribute">
            <summary>
            Service对象参数特性标识
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Prama.ServiceAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.Prama.NullKeyAttribute">
            <summary>
            查询参数key值为null的参数特性标识
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.Prama.NullKeyAttribute.Type">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.Prama.NullKeyAttribute.#ctor(Rsd.Dudu.Web.NullKeyPramaTypes)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.PramaValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaValue.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaValue.PramaRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaValue.Exist">
            <summary>
            参数是否存在
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaValue.IsDefined">
            <summary>
            参数是否定义
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaValue.DefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.PramaValue.#ctor(System.String,System.Object,System.Boolean,Rsd.Dudu.Web.Core.IPramaRule)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="exist"></param>
            <param name="rule"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.PramaValue.ConvertTo(System.Type)">
            <summary>
            
            </summary>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.PramaValue.ConvertTo``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.PramaValue.Validate(Rsd.Dudu.Web.Core.IPramaRule)">
            <summary>
            
            </summary>
            <param name="rule"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.PramaValue.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.DevWebService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.DevWebService.Startup">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.DevWebService.InitialDatabase(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="dllpath"></param>
            <param name="assemblyName"></param>
            <param name="drop"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.DevWebService.UpdateDatabase(System.String,System.String,Rsd.Dudu.DBServices.TableExistOperationType)">
            <summary>
            
            </summary>
            <param name="dllpath"></param>
            <param name="assemblyName"></param>
            <param name="drop"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.DevWebService.GetSchema">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.DevWebService.GetSchemaList">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.DevWebService.GetAllTypes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.DevWebService.GetMonitorInfo(Rsd.Dudu.SysMonitorDataType)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.ExtendMethods">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.ExtendMethods.GetText(Rsd.Dudu.Web.ErrorCodes,System.String[])">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.ExtendMethods.SubmitInfo(Rsd.Dudu.Web.ErrorCodes,System.String[])">
            <summary>
            提交错误 并记录 操作日志
            </summary>
            <param name="code"></param>
            <param name="args"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.ExtendMethods.SubmitWarn(Rsd.Dudu.Web.ErrorCodes,Rsd.Dudu.Log.LogSourceType,System.String[])">
            <summary>
            提交错误 并记录 警告日志
            </summary>
            <param name="code"></param>
            <param name="sourceType"></param>
            <param name="args"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.ExtendMethods.SubmitError(Rsd.Dudu.Web.ErrorCodes,System.String[])">
            <summary>
            提交错误 并记录 错误日志
            </summary>
            <param name="code"></param>
            <param name="args"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.ExtendMethods.SubmitError(Rsd.Dudu.Web.ErrorCodes,Rsd.Dudu.Exception.OperationType,System.String[])">
            <summary>
            提交错误 并记录 错误日志
            </summary>
            <param name="code"></param>
            <param name="type"></param>
            <param name="args"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.ExtendMethods.SubmitError(Rsd.Dudu.Web.ErrorCodes,Rsd.Dudu.Exception.OperationType,Rsd.Dudu.Log.LogSourceType,System.String[])">
            <summary>
            提交错误 并记录 错误日志
            </summary>
            <param name="code"></param>
            <param name="type"></param>
            <param name="sourceType"></param>
            <param name="args"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.ExtendMethods.GetService``1(System.Web.Services.WebService,``0,System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="service"></param>
            <param name="defaultValue"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.ExtendMethods.AddService(System.Web.Services.WebService,Rsd.Dudu.Core.IService)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="s"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.ExtendMethods.ToJson(System.Web.HttpCookieCollection)">
            <summary>
            
            </summary>
            <param name="cookies"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.LogWebService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.Debug">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.Info">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.Warn">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.Error">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.PageView">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.PageEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.PageTiming">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.PageMemory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.PageEntry">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.Log">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.LogSaveThread(System.Object)">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.LogWebService.Handle(Rsd.Dudu.Exception.ExceptionObject[])">
            <summary>
            
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.PramaValueType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.PramaValueType.Unknown">
            <summary>
            未指定类型不做值范围验证
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.PramaValueType.String">
            <summary>
            做长度验证
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.PramaValueType.Decimal">
            <summary>
            做取值范围验证
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.PramaValueType.Enum">
            <summary>
            枚举类型
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.PramaValueType.Json">
            <summary>
            json对象
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.PramaValueType.Array">
            <summary>
            数组
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.PramaValueType.JsonArray">
            <summary>
            json数组
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.ConfigHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.ConfigHelper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.ConfigHelper.GetNodeValue(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.ConfigHelper.GetConfigProperty(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.ConfigHelper.GetConnectionString(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.ErrorCodes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W0001">
            <summary>
            访问数据库失败，{0}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W1000">
            <summary>
            配置错误,{0}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W1001">
            <summary>
            配置错误,属性【{0}】为空。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W1002">
            <summary>
            配置错误,类型{0}不存在。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W1003">
            <summary>
            配置错误,页面类型{0}错误。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W1004">
            <summary>
            配置错误,WebService的Session未启用，请为类型({0})该方法({1})添加[WebMethod(EnableSession = true)]属性。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W1005">
            <summary>
            参数约束配置错误,服务{0}，方法{1}，{3}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W1006">
            <summary>
            访问被拒绝,IP({0})不在可信任的范围之内或指定的Token错误。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W1007">
            <summary>
            访问被拒绝,域名({0})不在可信任的范围之内或指定的Token错误。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W1008">
            <summary>
            配置错误,参数【{0}】最大值({1})和最小值({2})约束不合理。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W1009">
            <summary>
            配置错误,参数【{0}】最大长度({1})和最小长度({2})约束不合理。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W1010">
            <summary>
            解析错误代码({0})失败。\r\n{1}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2000">
            <summary>
            非法请求（Token信息丢失），请重新登录。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2001">
            <summary>
            非法请求（Session失效），请重新登录。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2002">
            <summary>
            在获取对象（{0}）时发生异常，{1}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2003">
            <summary>
            在保存对象时发生错误，{0}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2004">
            <summary>
            创建对象失败\r\n类型({0})属性({1})赋值[{2}]失败,{3}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2005">
            <summary>
            {0}\r\n线程执行失败:{1}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2006">
            <summary>
            获取对象发生异常\r\n对象类型({0})\r\n错误信息：{1}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2007">
             <summary>
            获取类型发生异常\r\n类型({0})\r\n错误信息：{1}
             </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2008">
            <summary>
            UI日志保存发生异常，请查看日志。{0}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2009">
            <summary>
            反序列化失败:请确认类{0}已标注[Serializable]特性，实现接口ISerializable和构造函数{1}(SerializationInfo info, StreamingContext context)；{2}。。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2010">
            <summary>
            对象转化为JSON时发生异常\r\n对象类型：{0}，错误信息：{1}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2011">
            <summary>
             登录IP发生变化，请重新登陆。\r\n当前IP({0})原IP({1})。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2015">
            <summary>
            {0}\r\非线程执行失败:{1}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2016">
            <summary>
            初始化JS压缩对象失败:{0}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2017">
            <summary>
            JS文件压缩失败:{0}\r\n内容：{1}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2018">
            <summary>
            运行在代码[{0}]行（内容：[{1}]），发生错误：{2}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2019">
            <summary>
            CSS文件压缩失败:{0}\r\n内容：{1}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2020">
            <summary>
            初始化CSS压缩对象失败:{0}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W2021">
            <summary>
            反序列化失败。\r\n原类型（{0}）和目标类型（{1}）不一致。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W3000">
            <summary>
            参数错误，访问未定义参数{0}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W3001">
            <summary>
            参数错误，参数{0}({1})不是有效值。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W3002">
            <summary>
            参数错误，参数{0}不存在。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W3003">
            <summary>
            参数错误，参数{0}不允许为空。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W3004">
            <summary>
            参数错误，参数{0}长度不得小于{1}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W3005">
            <summary>
            参数错误，参数{0}长度不得大于{1}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W3006">
            <summary>
            参数错误，参数{0}({1})不是有效数值。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W3007">
            <summary>
            参数错误，参数{0}不得小于{1}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W3008">
            <summary>
            参数错误，参数{0}不得大于{1}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W3009">
            <summary>
            参数错误，参数【{0}】赋值失败：{1}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W3010">
            <summary>
            参数错误，参数【{0}】不是目标类型{1}。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W5001">
             <summary>
            UI日志枚举类型转化失败（值类型：{0}），原始值：{1}。URL：{2}
             </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W5002">
            <summary>
            获取客户端IP时发生异常。{0}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W5003">
             <summary>
            WebUIService请求地址{0}失败：{1}。
             </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W6001">
            <summary>
            服务调用失败\r\n服务（{0}）不存在，请先注入服务再使用。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W6002">
            <summary>
            服务调用失败\r\n服务{0}访问级别为ServiceLevels.Public时，不得指定AppId和AppToken值。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W6003">
            <summary>
            服务{0}访问级别为ServiceLevels.Custom时，必须指定AppId和AppToken值。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W6004">
            <summary>
            访问被拒绝，权限不足；服务{0}访问级别为NeedPermssion。
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W9000">
            <summary>
            系统异常。{0}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W9001">
            <summary>
            HttpHandler执行发生异常。{0}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W9002">
            <summary>
            API执行发生异常。{0}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W9003">
            <summary>
            获取AccessToken发生异常。{0}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W9004">
            <summary>
            系统动态注册Controller（{0）失败:{1}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W9005">
            <summary>
            初始化路由失败。{0}
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.ErrorCodes.W9101">
            <summary>
            测试时发生异常。{0}
            </summary>
        </member>
        <member name="T:Rsd.Dudu.Web.PramaRuleAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaRuleAttribute.Token">
            <summary>
            用于识别 Attribute 是静态变量还是动态变量
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.PramaRuleAttribute._pramaName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaRuleAttribute.PramaName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaRuleAttribute.PramaNameCN">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaRuleAttribute.RegularExpress">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaRuleAttribute.Filter">
            <summary>
            安全过滤等级
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaRuleAttribute.NotEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaRuleAttribute.DefauleValue">
            <summary>
            NotEmpty == flase 时，参数未传递时默认值
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaRuleAttribute.Min">
            <summary>
            最小值 或 最小长度
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaRuleAttribute.Max">
            <summary>
            最大值 或 最大长度
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaRuleAttribute.ValueType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.PramaRuleAttribute.TargetType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.PramaRuleAttribute.#ctor(System.String,System.String,System.Type,System.Boolean,System.Object,Rsd.Dudu.Web.FilterLevel)">
            <summary>
            
            </summary>
            <param name="pramaName"></param>
            <param name="pramaNameCN"></param>
            <param name="targetType">目标类型</param>
            <param name="notEmpty">默认值:true</param>
            <param name="defaultValue">默认值</param>
            <param name="filterLevel"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.PramaRuleAttribute.#ctor(System.String,System.String,System.String,System.Boolean,System.String,Rsd.Dudu.Web.FilterLevel)">
            <summary>
            String 类型
            </summary>
            <param name="pramaName"></param>
            <param name="pramaNameCN"></param>
            <param name="regularExpress"></param>
            <param name="notEmpty">默认值:true</param>
            <param name="defaultValue">默认值</param>
            <param name="filterLevel"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.PramaRuleAttribute.#ctor(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String,Rsd.Dudu.Web.FilterLevel)">
            <summary>
            String 类型
            </summary>
            <param name="pramaName"></param>
            <param name="pramaNameCN"></param>
            <param name="minLength">最小长度（包含）</param>
            <param name="maxLength">最大长度（包含）</param>
            <param name="notEmpty">默认值:true</param>
            <param name="defaultValue">默认值</param>
            <param name="filterLevel"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.PramaRuleAttribute.#ctor(System.String,System.String,System.Double,System.Double,System.Boolean,System.Double)">
            <summary>
            数值类型 数值判断需精确到小数
            </summary>
            <param name="pramaName"></param>
            <param name="pramaNameCN"></param>
            <param name="min">最小值（包含）</param>
            <param name="max">最大值（包含）</param>
            <param name="notEmpty">默认值:true</param>
            <param name="defaultValue">默认值:true</param> 
        </member>
        <member name="M:Rsd.Dudu.Web.PramaRuleAttribute.Validate(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.PramaRuleAttribute.Validate(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:Rsd.Dudu.Web.SessionContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.SessionContainer.CacheProvider">
            <summary>
            用于存储的缓存服务类型
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.AddSession(System.String,System.Object,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
             添加一个session
            </summary>
            <param name="userName"></param>
            <param name="data"></param>
            <param name="clientIp"></param>
            <param name="host"></param>
            <param name="referer"></param>
            <param name="userAgent"></param>
            <param name="minutes">过期时间（分钟），默认30分钟</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.AddSession(System.String,System.String,System.Object,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            添加一个session
            </summary>
            <param name="key">指定SessionID</param>
            <param name="userName"></param> 
            <param name="data"></param>
            <param name="clientIp"></param>
            <param name="host"></param>
            <param name="referer"></param>
            <param name="userAgent"></param>
            <param name="minutes">过期时间（分钟），默认30分钟</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.CreateToken">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.GetSession(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.GetSessionData``1(System.String)">
            <summary>
            获取一个session
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.ExistSession(System.String)">
            <summary>
             验证是否存在有效的访问授权Token
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.ResetSession(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
             重置Session 并延长有效时间
            </summary>
            <param name="key"></param>
            <param name=""></param>
            <param name="host"></param>
            <param name="referer"></param>
            <param name="userAgent"></param>
            <param name="minutes">有效时长(分钟)，默认30分钟</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.RemoveSession(System.String)">
            <summary>
            删除一个session
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.RemoveAll">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.SessionContainer.GetSessionInfo(Rsd.Dudu.SysMonitor)">
            <summary>
             获取session容器监控信息
            </summary>
            <param name="monitor"></param>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.ExceptionHandleService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.ExceptionHandleService.Proxcy">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.ExceptionHandleService.#ctor(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.ExceptionHandleService.Do(Rsd.Dudu.Exception.ExceptionObject[])">
            <summary>
            
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.ExceptionHandleService.DoSomeOne(Rsd.Dudu.Exception.ExceptionObject)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.ExceptionHandleService.GetService``1(``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.ExceptionHandleService.GetMonitorInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Rsd.Dudu.Web.SchemasContainer">
            <summary>
            
            </summary>
        </member>
        <member name="F:Rsd.Dudu.Web.SchemasContainer._cache">
            <summary>
            
            </summary>
        </member>
        <member name="P:Rsd.Dudu.Web.SchemasContainer.CacheProvider">
            <summary>
            用于存储的缓存服务类型
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.SchemasContainer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rsd.Dudu.Web.SchemasContainer.GetSchemaInfo(System.Type,System.Int32)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="width">列宽度</param>
            <returns></returns>
        </member>
        <member name="M:Rsd.Dudu.Web.SchemasContainer.Initial(System.Type,System.Int32)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="width"></param>
        </member>
        <member name="M:Rsd.Dudu.Web.SchemasContainer.RemoveAll">
            <summary>
            
            </summary>
        </member>
        <member name="T:EcmaScript.NET.Arguments">
            <summary> This class implements the "arguments" object.
            
            See ECMA 10.1.8
            
            </summary>	
        </member>
        <member name="P:EcmaScript.NET.Attributes.EcmaScriptClassAttribute.Name">
            <summary>
            Name of this class
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Attributes.EcmaScriptFunctionAttribute.Name">
            <summary>
            Name of this function
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Attributes.EcmaScriptPropertyAttribute.Name">
            <summary>
            Name of this property
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Attributes.EcmaScriptPropertyAttribute.Access">
            <summary>
            Access
            </summary>
        </member>
        <member name="T:EcmaScript.NET.BaseFunction">
            <summary> The base class for Function objects
            See ECMA 15.3.
            </summary>
        </member>
        <member name="P:EcmaScript.NET.BaseFunction.ImmunePrototypeProperty">
            <summary> Make value as DontEnum, DontDelete, ReadOnly
            prototype property of this Function object
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.BaseFunction.HasInstance(EcmaScript.NET.IScriptable)" -->
        <member name="M:EcmaScript.NET.BaseFunction.Call(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> Should be overridden.</summary>
        </member>
        <member name="M:EcmaScript.NET.BaseFunction.CreateObject(EcmaScript.NET.Context,EcmaScript.NET.IScriptable)">
            <summary> Creates new script object.
            The default implementation of {@link #construct} uses the method to
            to get the value for <tt>thisObj</tt> argument when invoking
            {@link #call}.
            The methos is allowed to return <tt>null</tt> to indicate that
            {@link #call} will create a new object itself. In this case
            {@link #construct} will set scope and prototype on the result
            {@link #call} unless they are already set.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.BaseFunction.Decompile(System.Int32,System.Int32)">
             <summary> Decompile the source information associated with this js
             function/script back into a string.
            
             </summary>
             <param name="indent">How much to indent the decompiled result.
            
             </param>
             <param name="flags">Flags specifying format of decompilation output.
             </param>
        </member>
        <member name="T:EcmaScript.NET.Collections.ObjArray">
            <summary>Implementation of resizable array with focus on minimizing memory usage by storing few initial array elements in object fields. Can also be used as a stack.</summary>
        </member>
        <member name="T:EcmaScript.NET.Collections.ObjToIntMap">
            <summary> Map to associate objects to integers.
            The map does not synchronize any of its operation, so either use
            it from a single thread or do own synchronization or perform all mutation
            operations on one thread before passing the map to others
            
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Collections.ObjToIntMap.Get(System.Object,System.Int32)">
            <summary> Get integer value assigned with key.</summary>
            <returns> key integer value or defaultValue if key is absent
            </returns>
        </member>
        <member name="M:EcmaScript.NET.Collections.ObjToIntMap.getExisting(System.Object)">
            <summary> Get integer value assigned with key.</summary>
            <returns> key integer value
            </returns>
            <throws>  RuntimeException if key does not exist </throws>
        </member>
        <member name="M:EcmaScript.NET.Collections.ObjToIntMap.intern(System.Object)">
            <summary> If table already contains a key that equals to keyArg, return that key
            while setting its value to zero, otherwise add keyArg with 0 value to
            the table and return it.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Collections.ObjToIntMap.getKeys">
            <summary>Return array of present keys </summary>
        </member>
        <member name="T:EcmaScript.NET.Collections.UintMap">
            <summary> Map to associate non-negative integers to objects or integers.
            The map does not synchronize any of its operation, so either use
            it from a single thread or do own synchronization or perform all mutation
            operations on one thread before passing the map to others.
            
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Collections.UintMap.Keys">
            <summary>Return array of present keys </summary>
        </member>
        <member name="M:EcmaScript.NET.Collections.UintMap.getObject(System.Int32)">
            <summary> Get object value assigned with key.</summary>
            <returns> key object value or null if key is absent
            </returns>
        </member>
        <member name="M:EcmaScript.NET.Collections.UintMap.getInt(System.Int32,System.Int32)">
            <summary> Get integer value assigned with key.</summary>
            <returns> key integer value or defaultValue if key is absent
            </returns>
        </member>
        <member name="M:EcmaScript.NET.Collections.UintMap.getExistingInt(System.Int32)">
            <summary> Get integer value assigned with key.</summary>
            <returns> key integer value or defaultValue if key does not exist or does
            not have int value
            </returns>
            <throws>  RuntimeException if key does not exist </throws>
        </member>
        <member name="M:EcmaScript.NET.Collections.UintMap.put(System.Int32,System.Object)">
            <summary> Set object value of the key.
            If key does not exist, also set its int value to 0.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Collections.UintMap.put(System.Int32,System.Int32)">
            <summary> Set int value of the key.
            If key does not exist, also set its object value to null.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.CompilerEnvirons.setGeneratingSource(System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "T:EcmaScript.NET.Context" -->
        <member name="F:EcmaScript.NET.Context.Features.None">
            <summary>
            No features at all
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Context.Features.E4x">
            <summary>
            Support for E4X
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Context.Features.GetterAndSetter">
            <summary>
            Support for get and set
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Context.Features.NonEcmaGetYear">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:EcmaScript.NET.Context.Features.DynamicScope" -->
        <member name="F:EcmaScript.NET.Context.Features.MemberExprAsFunctionName">
            <summary> Control if member expression as function name extension is available.
            If <tt>hasFeature(FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME)</tt> returns
            true, allow <tt>function memberExpression(args) { body }</tt> to be
            syntax sugar for <tt>memberExpression = function(args) { body }</tt>,
            when memberExpression is not a simple identifier.
            See ECMAScript-262, section 11.2 for definition of memberExpression.
            By default {@link #hasFeature(int)} returns false.
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Context.Features.ReservedKeywordAsIdentifier">
            <summary> Control if reserved keywords are treated as identifiers.
            If <tt>hasFeature(RESERVED_KEYWORD_AS_IDENTIFIER)</tt> returns true,
            treat future reserved keyword (see  Ecma-262, section 7.5.3) as ordinary
            identifiers but warn about this usage.
            
            By default {@link #hasFeature(int)} returns false.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:EcmaScript.NET.Context.Features.ToStringAsSource" -->
        <!-- Badly formed XML comment ignored for member "F:EcmaScript.NET.Context.Features.ParentProtoProperties" -->
        <!-- Badly formed XML comment ignored for member "F:EcmaScript.NET.Context.Features.StrictVars" -->
        <!-- Badly formed XML comment ignored for member "F:EcmaScript.NET.Context.Features.StrictEval" -->
        <member name="F:EcmaScript.NET.Context.Features.NonEcmaPrintFunction">
            <summary>
            Controls if the non-ecma function 'print' is available or not.
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Context.Features.NonEcmaVersionFunction">
            <summary>
            Controls if the non-ecma function 'version' is available or not
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Context.Features.NonEcmaOptionsFunction">
            <summary>
            Controls if the non-ecma function 'options' is available or not
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Context.Features.NonEcmaGcFunction">
            <summary>
            Controls if the non-ecma function 'options' is available or not
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Context.Features.NonEcmaItObject">
            <summary>
            The famous 'it' object (@see js.c:2315)
            </summary>
        </member>
        <member name="E:EcmaScript.NET.Context.OnWrap">
            <summary>
            
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Context.MaximumInterpreterStackDepth">
            <summary>
            
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Context.AppDomain">
            <summary>
            Associated app domain
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:EcmaScript.NET.Context.CurrentContext" -->
        <member name="P:EcmaScript.NET.Context.Factory">
            <summary> Return {@link ContextFactory} instance used to create this Context
            or the result of {@link ContextFactory#getGlobal()} if no factory
            was used for Context creation.
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Context.Sealed">
            <summary> Checks if this is a sealed Context. A sealed Context instance does not
            allow to modify any of its properties and will throw an exception
            on any such attempt.
            </summary>        
        </member>
        <!-- Badly formed XML comment ignored for member "P:EcmaScript.NET.Context.ImplementationVersion" -->
        <member name="P:EcmaScript.NET.Context.UndefinedValue">
            <summary> Get the singleton object that represents the JavaScript Undefined value.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:EcmaScript.NET.Context.GeneratingDebug" -->
        <!-- Badly formed XML comment ignored for member "P:EcmaScript.NET.Context.GeneratingSource" -->
        <!-- Badly formed XML comment ignored for member "P:EcmaScript.NET.Context.OptimizationLevel" -->
        <member name="P:EcmaScript.NET.Context.DebuggerContextData">
            <summary> Return the debugger context data associated with current context.</summary>
            <returns> the debugger data, or null if debugger is not attached
            </returns>
        </member>
        <member name="P:EcmaScript.NET.Context.InstructionObserverThreshold">
            <summary> Get/Set threshold of executed instructions counter that triggers call to
            <code>observeInstructionCount()</code>.
            When the threshold is zero, instruction counting is disabled,
            otherwise each time the run-time executes at least the threshold value
            of script instructions, <code>observeInstructionCount()</code> will
            be called.
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Context.languageVersionProperty">
            <summary> Language versions.
            
            All integral values are reserved for future version numbers.
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Context.EmptyArgs">
            <summary> Convinient value to use as zero-length array of objects.</summary>
        </member>
        <member name="M:EcmaScript.NET.Context.#ctor(System.AppDomain)">
            <summary> Create a new Context.
            
            Note that the Context must be associated with a thread before
            it can be used to execute a script.
            
            </summary>        
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.Enter" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.Enter(EcmaScript.NET.Context)" -->
        <member name="M:EcmaScript.NET.Context.Exit">
            <summary> Exit a block of code requiring a Context.
            
            Calling <code>exit()</code> will remove the association between
            the current thread and a Context if the prior call to
            <code>enter()</code> on this thread newly associated a Context
            with this thread.
            Once the current thread no longer has an associated Context,
            it cannot be used to execute JavaScript until it is again associated
            with a Context.
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.Call(EcmaScript.NET.ContextFactory,EcmaScript.NET.ICallable,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Object[])" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.Seal(System.Object)" -->
        <member name="M:EcmaScript.NET.Context.Unseal(System.Object)">
            <summary> Unseal previously sealed Context object.
            The <tt>sealKey</tt> argument should not be null and should match
            <tt>sealKey</tt> suplied with the last call to
            {@link #seal(Object)} or an exception will be thrown.
            
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Context.Version">
            <summary> 
            Get the current language version.
            </summary>        
        </member>
        <member name="P:EcmaScript.NET.Context.ErrorReporter">
            <summary> Get the current error reporter.
            
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Context.CurrentCulture">
            <summary>
            Get the current locale.  Returns the default locale if none has
            been set.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Context.ReportWarning(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary> Report a warning using the error reporter for the current thread.
            
            </summary>
            <param name="message">the warning message to report
            </param>
            <param name="sourceName">a string describing the source, such as a filename
            </param>
            <param name="lineno">the starting line number
            </param>
            <param name="lineSource">the text of the line (may be null)
            </param>
            <param name="lineOffset">the offset into lineSource where problem was detected
            </param>
        </member>
        <member name="M:EcmaScript.NET.Context.ReportWarning(System.String)">
            <summary> Report a warning using the error reporter for the current thread.
            
            </summary>
            <param name="message">the warning message to report
            </param>
        </member>
        <member name="M:EcmaScript.NET.Context.ReportError(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary> Report an error using the error reporter for the current thread.
            
            </summary>
            <param name="message">the error message to report
            </param>
            <param name="sourceName">a string describing the source, such as a filename
            </param>
            <param name="lineno">the starting line number
            </param>
            <param name="lineSource">the text of the line (may be null)
            </param>
            <param name="lineOffset">the offset into lineSource where problem was detected
            </param>        
        </member>
        <member name="M:EcmaScript.NET.Context.ReportError(System.String)">
            <summary> Report an error using the error reporter for the current thread.
            
            </summary>
            <param name="message">the error message to report
            </param>
        </member>
        <member name="M:EcmaScript.NET.Context.ReportRuntimeError(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary> Report a runtime error using the error reporter for the current thread.
            
            </summary>
            <param name="message">the error message to report
            </param>
            <param name="sourceName">a string describing the source, such as a filename
            </param>
            <param name="lineno">the starting line number
            </param>
            <param name="lineSource">the text of the line (may be null)
            </param>
            <param name="lineOffset">the offset into lineSource where problem was detected
            </param>
            <returns> a runtime exception that will be thrown to terminate the
            execution of the script
            </returns>        
        </member>
        <member name="M:EcmaScript.NET.Context.ReportRuntimeError(System.String)">
            <summary> Report a runtime error using the error reporter for the current thread.
            
            </summary>
            <param name="message">the error message to report
            </param>        
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.InitStandardObjects" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.InitStandardObjects(EcmaScript.NET.ScriptableObject)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.InitStandardObjects(EcmaScript.NET.ScriptableObject,System.Boolean)" -->
        <member name="M:EcmaScript.NET.Context.EvaluateString(EcmaScript.NET.IScriptable,System.String,System.String,System.Int32,System.Object)">
            <summary> Evaluate a JavaScript source string.
            
            The provided source name and line number are used for error messages
            and for producing debug information.
            
            </summary>
            <param name="scope">the scope to execute in
            </param>
            <param name="source">the JavaScript source
            </param>
            <param name="sourceName">a string describing the source, such as a filename
            </param>
            <param name="lineno">the starting line number
            </param>
            <param name="securityDomain">an arbitrary object that specifies security
            information about the origin or owner of the script. For
            implementations that don't care about security, this value
            may be null.
            </param>
            <returns> the result of evaluating the string
            </returns>        
        </member>
        <member name="M:EcmaScript.NET.Context.EvaluateReader(EcmaScript.NET.IScriptable,System.IO.StreamReader,System.String,System.Int32,System.Object)">
            <summary> Evaluate a reader as JavaScript source.
            
            All characters of the reader are consumed.
            
            </summary>
            <param name="scope">the scope to execute in
            </param>
            <param name="in">the Reader to get JavaScript source from
            </param>
            <param name="sourceName">a string describing the source, such as a filename
            </param>
            <param name="lineno">the starting line number
            </param>
            <param name="securityDomain">an arbitrary object that specifies security
            information about the origin or owner of the script. For
            implementations that don't care about security, this value
            may be null.
            </param>
            <returns> the result of evaluating the source
            
            </returns>
            <exception cref="!:"> IOException if an IOException was generated by the Reader
            </exception>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.IsCompilableUnit(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.CompileReader(System.IO.StreamReader,System.String,System.Int32,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.CompileString(System.String,System.String,System.Int32,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.CompileFunction(EcmaScript.NET.IScriptable,System.String,System.String,System.Int32,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.DecompileScript(EcmaScript.NET.IScript,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.DecompileFunction(EcmaScript.NET.IFunction,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.DecompileFunctionBody(EcmaScript.NET.IFunction,System.Int32)" -->
        <member name="M:EcmaScript.NET.Context.NewObject(EcmaScript.NET.IScriptable)">
            <summary> Create a new JavaScript object.
            
            Equivalent to evaluating "new Object()".
            </summary>
            <param name="scope">the scope to search for the constructor and to evaluate
            against
            </param>
            <returns> the new object
            </returns>
        </member>
        <member name="M:EcmaScript.NET.Context.NewObject(EcmaScript.NET.IScriptable,System.String)">
            <summary> Create a new JavaScript object by executing the named constructor.
            
            The call <code>newObject(scope, "Foo")</code> is equivalent to
            evaluating "new Foo()".
            
            </summary>
            <param name="scope">the scope to search for the constructor and to evaluate against
            </param>
            <param name="constructorName">the name of the constructor to call
            </param>
            <returns> the new object
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.NewObject(EcmaScript.NET.IScriptable,System.String,System.Object[])" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.NewArray(EcmaScript.NET.IScriptable,System.Int32)" -->
        <member name="M:EcmaScript.NET.Context.NewArray(EcmaScript.NET.IScriptable,System.Object[])">
            <summary> Create an array with a set of initial elements.
            
            </summary>
            <param name="scope">the scope to create the object in.
            </param>
            <param name="elements">the initial elements. Each object in this array
            must be an acceptable JavaScript type and type
            of array should be exactly Object[], not
            SomeObjectSubclass[].
            </param>
            <returns> the new array object.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.GetElements(EcmaScript.NET.IScriptable)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.CliToJS(EcmaScript.NET.Context,System.Object,EcmaScript.NET.IScriptable)" -->
        <member name="M:EcmaScript.NET.Context.JsToCli(System.Object,System.Type)">
            <summary> Convert a JavaScript value into the desired type.
            Uses the semantics defined with LiveConnect3 and throws an
            Illegal argument exception if the conversion cannot be performed.
            </summary>
            <param name="value">the JavaScript value to convert
            </param>
            <param name="desiredType">the Java type to convert to. Primitive Java
            types are represented using the TYPE fields in the corresponding
            wrapper class in java.lang.
            </param>
            <returns> the converted value
            </returns>
            <throws>  EvaluatorException if the conversion cannot be performed </throws>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.ThrowAsScriptRuntimeEx(System.Exception)" -->
        <!-- Badly formed XML comment ignored for member "P:EcmaScript.NET.Context.SecurityController" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.GetThreadLocal(System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.PutThreadLocal(System.Object,System.Object)" -->
        <member name="M:EcmaScript.NET.Context.RemoveThreadLocal(System.Object)">
            <summary> Remove values from thread-local storage.</summary>
            <param name="key">the key for the entry to remove.
            </param>        
        </member>
        <member name="P:EcmaScript.NET.Context.Debugger">
            <summary> Return the current debugger.</summary>
            <returns> the debugger, or null if none is attached.
            </returns>
        </member>
        <member name="M:EcmaScript.NET.Context.SetDebugger(EcmaScript.NET.Debugging.Debugger,System.Object)">
            <summary> Set the associated debugger.</summary>
            <param name="debugger">the debugger to be used on callbacks from
            the engine.
            </param>
            <param name="contextData">arbitrary object that debugger can use to store
            per Context data.
            </param>
        </member>
        <member name="M:EcmaScript.NET.Context.getDebuggableView(EcmaScript.NET.IScript)">
            <summary> Return DebuggableScript instance if any associated with the script.
            If callable supports DebuggableScript implementation, the method
            returns it. Otherwise null is returned.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Context.HasFeature(EcmaScript.NET.Context.Features)">
            <summary>
            Controls certain aspects of script semantics.
            Should be overwritten to alter default behavior.
            <remarks>
            The default implementation calls
            {@link ContextFactory#hasFeature(Context cx, int featureIndex)}
            that allows to customize Context behavior without introducing
            Context subclasses.  {@link ContextFactory} documentation gives
            an example of hasFeature implementation.
            </remarks>
            </summary>
            <param name="featureIndex">feature to check</param>
            <returns>
            true if the <code>feature</code> feature is turned on
            </returns>  
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Context.ObserveInstructionCount(System.Int32)" -->
        <member name="M:EcmaScript.NET.Context.AddActivationName(System.String)">
            <summary> Add a name to the list of names forcing the creation of real
            activation objects for functions.
            
            </summary>
            <param name="name">the name of the object to add to the list
            </param>
        </member>
        <member name="M:EcmaScript.NET.Context.IsActivationNeeded(System.String)">
            <summary> Check whether the name is in the list of names of objects
            forcing the creation of activation objects.
            
            </summary>
            <param name="name">the name of the object to test
            
            </param>
            <returns> true if an function activation object is needed.
            </returns>
        </member>
        <member name="M:EcmaScript.NET.Context.RemoveActivationName(System.String)">
            <summary> Remove a name from the list of names forcing the creation of real
            activation objects for functions.
            
            </summary>
            <param name="name">the name of the object to remove from the list
            </param>
        </member>
        <member name="F:EcmaScript.NET.Context.activationNames">
            <summary> This is the list of names of objects forcing the creation of
            function activation records.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Context.CodeBug">
            <summary>
            Throws RuntimeException to indicate failed assertion.
            The function never returns and its return type is RuntimeException
            only to be able to write <tt>throw EcmaScriptHelper.CodeBug()</tt> if plain
            <tt>EcmaScriptHelper.CodeBug()</tt> triggers unreachable code error.
            </summary>
        </member>
        <member name="P:EcmaScript.NET.ContextEventArgs.Context">
            <summary>
            The underlying context
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ContextEventArgs.#ctor(EcmaScript.NET.Context)">
            <summary>
            Creates a new ContextEventArgs object
            </summary>
            <param name="cx"></param>
        </member>
        <member name="T:EcmaScript.NET.ContextWrapEventArgs">
            <summary>
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:EcmaScript.NET.ContextFactory" -->
        <member name="P:EcmaScript.NET.ContextFactory.Global">
            <summary> Get global ContextFactory.
            
            </summary>		
        </member>
        <member name="P:EcmaScript.NET.ContextFactory.Sealed">
            <summary> Checks if this is a sealed ContextFactory.</summary>		
        </member>
        <member name="E:EcmaScript.NET.ContextFactory.OnContextCreated">
            <summary> Notify about newly created {@link Context} object.</summary>
        </member>
        <member name="E:EcmaScript.NET.ContextFactory.OnContextReleased">
            <summary> Notify that the specified {@link Context} instance is no longer
            associated with the current thread.
            </summary>
        </member>
        <member name="P:EcmaScript.NET.ContextFactory.HasExplicitGlobal">
            <summary> Check if global factory was set.
            Return true to indicate that {@link #initGlobal(ContextFactory)} was
            already called and false to indicate that the global factory was not
            explicitly set.
            
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.ContextFactory.InitGlobal(EcmaScript.NET.ContextFactory)">
            <summary> Set global ContextFactory.
            The method can only be called once.
            
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.ContextFactory.DoTopCall(EcmaScript.NET.ICallable,EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> Execute top call to script or function.
            When the runtime is about to execute a script or function that will
            create the first stack frame with scriptable code, it calls this method
            to perform the real call. In this way execution of any script
            happens inside this function.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ContextFactory.ObserveInstructionCount(EcmaScript.NET.Context,System.Int32)">
            <summary> Implementation of
            {@link Context#observeInstructionCount(int instructionCount)}.
            This can be used to customize {@link Context} without introducing
            additional subclasses.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ContextFactory.Seal">
            <summary> Seal this ContextFactory so any attempt to modify it like to add or
            remove its listeners will throw an exception.
            </summary>		
        </member>
        <member name="T:EcmaScript.NET.Debugging.DebugFrame">
            <summary>Interface to implement if the application is interested in receiving debug
            information during execution of a particular script or function.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Debugging.DebugFrame.OnEnter(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Object[])">
            <summary>Called when execution is ready to start bytecode interpretation for entered a particular function or script.</summary>
            <param name="cx">current Context for this thread
            </param>
            <param name="activation">the activation scope for the function or script.
            </param>
            <param name="thisObj">value of the JavaScript <code>this</code> object
            </param>
            <param name="args">the array of arguments
            </param>
        </member>
        <member name="M:EcmaScript.NET.Debugging.DebugFrame.OnLineChange(EcmaScript.NET.Context,System.Int32)">
            <summary>Called when executed code reaches new line in the source.</summary>
            <param name="cx">current Context for this thread
            </param>
            <param name="lineNumber">current line number in the script source
            </param>
        </member>
        <member name="M:EcmaScript.NET.Debugging.DebugFrame.OnExceptionThrown(EcmaScript.NET.Context,System.Exception)">
            <summary>Called when thrown exception is handled by the function or script.</summary>
            <param name="cx">current Context for this thread
            </param>
            <param name="ex">exception object
            </param>		
        </member>
        <member name="M:EcmaScript.NET.Debugging.DebugFrame.OnExit(EcmaScript.NET.Context,System.Boolean,System.Object)">
            <summary>Called when the function or script for this frame is about to return.</summary>
            <param name="cx">current Context for this thread
            </param>
            <param name="byThrow">if true function will leave by throwing exception, otherwise it
            will execute normal return
            </param>
            <param name="resultOrException">function result in case of normal return or
            exception object if about to throw exception
            </param>
        </member>
        <member name="M:EcmaScript.NET.Debugging.DebugFrame.OnDebuggerStatement(EcmaScript.NET.Context)">
            <summary>
            Called when the function or script executes a 'debugger' statement.
            </summary>
            <param name="cx">current Context for this thread</param>
        </member>
        <member name="T:EcmaScript.NET.Debugging.DebuggableObject">
            <summary> This interface exposes debugging information from objects.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:EcmaScript.NET.Debugging.DebuggableObject.AllIds" -->
        <member name="T:EcmaScript.NET.Debugging.DebuggableScript">
            <summary> This interface exposes debugging information from executable
            code (either functions or top-level scripts).
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Debugging.DebuggableScript.FunctionName">
            <summary> Get name of the function described by this script.
            Return null or an empty string if this script is not function.
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Debugging.DebuggableScript.ParamCount">
            <summary> Get number of declared parameters in function.
            Return 0 if this script is not function.
            
            </summary>		
        </member>
        <member name="P:EcmaScript.NET.Debugging.DebuggableScript.ParamAndVarCount">
            <summary> Get number of declared parameters and local variables.
            Return number of declared global variables if this script is not
            function.
            
            </summary>		
        </member>
        <member name="P:EcmaScript.NET.Debugging.DebuggableScript.SourceName">
            <summary> Get the name of the source (usually filename or URL)
            of the script.
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Debugging.DebuggableScript.GeneratedScript">
            <summary> Returns true if this script or function were runtime-generated
            from JavaScript using <tt>eval</tt> function or <tt>Function</tt>
            or <tt>Script</tt> constructors.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:EcmaScript.NET.Debugging.DebuggableScript.LineNumbers" -->
        <member name="M:EcmaScript.NET.Debugging.DebuggableScript.IsFunction">
            <summary> Returns true if this is a function, false if it is a script.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Debugging.DebuggableScript.GetParamOrVarName(System.Int32)" -->
        <member name="T:EcmaScript.NET.Debugging.Debugger">
            <summary>Interface to implement if the application is interested in receiving debug
            information.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Debugging.Debugger.HandleCompilationDone(EcmaScript.NET.Context,EcmaScript.NET.Debugging.DebuggableScript,System.String)">
            <summary>Called when compilation of a particular function or script into internal
            bytecode is done.
            </summary>
            <param name="cx">current Context for this thread
            </param>
            <param name="fnOrScript">object describing the function or script
            </param>
            <param name="source">the function or script source
            </param>
        </member>
        <member name="M:EcmaScript.NET.Debugging.Debugger.GetFrame(EcmaScript.NET.Context,EcmaScript.NET.Debugging.DebuggableScript)">
            <summary>Called when execution entered a particular function or script.</summary>
            <returns> implementation of DebugFrame which receives debug information during
            the function or script execution or null otherwise
            </returns>
        </member>
        <member name="T:EcmaScript.NET.Decompiler">
            <summary> The following class save decompilation information about the source.
            Source information is returned from the parser as a String
            associated with function nodes and with the toplevel script.  When
            saved in the constant pool of a class, this string will be UTF-8
            encoded, and token values will occupy a single byte.
            Source is saved (mostly) as token numbers.  The tokens saved pretty
            much correspond to the token stream of a 'canonical' representation
            of the input program, as directed by the parser.  (There were a few
            cases where tokens could have been left out where decompiler could
            easily reconstruct them, but I left them in for clarity).  (I also
            looked adding source collection to TokenStream instead, where I
            could have limited the changes to a few lines in getToken... but
            this wouldn't have saved any space in the resulting source
            representation, and would have meant that I'd have to duplicate
            parser logic in the decompiler to disambiguate situations where
            newlines are important.)  The function decompile expands the
            tokens back into their string representations, using simple
            lookahead to correct spacing and indentation.
            
            Assignments are saved as two-token pairs (Token.ASSIGN, op). Number tokens
            are stored inline, as a NUMBER token, a character representing the type, and
            either 1 or 4 characters representing the bit-encoding of the number.  String
            types NAME, STRING and OBJECT are currently stored as a token type,
            followed by a character giving the length of the string (assumed to
            be less than 2^16), followed by the characters of the string
            inlined into the source string.  Changing this to some reference to
            to the string in the compiled class' constant pool would probably
            save a lot of space... but would require some method of deriving
            the final constant pool entry from information available at parse
            time.
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Decompiler.ONLY_BODY_FLAG">
            <summary> Flag to indicate that the decompilation should omit the
            function header and trailing brace.
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Decompiler.TO_SOURCE_FLAG">
            <summary> Flag to indicate that the decompilation generates toSource result.</summary>
        </member>
        <member name="F:EcmaScript.NET.Decompiler.INITIAL_INDENT_PROP">
            <summary> Decompilation property to specify initial ident value.</summary>
        </member>
        <member name="F:EcmaScript.NET.Decompiler.INDENT_GAP_PROP">
            <summary> Decompilation property to specify default identation offset.</summary>
        </member>
        <member name="F:EcmaScript.NET.Decompiler.CASE_GAP_PROP">
            <summary> Decompilation property to specify identation offset for case labels.</summary>
        </member>
        <member name="M:EcmaScript.NET.Decompiler.Decompile(System.String,System.Int32,EcmaScript.NET.Collections.UintMap)">
            <summary> Decompile the source information associated with this js
            function/script back into a string.  For the most part, this
            just means translating tokens back to their string
            representations; there's a little bit of lookahead logic to
            decide the proper spacing/indentation.  Most of the work in
            mapping the original source to the prettyprinted decompiled
            version is done by the parser.
            
            </summary>
            <param name="source">encoded source tree presentation
            
            </param>
            <param name="flags">flags to select output format
            
            </param>
            <param name="properties">indentation properties
            
            </param>
        </member>
        <member name="T:EcmaScript.NET.DefaultErrorReporter">
            <summary> This is the default error reporter for JavaScript.
            
            </summary>
        </member>
        <member name="T:EcmaScript.NET.Delegator">
            <summary> This is a helper class for implementing wrappers around Scriptable
            objects. It implements the Function interface and delegates all
            invocations to a delegee Scriptable object. The normal use of this
            class involves creating a sub-class and overriding one or more of
            the methods.
            
            A useful application is the implementation of interceptors,
            pre/post conditions, debugging.
            
            </summary>	
        </member>
        <member name="P:EcmaScript.NET.Delegator.Delegee">
            <summary> Retrieve the delegee.
            
            </summary>
            <returns> the delegee
            </returns>
            <summary> Set the delegee.
            
            </summary>
            <param name="obj">the delegee
            </param>		
        </member>
        <member name="M:EcmaScript.NET.Delegator.#ctor">
            <summary> Create a Delegator prototype.
            
            This constructor should only be used for creating prototype
            objects of Delegator.
            
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Delegator.#ctor(EcmaScript.NET.IScriptable)">
            <summary> Create a new Delegator that forwards requests to a delegee
            Scriptable object.
            
            </summary>
            <param name="obj">the delegee
            </param>		
        </member>
        <member name="M:EcmaScript.NET.Delegator.NewInstance">
            <summary> Crete new Delegator instance.
            The default implementation calls this.getClass().newInstance().
            
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.Delegator.GetDefaultValue(System.Type)">
            <summary> Note that this method does not get forwarded to the delegee if
            the <code>hint</code> parameter is null,
            <code>typeof(Scriptable)</code> or
            <code>typeof(Function)</code>. Instead the object
            itself is returned.
            
            </summary>
            <param name="hint">the type hint
            </param>
            <returns> the default value
            
            </returns>		
        </member>
        <member name="M:EcmaScript.NET.Delegator.Construct(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> Note that if the <code>delegee</code> is <code>null</code>,
            this method creates a new instance of the Delegator itself
            rathert than forwarding the call to the
            <code>delegee</code>. This permits the use of Delegator
            prototypes.
            
            </summary>
            <param name="cx">the current Context for this thread
            </param>
            <param name="scope">an enclosing scope of the caller except
            when the function is called from a closure.
            </param>
            <param name="args">the array of arguments
            </param>
            <returns> the allocated object
            
            </returns>
        </member>
        <member name="T:EcmaScript.NET.EcmaScriptError">
            <summary> The class of exceptions raised by the engine as described in
            ECMA edition 3. See section 15.11.6 in particular.
            </summary>	
        </member>
        <member name="P:EcmaScript.NET.EcmaScriptError.Name">
            <summary> Gets the name of the error.
            
            ECMA edition 3 defines the following
            errors: EvalError, RangeError, ReferenceError,
            SyntaxError, TypeError, and URIError. Additional error names
            may be added in the future.
            
            See ECMA edition 3, 15.11.7.9.
            
            </summary>
            <returns> the name of the error.
            </returns>
        </member>
        <member name="P:EcmaScript.NET.EcmaScriptError.ErrorMessage">
            <summary> Gets the message corresponding to the error.
            
            See ECMA edition 3, 15.11.7.10.
            
            </summary>
            <returns> an implemenation-defined string describing the error.
            </returns>
        </member>
        <member name="M:EcmaScript.NET.EcmaScriptError.#ctor(System.String,System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary> Create an exception with the specified detail message.
            
            Errors internal to the JavaScript engine will simply throw a
            RuntimeException.
            
            </summary>
            <param name="sourceName">the name of the source reponsible for the error
            </param>
            <param name="lineNumber">the line number of the source
            </param>
            <param name="columnNumber">the columnNumber of the source (may be zero if
            unknown)
            </param>
            <param name="lineSource">the source of the line containing the error (may be
            null if unknown)
            </param>
        </member>
        <member name="T:EcmaScript.NET.EcmaScriptException">
            <summary>
            The class of exceptions thrown by the JavaScript engine.
            </summary>	
        </member>
        <member name="P:EcmaScript.NET.EcmaScriptException.SourceName">
            <summary> Get the uri of the script source containing the error, or null
            if that information is not available.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.EcmaScriptException.InitSourceName(System.String)">
            <summary> Initialize the uri of the script source containing the error.
            
            </summary>
            <param name="sourceName">the uri of the script source reponsible for the error.
            It should not be <tt>null</tt>.
            
            </param>
            <throws>  IllegalStateException if the method is called more then once. </throws>
        </member>
        <member name="P:EcmaScript.NET.EcmaScriptException.LineNumber">
            <summary> Returns the line number of the statement causing the error,
            or zero if not available.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.EcmaScriptException.InitLineNumber(System.Int32)">
            <summary> Initialize the line number of the script statement causing the error.
            
            </summary>
            <param name="lineNumber">the line number in the script source.
            It should be positive number.
            
            </param>
            <throws>  IllegalStateException if the method is called more then once. </throws>
        </member>
        <member name="P:EcmaScript.NET.EcmaScriptException.ColumnNumber">
            <summary> The column number of the location of the error, or zero if unknown.</summary>
        </member>
        <member name="M:EcmaScript.NET.EcmaScriptException.InitColumnNumber(System.Int32)">
            <summary> Initialize the column number of the script statement causing the error.
            
            </summary>
            <param name="columnNumber">the column number in the script source.
            It should be positive number.
            
            </param>
            <throws>  IllegalStateException if the method is called more then once. </throws>
        </member>
        <member name="P:EcmaScript.NET.EcmaScriptException.LineSource">
            <summary> The source text of the line causing the error, or null if unknown.</summary>
        </member>
        <member name="M:EcmaScript.NET.EcmaScriptException.InitLineSource(System.String)">
            <summary> Initialize the text of the source line containing the error.
            
            </summary>
            <param name="lineSource">the text of the source line reponsible for the error.
            It should not be <tt>null</tt>.
            
            </param>
            <throws>  IllegalStateException if the method is called more then once. </throws>
        </member>
        <member name="T:EcmaScript.NET.EcmaScriptRuntimeException">
            <summary> The class of exceptions thrown by the JavaScript engine.</summary>
        </member>
        <member name="M:EcmaScript.NET.EcmaScriptRuntimeException.#ctor(System.String,System.String,System.Int32)">
            <summary> Create an exception with the specified detail message.
            
            Errors internal to the JavaScript engine will simply throw a
            RuntimeException.
            
            </summary>
            <param name="detail">the error message
            </param>
            <param name="sourceName">the name of the source reponsible for the error
            </param>
            <param name="lineNumber">the line number of the source
            </param>
        </member>
        <member name="M:EcmaScript.NET.EcmaScriptRuntimeException.#ctor(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary> Create an exception with the specified detail message.
            
            Errors internal to the JavaScript engine will simply throw a
            RuntimeException.
            
            </summary>
            <param name="detail">the error message
            </param>
            <param name="sourceName">the name of the source reponsible for the error
            </param>
            <param name="lineNumber">the line number of the source
            </param>
            <param name="columnNumber">the columnNumber of the source (may be zero if
            unknown)
            </param>
            <param name="lineSource">the source of the line containing the error (may be
            null if unknown)
            </param>
        </member>
        <member name="T:EcmaScript.NET.EcmaScriptThrow">
            <summary> Java reflection of JavaScript exceptions.
            Instances of this class are thrown by the JavaScript 'throw' keyword.
            
            </summary>
        </member>
        <member name="P:EcmaScript.NET.EcmaScriptThrow.Value">
            <returns> the value wrapped by this exception
            </returns>
        </member>
        <member name="M:EcmaScript.NET.EcmaScriptThrow.#ctor(System.Object,System.String,System.Int32)">
            <summary>
            Create a JavaScript exception wrapping the given JavaScript value
            </summary>
            <param name="value">the JavaScript value thrown.</param>
        </member>
        <member name="T:EcmaScript.NET.ErrorReporter">
            <summary> This is interface defines a protocol for the reporting of
            errors during JavaScript translation or execution.
            
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ErrorReporter.Warning(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary> Report a warning.
            
            The implementing class may choose to ignore the warning
            if it desires.
            
            </summary>
            <param name="message">a String describing the warning
            </param>
            <param name="sourceName">a String describing the JavaScript source
            where the warning occured; typically a filename or URL
            </param>
            <param name="line">the line number associated with the warning
            </param>
            <param name="lineSource">the text of the line (may be null)
            </param>
            <param name="lineOffset">the offset into lineSource where problem was detected
            </param>
        </member>
        <member name="M:EcmaScript.NET.ErrorReporter.Error(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary> Report an error.
            
            The implementing class is free to throw an exception if
            it desires.
            
            If execution has not yet begun, the JavaScript engine is
            free to find additional errors rather than terminating
            the translation. It will not execute a script that had
            errors, however.
            
            </summary>
            <param name="message">a String describing the error
            </param>
            <param name="sourceName">a String describing the JavaScript source
            where the error occured; typically a filename or URL
            </param>
            <param name="line">the line number associated with the error
            </param>
            <param name="lineSource">the text of the line (may be null)
            </param>
            <param name="lineOffset">the offset into lineSource where problem was detected
            </param>
        </member>
        <member name="M:EcmaScript.NET.ErrorReporter.RuntimeError(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary> Creates an EvaluatorException that may be thrown.
            
            runtimeErrors, unlike errors, will always terminate the
            current script.
            
            </summary>
            <param name="message">a String describing the error
            </param>
            <param name="sourceName">a String describing the JavaScript source
            where the error occured; typically a filename or URL
            </param>
            <param name="line">the line number associated with the error
            </param>
            <param name="lineSource">the text of the line (may be null)
            </param>
            <param name="lineOffset">the offset into lineSource where problem was detected
            </param>
            <returns> an EvaluatorException that will be thrown.
            </returns>
        </member>
        <member name="F:EcmaScript.NET.FunctionNode.FUNCTION_STATEMENT">
            <summary>
            There are three types of functions that can be defined. The first
            is a function statement. This is a function appearing as a top-level
            statement (i.e., not nested inside some other statement) in either a
            script or a function.
            
            The second is a function expression, which is a function appearing in
            an expression except for the third type, which is...
            
            The third type is a function expression where the expression is the
            top-level expression in an expression statement.
            
            The three types of functions have different treatment and must be
            distinquished.
            </summary>
        </member>
        <member name="T:EcmaScript.NET.ICallable">
            <summary> Generic notion of callable object that can execute some script-related code
            upon request with specified values for script scope and this objects.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ICallable.Call(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> Perform the call.
            
            </summary>
            <param name="cx">the current Context for this thread
            </param>
            <param name="scope">the scope to use to resolve properties.
            </param>
            <param name="thisObj">the JavaScript <code>this</code> object
            </param>
            <param name="args">the array of arguments
            </param>
            <returns> the result of the call
            </returns>
        </member>
        <member name="T:EcmaScript.NET.IdEnumeration">
            <summary>
            This is the enumeration needed by the for..in statement.
            
            See ECMA 12.6.3.
            
            IdEnumeration maintains a ObjToIntMap to make sure a given
            id is enumerated only once across multiple objects in a
            prototype chain.
            
            ECMA delete doesn't hide properties in the prototype,
            but js/ref does. This means that the js/ref for..in can
            avoid maintaining a hash table and instead perform lookups
            to see if a given property has already been enumerated.
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:EcmaScript.NET.IdScriptableObject" -->
        <member name="P:EcmaScript.NET.IdScriptableObject.MaxInstanceId">
            <summary>
            Get maximum id findInstanceIdInfo can generate.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.IdScriptableObject.FindInstanceIdInfo(System.String)">
            <summary> 
            Map name to id of instance property.
            Should return 0 if not found or the result of
            {@link #instanceIdInfo(int, int)}.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.IdScriptableObject.GetInstanceIdName(System.Int32)">
            <summary>
            Map id back to property name it defines.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.IdScriptableObject.GetInstanceIdValue(System.Int32)">
            <summary>
            Get id value.
            * If id value is constant, descendant can call cacheIdValue to store
            * value in the permanent cache.
            * Default implementation creates IdFunctionObject instance for given id
            * and cache its value
            </summary>
        </member>
        <member name="M:EcmaScript.NET.IdScriptableObject.SetInstanceIdValue(System.Int32,System.Object)">
            <summary>
            Set or delete id value. If value == NOT_FOUND , the implementation
            should make sure that the following getInstanceIdValue return NOT_FOUND.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.IdScriptableObject.ExecIdCall(EcmaScript.NET.IdFunctionObject,EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Object[])">
            <summary>'thisObj' will be null if invoked as constructor, in which case
            * instance of Scriptable should be returned. 
            </summary>
        </member>
        <member name="M:EcmaScript.NET.IdScriptableObject.IncompatibleCallError(EcmaScript.NET.IdFunctionObject)">
            <summary> 
            Utility method to construct type error to indicate incompatible call
            when converting script thisObj to a particular type is not possible.
            Possible usage would be to have a private function like realThis:
            <pre>
            private static NativeSomething realThis(Scriptable thisObj,
            IdFunctionObject f)
            {
            if (!(thisObj instanceof NativeSomething))
            throw incompatibleCallError(f);
            return (NativeSomething)thisObj;
            }
            </pre>
            Note that although such function can be implemented universally via
            java.lang.Class.isInstance(), it would be much more slower.
            </summary>
            <param name="readOnly">specify if the function f does not change state of
            object.
            </param>
            <returns> Scriptable object suitable for a check by the instanceof
            operator.
            </returns>
            <throws>  RuntimeException if no more instanceof target can be found </throws>
        </member>
        <member name="T:EcmaScript.NET.IFunction">
            <summary> This is interface that all functions in JavaScript must implement.
            The interface provides for calling functions and constructors.
            
            </summary>	
        </member>
        <member name="M:EcmaScript.NET.IFunction.Construct(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> Call the function as a constructor.
            
            This method is invoked by the runtime in order to satisfy a use
            of the JavaScript <code>new</code> operator.  This method is
            expected to create a new object and return it.
            
            </summary>
            <param name="cx">the current Context for this thread
            </param>
            <param name="scope">an enclosing scope of the caller except
            when the function is called from a closure.
            </param>
            <param name="args">the array of arguments
            </param>
            <returns> the allocated object
            </returns>
        </member>
        <member name="T:EcmaScript.NET.IIdEnumerable">
            <summary>
            Summary description for IdEnumerable.
            </summary>
        </member>
        <member name="T:EcmaScript.NET.IIdFunctionCall">
            <summary> 
            Master for id-based functions that knows their properties and how to
            execute them.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.IIdFunctionCall.ExecIdCall(EcmaScript.NET.IdFunctionObject,EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> 
            'thisObj' will be null if invoked as constructor, in which case
            instance of Scriptable should be returned
            </summary>
        </member>
        <member name="M:EcmaScript.NET.InterpretedFunction.createScript(EcmaScript.NET.InterpreterData,System.Object)">
            <summary> Create script from compiled bytecode.</summary>
        </member>
        <member name="M:EcmaScript.NET.InterpretedFunction.createFunction(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.InterpreterData,System.Object)">
            <summary> Create function compiled from Function(...) constructor.</summary>
        </member>
        <member name="M:EcmaScript.NET.InterpretedFunction.createFunction(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.InterpretedFunction,System.Int32)">
            <summary> Create function embedded in script or another function.</summary>
        </member>
        <member name="T:EcmaScript.NET.IRef">
            <summary> Generic notion of reference object that know how to query/modify the
            target objects based on some property/index.
            </summary>
        </member>
        <member name="T:EcmaScript.NET.IRefCallable">
            <summary>
            Object that can allows assignments to the result of function calls.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.IRefCallable.RefCall(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> Perform function call in reference context.
            The args array reference should not be stored in any object that is
            can be GC-reachable after this method returns. If this is necessary,
            for example, to implement {@link Ref} methods, then store args.clone(),
            not args array itself.
            
            </summary>
            <param name="cx">the current Context for this thread
            </param>
            <param name="thisObj">the JavaScript <code>this</code> object
            </param>
            <param name="args">the array of arguments
            </param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:EcmaScript.NET.IScript" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.IScript.Exec(EcmaScript.NET.Context,EcmaScript.NET.IScriptable)" -->
        <!-- Badly formed XML comment ignored for member "T:EcmaScript.NET.IScriptable" -->
        <!-- Badly formed XML comment ignored for member "P:EcmaScript.NET.IScriptable.ClassName" -->
        <member name="P:EcmaScript.NET.IScriptable.ParentScope">
            <summary> Get the parent scope of the object.</summary>
            <returns> the parent scope
            </returns>
            <summary> Set the parent scope of the object.</summary>
            <param name="parent">the parent scope to set
            </param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.IScriptable.Get(System.String,EcmaScript.NET.IScriptable)" -->
        <member name="M:EcmaScript.NET.IScriptable.Get(System.Int32,EcmaScript.NET.IScriptable)">
            <summary> Get a property from the object selected by an integral index.
            
            Identical to <code>get(String, Scriptable)</code> except that
            an integral index is used to select the property.
            
            </summary>
            <param name="index">the numeric index for the property
            </param>
            <param name="start">the object in which the lookup began
            </param>
            <returns> the value of the property (may be null), or NOT_FOUND
            </returns>        
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.IScriptable.Has(System.String,EcmaScript.NET.IScriptable)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.IScriptable.Has(System.Int32,EcmaScript.NET.IScriptable)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.IScriptable.Put(System.String,EcmaScript.NET.IScriptable,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.IScriptable.Put(System.Int32,EcmaScript.NET.IScriptable,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.IScriptable.Delete(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.IScriptable.Delete(System.Int32)" -->
        <member name="M:EcmaScript.NET.IScriptable.GetPrototype">
            <summary> Get the prototype of the object.</summary>
            <returns> the prototype
            </returns>
        </member>
        <member name="M:EcmaScript.NET.IScriptable.SetPrototype(EcmaScript.NET.IScriptable)">
            <summary> Set the prototype of the object.</summary>
            <param name="prototype">the prototype to set
            </param>
        </member>
        <member name="M:EcmaScript.NET.IScriptable.GetIds">
            <summary> Get an array of property ids.
            
            Not all property ids need be returned. Those properties
            whose ids are not returned are considered non-enumerable.
            
            </summary>
            <returns> an array of Objects. Each entry in the array is either
            a java.lang.String or a java.lang.Number
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.IScriptable.GetDefaultValue(System.Type)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.IScriptable.HasInstance(EcmaScript.NET.IScriptable)" -->
        <member name="T:EcmaScript.NET.Node">
            <summary> This class implements the root of the intermediate representation.
            
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Node.Double">
            <summary>Can only be called when <tt>getType() == Token.NUMBER</tt> </summary>
        </member>
        <member name="P:EcmaScript.NET.Node.String">
            <summary>Can only be called when node has String context. </summary>		
        </member>
        <member name="M:EcmaScript.NET.Node.addChildBefore(EcmaScript.NET.Node,EcmaScript.NET.Node)">
            <summary> Add 'child' before 'node'.</summary>
        </member>
        <member name="M:EcmaScript.NET.Node.addChildAfter(EcmaScript.NET.Node,EcmaScript.NET.Node)">
            <summary> Add 'child' after 'node'.</summary>
        </member>
        <member name="F:EcmaScript.NET.Node.propListHead">
            <summary> Linked list of properties. Since vast majority of nodes would have
            no more then 2 properties, linked list saves memory and provides
            fast lookup. If this does not holds, propListHead can be replaced
            by UintMap.
            </summary>
        </member>
        <member name="T:EcmaScript.NET.NodeFactory">
            <summary> This class allows the creation of nodes, and follows the Factory pattern.
            
            </summary>	
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.initScript(EcmaScript.NET.ScriptOrFnNode,EcmaScript.NET.Node)">
            <summary> Script (for associating file/url names with toplevel scripts.)</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateLeaf(System.Int32)">
            <summary> Leaf</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateSwitch(EcmaScript.NET.Node,System.Int32)">
            <summary> Statement leaf nodes.</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.addSwitchCase(EcmaScript.NET.Node,EcmaScript.NET.Node,EcmaScript.NET.Node)">
            <summary> If caseExpression argument is null it indicate default label.</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateName(System.String)">
            <summary> Name</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateString(System.String)">
            <summary> String (for literals)</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateNumber(System.Double)">
            <summary> Number (for literals)</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateCatch(System.String,EcmaScript.NET.Node,EcmaScript.NET.Node,System.Int32)">
            <summary> Catch clause of try/catch/finally</summary>
            <param name="varName">the name of the variable to bind to the exception
            </param>
            <param name="catchCond">the condition under which to catch the exception.
            May be null if no condition is given.
            </param>
            <param name="stmts">the statements in the catch clause
            </param>
            <param name="lineno">the starting line number of the catch clause
            </param>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateThrow(EcmaScript.NET.Node,System.Int32)">
            <summary> Throw</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateReturn(EcmaScript.NET.Node,System.Int32)">
            <summary> Return</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateDebugger(System.Int32)">
            <summary> Debugger</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateLabel(System.Int32)">
            <summary> Label</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateLabeledStatement(EcmaScript.NET.Node,EcmaScript.NET.Node)">
            <summary> Label</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateBreak(EcmaScript.NET.Node,System.Int32)">
            <summary> Break (possibly labeled)</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateContinue(EcmaScript.NET.Node,System.Int32)">
            <summary> Continue (possibly labeled)</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateBlock(System.Int32)">
            <summary> Statement block
            Creates the empty statement block
            Must make subsequent calls to add statements to the node
            </summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.addChildToBack(EcmaScript.NET.Node,EcmaScript.NET.Node)">
            <summary> Add a child to the back of the given node.  This function
            breaks the Factory abstraction, but it removes a requirement
            from implementors of Node.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateLoopNode(EcmaScript.NET.Node,System.Int32)">
            <summary> Create loop node. The parser will later call
            CreateWhile|CreateDoWhile|CreateFor|CreateForIn
            to finish loop generation.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateWhile(EcmaScript.NET.Node,EcmaScript.NET.Node,EcmaScript.NET.Node)">
            <summary> While</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateDoWhile(EcmaScript.NET.Node,EcmaScript.NET.Node,EcmaScript.NET.Node)">
            <summary> DoWhile</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateFor(EcmaScript.NET.Node,EcmaScript.NET.Node,EcmaScript.NET.Node,EcmaScript.NET.Node,EcmaScript.NET.Node)">
            <summary> For</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateForIn(EcmaScript.NET.Node,EcmaScript.NET.Node,EcmaScript.NET.Node,EcmaScript.NET.Node,System.Boolean)">
            <summary> For .. In
            
            </summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateTryCatchFinally(EcmaScript.NET.Node,EcmaScript.NET.Node,EcmaScript.NET.Node,System.Int32)">
            <summary> Try/Catch/Finally
            
            The IRFactory tries to express as much as possible in the tree;
            the responsibilities remaining for Codegen are to add the Java
            handlers: (Either (but not both) of TARGET and FINALLY might not
            be defined)
            - a catch handler for javascript exceptions that unwraps the
            exception onto the stack and GOTOes to the catch target
            - a finally handler
            ... and a goto to GOTO around these handlers.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateWith(EcmaScript.NET.Node,EcmaScript.NET.Node,System.Int32)">
            <summary> Throw, Return, Label, Break and Continue are defined in ASTFactory.</summary>
            <summary> With</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateDotQuery(EcmaScript.NET.Node,EcmaScript.NET.Node,System.Int32)">
            <summary> DOTQUERY</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.NodeFactory.CreateObjectLiteral(EcmaScript.NET.Collections.ObjArray)" -->
        <member name="M:EcmaScript.NET.NodeFactory.CreateRegExp(System.Int32)">
            <summary> Regular expressions</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateIf(EcmaScript.NET.Node,EcmaScript.NET.Node,EcmaScript.NET.Node,System.Int32)">
            <summary> If statement</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateUnary(System.Int32,EcmaScript.NET.Node)">
            <summary> Unary</summary>
        </member>
        <member name="M:EcmaScript.NET.NodeFactory.CreateBinary(System.Int32,EcmaScript.NET.Node,EcmaScript.NET.Node)">
            <summary> Binary</summary>
        </member>
        <member name="T:EcmaScript.NET.NodeTransformer">
            <summary> This class transforms a tree to a lower-level representation for codegen.
            
            </summary>	
        </member>
        <member name="T:EcmaScript.NET.Parser">
            <summary> This class implements the JavaScript parser.
            
            It is based on the C source files jsparse.c and jsparse.h
            in the jsref package.
            
            </summary>	
        </member>
        <member name="M:EcmaScript.NET.Parser.statementHelper(EcmaScript.NET.Node)">
            <summary> Whether the "catch (e: e instanceof Exception) { ... }" syntax
            is implemented.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Parser.propertyName(EcmaScript.NET.Node,System.String,System.Int32)">
            <summary> Check if :: follows name in which case it becomes qualified name</summary>
        </member>
        <member name="M:EcmaScript.NET.Parser.CheckForGetOrSet(EcmaScript.NET.Collections.ObjArray)">
            <summary>
            Support for non-ecma "get"/"set" spidermonkey extension.
            </summary>
            <example>
            	get NAME () SCOPE
            	set NAME () SCOPE
            </example>
        </member>
        <member name="M:EcmaScript.NET.Parser.CheckForGetterOrSetter(EcmaScript.NET.Collections.ObjArray)">
            <summary>
            Support for non-ecma "get"/"set" spidermonkey extension.
            </summary>
            <example>
            	NAME getter: FUNCTION () SCOPE
            	NAME setter: FUNCTION () SCOPE
            </example>
        </member>
        <member name="T:EcmaScript.NET.RegExpProxy">
            <summary>
            A proxy for the regexp package, so that the regexp package can be
            loaded optionally.
            </summary>    
        </member>
        <!-- Badly formed XML comment ignored for member "T:EcmaScript.NET.ScriptableObject" -->
        <member name="P:EcmaScript.NET.ScriptableObject.ClassName">
            <summary> Return the name of the class.
            
            This is typically the same name as the constructor.
            Classes extending ScriptableObject must implement this abstract
            method.
            </summary>
        </member>
        <member name="P:EcmaScript.NET.ScriptableObject.ParentScope">
            <summary> Returns the parent (enclosing) scope of the object.</summary>
            <summary> Sets the parent (enclosing) scope of the object.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:EcmaScript.NET.ScriptableObject.AllIds" -->
        <member name="P:EcmaScript.NET.ScriptableObject.Sealed">
            <summary> Return true if this object is sealed.
            
            It is an error to attempt to add or remove properties to
            a sealed object.
            
            </summary>
            <returns> true if sealed, false otherwise.
            </returns>
        </member>
        <member name="F:EcmaScript.NET.ScriptableObject.EMPTY">
            <summary> The empty property attribute.
            
            Used by getAttributes() and setAttributes().
            
            </summary>        
        </member>
        <member name="F:EcmaScript.NET.ScriptableObject.READONLY">
            <summary> Property attribute indicating assignment to this property is ignored.
            
            </summary>        
        </member>
        <member name="F:EcmaScript.NET.ScriptableObject.DONTENUM">
            <summary> Property attribute indicating property is not enumerated.
            
            Only enumerated properties will be returned by getIds().
            
            </summary>        
        </member>
        <member name="F:EcmaScript.NET.ScriptableObject.PERMANENT">
            <summary> Property attribute indicating property cannot be deleted.
            
            </summary>        
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.Has(System.String,EcmaScript.NET.IScriptable)">
            <summary> Returns true if the named property is defined.
            
            </summary>
            <param name="name">the name of the property
            </param>
            <param name="start">the object in which the lookup began
            </param>
            <returns> true if and only if the property was found in the object
            </returns>
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.Has(System.Int32,EcmaScript.NET.IScriptable)">
            <summary> Returns true if the property index is defined.
            
            </summary>
            <param name="index">the numeric index for the property
            </param>
            <param name="start">the object in which the lookup began
            </param>
            <returns> true if and only if the property was found in the object
            </returns>
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.Get(System.String,EcmaScript.NET.IScriptable)">
            <summary> Returns the value of the named property or NOT_FOUND.
            
            If the property was created using defineProperty, the
            appropriate getter method is called.
            
            </summary>
            <param name="name">the name of the property
            </param>
            <param name="start">the object in which the lookup began
            </param>
            <returns> the value of the property (may be null), or NOT_FOUND
            </returns>
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.Get(System.Int32,EcmaScript.NET.IScriptable)">
            <summary> Returns the value of the indexed property or NOT_FOUND.
            
            </summary>
            <param name="index">the numeric index for the property
            </param>
            <param name="start">the object in which the lookup began
            </param>
            <returns> the value of the property (may be null), or NOT_FOUND
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.Put(System.String,EcmaScript.NET.IScriptable,System.Object)" -->
        <member name="M:EcmaScript.NET.ScriptableObject.Put(System.Int32,EcmaScript.NET.IScriptable,System.Object)">
            <summary> Sets the value of the indexed property, creating it if need be.
            
            </summary>
            <param name="index">the numeric index for the property
            </param>
            <param name="start">the object whose property is being set
            </param>
            <param name="value">value to set the property to
            </param>
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.Delete(System.String)">
            <summary> Removes a named property from the object.
            
            If the property is not found, or it has the PERMANENT attribute,
            no action is taken.
            
            </summary>
            <param name="name">the name of the property
            </param>
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.Delete(System.Int32)">
            <summary> Removes the indexed property from the object.
            
            If the property is not found, or it has the PERMANENT attribute,
            no action is taken.
            
            </summary>
            <param name="index">the numeric index for the property
            </param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.GetAttributes(System.String)" -->
        <member name="M:EcmaScript.NET.ScriptableObject.GetAttributes(System.Int32)">
            <summary> Get the attributes of an indexed property.
            
            </summary>
            <param name="index">the numeric index for the property
            </param>
            <exception cref="!:"> EvaluatorException if the named property is not found
            is not found
            </exception>
            <returns> the bitset of attributes
            </returns>        
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.SetAttributes(System.String,System.Int32)" -->
        <member name="M:EcmaScript.NET.ScriptableObject.SetAttributes(System.Int32,System.Int32)">
            <summary> Set the attributes of an indexed property.
            
            </summary>
            <param name="index">the numeric index for the property
            </param>
            <param name="attributes">the bitset of attributes
            </param>
            <exception cref="!:"> EvaluatorException if the named property is not found
            </exception>        
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.GetPrototype">
            <summary> Returns the prototype of the object.</summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.SetPrototype(EcmaScript.NET.IScriptable)">
            <summary> Sets the prototype of the object.</summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.GetIds" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.GetDefaultValue(System.Type)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.HasInstance(EcmaScript.NET.IScriptable)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.EquivalentValues(System.Object)" -->
        <member name="M:EcmaScript.NET.ScriptableObject.DefineProperty(System.String,System.Object,System.Int32)">
            <summary> Define a JavaScript property.
            
            Creates the property with an initial value and sets its attributes.
            
            </summary>
            <param name="propertyName">the name of the property to define.
            </param>
            <param name="value">the initial value of the property
            </param>
            <param name="attributes">the attributes of the JavaScript property
            </param>        
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.DefineProperty(EcmaScript.NET.IScriptable,System.String,System.Object,System.Int32)">
            <summary> Utility method to add properties to arbitrary Scriptable object.
            If destination is instance of ScriptableObject, calls
            defineProperty there, otherwise calls put in destination
            ignoring attributes
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.GetObjectPrototype(EcmaScript.NET.IScriptable)">
            <summary> Get the Object.prototype property.
            See ECMA 15.2.4.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.GetFunctionPrototype(EcmaScript.NET.IScriptable)">
            <summary> Get the Function.prototype property.
            See ECMA 15.3.4.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.getClassPrototype(EcmaScript.NET.IScriptable,System.String)">
            <summary> Get the prototype for the named class.
            
            For example, <code>getClassPrototype(s, "Date")</code> will first
            walk up the parent chain to find the outermost scope, then will
            search that scope for the Date constructor, and then will
            return Date.prototype. If any of the lookups fail, or
            the prototype is not a JavaScript object, then null will
            be returned.
            
            </summary>
            <param name="scope">an object in the scope chain
            </param>
            <param name="className">the name of the constructor
            </param>
            <returns> the prototype for the named class, or null if it
            cannot be found.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.GetTopLevelScope(EcmaScript.NET.IScriptable)" -->
        <member name="M:EcmaScript.NET.ScriptableObject.SealObject">
            <summary> Seal this object.
            
            A sealed object may not have properties added or removed. Once
            an object is sealed it may not be unsealed.
            
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.GetProperty(EcmaScript.NET.IScriptable,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.GetProperty(EcmaScript.NET.IScriptable,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.HasProperty(EcmaScript.NET.IScriptable,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.HasProperty(EcmaScript.NET.IScriptable,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.PutProperty(EcmaScript.NET.IScriptable,System.String,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.PutProperty(EcmaScript.NET.IScriptable,System.Int32,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.DeleteProperty(EcmaScript.NET.IScriptable,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.DeleteProperty(EcmaScript.NET.IScriptable,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.GetPropertyIds(EcmaScript.NET.IScriptable)" -->
        <member name="M:EcmaScript.NET.ScriptableObject.CallMethod(EcmaScript.NET.IScriptable,System.String,System.Object[])">
            <summary> Call a method of an object.</summary>
            <param name="obj">the JavaScript object
            </param>
            <param name="methodName">the name of the function property
            </param>
            <param name="args">the arguments for the call
            
            </param>        
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.CallMethod(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.String,System.Object[])">
            <summary> Call a method of an object.</summary>
            <param name="cx">the Context object associated with the current thread.
            </param>
            <param name="obj">the JavaScript object
            </param>
            <param name="methodName">the name of the function property
            </param>
            <param name="args">the arguments for the call
            </param>
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.GetAssociatedValue(System.Object)">
            <summary> Get arbitrary application-specific value associated with this object.</summary>
            <param name="key">key object to select particular value.
            </param>        
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.GetTopScopeValue(EcmaScript.NET.IScriptable,System.Object)">
            <summary> Get arbitrary application-specific value associated with the top scope
            of the given scope.
            The method first calls {@link #getTopLevelScope(Scriptable scope)}
            and then searches the prototype chain of the top scope for the first
            object containing the associated value with the given key.
            
            </summary>
            <param name="scope">the starting scope.
            </param>
            <param name="key">key object to select particular value.
            </param>        
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptableObject.AssociateValue(System.Object,System.Object)" -->
        <member name="M:EcmaScript.NET.ScriptableObject.AddSlot(System.String,System.Int32,EcmaScript.NET.ScriptableObject.Slot)">
            <summary> Add a new slot to the hash table.
            
            This method must be synchronized since it is altering the hash
            table itself. Note that we search again for the slot to set
            since another thread could have added the given property or
            caused the table to grow while this thread was searching.
            </summary>        
        </member>
        <member name="M:EcmaScript.NET.ScriptableObject.RemoveSlot(System.String,System.Int32)">
            <summary> Remove a slot from the hash table.
            
            This method must be synchronized since it is altering the hash
            table itself. We might be able to optimize this more, but
            deletes are not common.
            </summary>        
        </member>
        <member name="F:EcmaScript.NET.ScriptableObject.prototypeObject">
            <summary> The prototype of this object.</summary>
        </member>
        <member name="F:EcmaScript.NET.ScriptableObject.parentScopeObject">
            <summary> The parent scope of this object.</summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.XDigitToInt(System.Int32,System.Int32)">
            <summary>
            If character <tt>c</tt> is a hexadecimal digit, return
            <tt>accumulator</tt> * 16 plus corresponding
            number. Otherise return -1.
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.ToObject(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object)">
            <summary> Convert the value to an object.
            
            See ECMA 9.9.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.ToInteger(System.Object)">
            <summary> 
            See ECMA 9.4.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.ToInt32(System.Object)">
            <summary> 
            See ECMA 9.5.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.ToUint32(System.Double)">
            <summary> See ECMA 9.6.</summary>
            <returns> long value representing 32 bits unsigned integer
            </returns>
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.ToBoolean(System.Object)">
            <summary> Convert the value to a boolean.
            
            See ECMA 9.2.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.ToNumber(System.Object)">
            <summary> Convert the value to a number.
            
            See ECMA 9.3.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.ToString(System.Object)">
            <summary> Convert the value to a string.
            
            See ECMA 9.8.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.ToNumber(System.String)">
            <summary> ToNumber applied to the String type
            
            See ECMA 9.3.1
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.ToUint16(System.Object)">
            <summary> 
            See ECMA 9.7.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.ToString(System.Double)">
            <summary> Optimized version of toString(Object) for numbers.</summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptConvert.ToString(System.Double,System.Int32)">
            <summary>
            See ECMA 9.8.1
            </summary>
            <param name="d"></param>
            <param name="toBase"></param>
            <returns></returns>
        </member>
        <member name="T:EcmaScript.NET.ScriptRuntime">
            <summary> This is the class that implements the runtime.
            
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.#ctor">
            <summary> No instances should be created.</summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.padArguments(System.Object[],System.Int32)">
            <summary> Helper function for builtin objects that use the varargs form.
            ECMA function formal arguments are undefined if not supplied;
            this function pads the argument array out to the expected
            length, if necessary.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.escapeString(System.String,System.Char)">
            <summary> For escaping strings printed by object and array literals; not quite
            the same as 'escape.'
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.indexFromString(System.String)">
            <summary> Return -1L if str is not an index or the index value as lower 32
            bits of the result.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.testUint32String(System.String)">
            <summary> If str is a decimal presentation of Uint32 value, return it as long.
            Othewise return -1L;
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.getIndexObject(System.String)">
            <summary> If s represents index, then return index value wrapped as Integer
            and othewise return s.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.getIndexObject(System.Double)">
            <summary> If d is exact int value, return its value wrapped as Integer
            and othewise return d converted to String.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.ToStringIdOrIndex(EcmaScript.NET.Context,System.Object)">
            <summary> If ScriptConvert.ToString(id) is a decimal presentation of int32 value, then id
            is index. In this case return null and make the index available
            as ScriptRuntime.lastIndexResult(cx). Otherwise return ScriptConvert.ToString(id).
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.getObjectElem(System.Object,System.Object,EcmaScript.NET.Context)">
            <summary> Call obj.[[Get]](id)</summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.getObjectProp(System.Object,System.String,EcmaScript.NET.Context)">
            <summary> Version of getObjectElem when elem is a valid JS identifier name.</summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.setObjectProp(System.Object,System.String,System.Object,EcmaScript.NET.Context)">
            <summary> Version of setObjectElem when elem is a valid JS identifier name.</summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.delete(System.Object,System.Object,EcmaScript.NET.Context)">
            <summary> The delete operator
            
            See ECMA 11.4.1
            
            In ECMA 0.19, the description of the delete operator (11.4.1)
            assumes that the [[Delete]] method returns a value. However,
            the definition of the [[Delete]] operator (8.6.2.5) does not
            define a return value. Here we assume that the [[Delete]]
            method doesn't return a value.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.name(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.String)">
            <summary> Looks up a name in the scope chain and returns its value.</summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.bind(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.String)">
            <summary> Returns the object in the scope chain that has a given property.
            
            The order of evaluation of an assignment expression involves
            evaluating the lhs to a reference, evaluating the rhs, and then
            modifying the reference with the rhs value. This method is used
            to 'bind' the given name to an object containing that property
            so that the side effects of evaluating the rhs do not affect
            which property is modified.
            Typically used in conjunction with setName.
            
            See ECMA 10.1.4
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.getNameFunctionAndThis(System.String,EcmaScript.NET.Context,EcmaScript.NET.IScriptable)">
            <summary> Prepare for calling name(...): return function corresponding to
            name and make current top scope available
            as ScriptRuntime.lastStoredScriptable() for consumption as thisObj.
            The caller must call ScriptRuntime.lastStoredScriptable() immediately
            after calling this method.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.GetElemFunctionAndThis(System.Object,System.Object,EcmaScript.NET.Context)">
            <summary> Prepare for calling obj[id](...): return function corresponding to
            obj[id] and make obj properly converted to Scriptable available
            as ScriptRuntime.lastStoredScriptable() for consumption as thisObj.
            The caller must call ScriptRuntime.lastStoredScriptable() immediately
            after calling this method.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.getPropFunctionAndThis(System.Object,System.String,EcmaScript.NET.Context)">
            <summary> Prepare for calling obj.property(...): return function corresponding to
            obj.property and make obj properly converted to Scriptable available
            as ScriptRuntime.lastStoredScriptable() for consumption as thisObj.
            The caller must call ScriptRuntime.lastStoredScriptable() immediately
            after calling this method.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptRuntime.getValueFunctionAndThis(System.Object,EcmaScript.NET.Context)" -->
        <member name="M:EcmaScript.NET.ScriptRuntime.callRef(EcmaScript.NET.ICallable,EcmaScript.NET.IScriptable,System.Object[],EcmaScript.NET.Context)">
            <summary> Perform function call in reference context. Should always
            return value that can be passed to
            {@link #refGet(Object)} or @link #refSet(Object, Object)}
            arbitrary number of times.
            The args array reference should not be stored in any object that is
            can be GC-reachable after this method returns. If this is necessary,
            store args.clone(), not args array itself.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.NewObject(System.Object,EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> Operator new.
            
            See ECMA 11.2.2
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.applyOrCall(System.Boolean,EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> Function.prototype.apply and Function.prototype.call
            
            See Ecma 15.3.4.[34]
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.evalSpecial(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object,System.Object[],System.String,System.Int32)">
            <summary> The eval function property of the global object.
            
            See ECMA 15.1.2.1
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.Typeof(System.Object)">
            <summary> The typeof operator</summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.TypeofName(EcmaScript.NET.IScriptable,System.String)">
            <summary> The typeof operator that correctly handles the undefined case</summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.eq(System.Object,System.Object)">
            <summary> Equality
            
            See ECMA 11.9
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.InstanceOf(System.Object,System.Object,EcmaScript.NET.Context)">
            <summary> The instanceof operator.
            
            </summary>
            <returns> a instanceof b
            </returns>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.jsDelegatesTo(EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable)">
            <summary> Delegates to
            
            </summary>
            <returns> true iff rhs appears in lhs' proto chain
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.ScriptRuntime.In(System.Object,System.Object,EcmaScript.NET.Context)" -->
        <member name="M:EcmaScript.NET.ScriptRuntime.checkDynamicScope(EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable)">
            <summary> Return <tt>possibleDynamicScope</tt> if <tt>staticTopScope</tt>
            is present on its prototype chain and return <tt>staticTopScope</tt>
            otherwise.
            Should only be called when <tt>staticTopScope</tt> is top scope.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.escapeAttributeValue(System.Object,EcmaScript.NET.Context)">
            <summary> Escapes the reserved characters in a value of an attribute
            
            </summary>
            <param name="value">Unescaped text
            </param>
            <returns> The escaped text
            </returns>
        </member>
        <member name="M:EcmaScript.NET.ScriptRuntime.escapeTextValue(System.Object,EcmaScript.NET.Context)">
            <summary> Escapes the reserved characters in a value of a text node
            
            </summary>
            <param name="value">Unescaped text
            </param>
            <returns> The escaped text
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:EcmaScript.NET.SecurityController" -->
        <member name="M:EcmaScript.NET.SecurityController.HasGlobal">
            <summary> Check if global {@link SecurityController} was already installed.</summary>		
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.SecurityController.initGlobal(EcmaScript.NET.SecurityController)" -->
        <member name="M:EcmaScript.NET.SecurityController.getDynamicSecurityDomain(System.Object)">
            <summary> Get dynamic security domain that allows an action only if it is allowed
            by the current Java stack and <i>securityDomain</i>. If
            <i>securityDomain</i> is null, return domain representing permissions
            allowed by the current stack.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.SecurityController.callWithDomain(System.Object,EcmaScript.NET.Context,EcmaScript.NET.ICallable,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Object[])" -->
        <member name="T:EcmaScript.NET.Token">
            <summary> This class implements the JavaScript scanner.
            
            It is based on the C source files jsscan.c and jsscan.h
            in the jsref package.
            
            </summary>	
        </member>
        <member name="F:EcmaScript.NET.Token.ERROR">
            <summary>
            Token types.
            
            These values correspond to JSTokenType values in
            jsscan.c.
            </summary>
        </member>
        <member name="T:EcmaScript.NET.TokenStream">
            <summary> This class implements the JavaScript scanner.
            
            It is based on the C source files jsscan.c and jsscan.h
            in the jsref package.
            
            </summary>	
        </member>
        <member name="M:EcmaScript.NET.TokenStream.readRegExp(System.Int32)">
            <summary> Parser calls the method when it gets / or /= in literal context.</summary>
        </member>
        <member name="M:EcmaScript.NET.TokenStream.readQuotedString(System.Int32)">
            <summary> </summary>
        </member>
        <member name="M:EcmaScript.NET.TokenStream.readXmlComment">
            <summary> </summary>
        </member>
        <member name="M:EcmaScript.NET.TokenStream.readCDATA">
            <summary> </summary>
        </member>
        <member name="M:EcmaScript.NET.TokenStream.readEntity">
            <summary> </summary>
        </member>
        <member name="M:EcmaScript.NET.TokenStream.readPI">
            <summary> </summary>
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinArray">
            <summary>
            This class implements the Array native object.
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinArray.#ctor">
            <summary> Zero-parameter constructor: just used to create Array.prototype</summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinArray.ImplCtor(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> See ECMA 15.4.1,2</summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinArray.ImplJoin(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> See ECMA 15.4.4.3</summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinArray.ImplReverse(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> See ECMA 15.4.4.4</summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinArray.ImplSort(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> See ECMA 15.4.4.5</summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinArray.heapsort(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object[],System.Int32,System.Object,System.Object[])">
            <summary>Heapsort implementation.
            See "Introduction to Algorithms" by Cormen, Leiserson, Rivest for details.
            Adjusted for zero based indexes.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinArray.heapify(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object,System.Object[],System.Int32,System.Int32,System.Object,System.Object[])">
            <summary>pivot and child heaps of i should be made into heap starting at i,
            original array[i] is never used to have less array access during sorting.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinArray.heapsort_extended(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Int64,System.Object,System.Object[])">
            <summary>Version of heapsort that call getElem/setElem on target to query/assign
            array elements instead of Java array access
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinArray.ImplPush(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,System.Object[])">
            <summary> Non-ECMA methods.</summary>
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinBoolean">
            <summary>
            This class implements the Boolean native object.
            See ECMA 15.6.
            </summary>
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinCall">
            <summary> This class implements the activation object.
            
            See ECMA 10.1.6
            
            </summary>	
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinDate">
            <summary> This class implements the Date native object.
            See ECMA 15.9.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinDate.FromMilliseconds(System.Double)">
            <summary>
            Allocates a Date object and initializes it to represent the specified
            number of milliseconds since the standard base time known as
            "the epoch", namely January 1, 1970, 00:00:00 GMT.
            </summary>
            <param name="ms"></param>
            <returns></returns>		
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinError">
            <summary> 
            The class of error objects
            
            ECMA 15.11
            </summary>
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinFunction">
            <summary> This class implements the Function native object.
            See ECMA 15.3.
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Types.BuiltinFunction.EncodedSource">
            <summary> Get encoded source string.</summary>
        </member>
        <member name="P:EcmaScript.NET.Types.BuiltinFunction.ParamCount">
            <summary> Get number of declared parameters. It should be 0 for scripts.</summary>
        </member>
        <member name="P:EcmaScript.NET.Types.BuiltinFunction.ParamAndVarCount">
            <summary> Get number of declared parameters and variables defined through var
            statements.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinFunction.Decompile(System.Int32,System.Int32)">
            <param name="indent">How much to indent the decompiled result
            
            </param>
            <param name="flags">Flags specifying format of decompilation output
            </param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Types.BuiltinFunction.getParamOrVarName(System.Int32)" -->
        <member name="T:EcmaScript.NET.Types.BuiltinGlobal">
            <summary> This class implements the global native object (function and value
            properties only).
            
            See ECMA 15.1.[12].
            
            </summary>	
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinGlobal.js_parseInt(System.Object[])">
            <summary> The global method parseInt, as per ECMA-262 15.1.2.2.</summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinGlobal.js_parseFloat(System.Object[])">
            <summary> The global method parseFloat, as per ECMA-262 15.1.2.3.
            
            </summary>
            <param name="cx">unused
            </param>
            <param name="thisObj">unused
            </param>
            <param name="args">the arguments to parseFloat, ignoring args[>=1]
            </param>
            <param name="funObj">unused
            </param>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinGlobal.js_escape(System.Object[])">
            <summary> The global method escape, as per ECMA-262 15.1.2.4.
            Includes code for the 'mask' argument supported by the C escape
            method, which used to be part of the browser imbedding.  Blame
            for the strange constant names should be directed there.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinGlobal.js_unescape(System.Object[])">
            <summary> The global unescape method, as per ECMA-262 15.1.2.5.</summary>
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinMath">
            <summary>
            This class implements the Math native object.
            See ECMA 15.8.
            </summary>
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinNumber">
            <summary> This class implements the Number native object.
            
            See ECMA 15.7.
            
            </summary>
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinObject">
            <summary> This class implements the Object native object.
            See ECMA 15.2.
            </summary>
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinScript">
            <summary>
            The JavaScript Script object.
            
            Note that the C version of the engine uses XDR as the format used
            by freeze and thaw. Since this depends on the internal format of
            structures in the C runtime, we cannot duplicate it.
            
            Since we cannot replace 'this' as a result of the compile method,
            will forward requests to execute to the nonnull 'script' field.
            
            </summary>	
        </member>
        <member name="P:EcmaScript.NET.Types.BuiltinScript.ClassName">
            <summary> Returns the name of this JavaScript class, "Script".</summary>
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinString">
            <summary>
            This class implements the String native object.
            
            See ECMA 15.5.
            
            String methods for dealing with regular expressions are
            ported directly from C. Latest port is from version 1.40.12.19
            in the JSFUN13_BRANCH.
            
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinString.Tagify(System.Object,System.String,System.String,System.Object[])">
            <summary>
            HTML composition aids.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinString.Get(System.Int32,EcmaScript.NET.IScriptable)">
            <summary>
            Make array-style property lookup work for strings. 
            
            TODO: is this ECMA?  A version check is probably needed. In js too.
            </summary>
            <param name="index"></param>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="T:EcmaScript.NET.Types.BuiltinWith">
            <summary>
            This class implements the object lookup required for the
            <code>with</code> statement.
            It simply delegates every action to its prototype except
            for operations on its parent.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.BuiltinWith.UpdateDotQuery(System.Boolean)">
            <summary>
            Must return null to continue looping or the final collection result.
            </summary>
        </member>
        <member name="T:EcmaScript.NET.Types.Cli.CliArray">
            <summary> This class reflects Java arrays into the JavaScript environment.
            
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.Cli.CliMethodInfo.FindFunction(EcmaScript.NET.Context,System.Reflection.MethodBase[],System.Object[],System.Boolean[])">
            <summary> Find the index of the correct function to call given the set of methods
            or constructors and the arguments.
            If no function can be found to call, return -1.
            </summary>
        </member>
        <member name="F:EcmaScript.NET.Types.Cli.CliMethodInfo.PREFERENCE_EQUAL">
            <summary>Types are equal </summary>
        </member>
        <member name="F:EcmaScript.NET.Types.Cli.CliMethodInfo.PREFERENCE_AMBIGUOUS">
            <summary>No clear "easy" conversion </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.Cli.CliMethodInfo.PreferSignature(System.Object[],System.Reflection.ParameterInfo[],System.Reflection.ParameterInfo[])">
            <summary> Determine which of two signatures is the closer fit.
            Returns one of PREFERENCE_EQUAL, PREFERENCE_FIRST_ARG,
            PREFERENCE_SECOND_ARG, or PREFERENCE_AMBIGUOUS.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.Cli.CliObject.GetConversionWeight(System.Object,System.Type)">
            <summary> Derive a ranking based on how "natural" the conversion is.
            The special value CONVERSION_NONE means no conversion is possible,
            and CONVERSION_NONTRIVIAL signals that more type conformance testing
            is required.
            Based on
            <a href="http://www.mozilla.org/js/liveconnect/lc3_method_overloading.html">
            "preferred method conversions" from Live Connect 3</a>
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.Cli.CliObject.CoerceType(System.Type,System.Object)">
            <summary> Type-munging for field setting and method invocation.
            Conforms to LC3 specification
            </summary>
        </member>
        <member name="P:EcmaScript.NET.Types.E4X.Namespace.ClassName">
            <summary> </summary>
            <returns>
            </returns>
        </member>
        <member name="P:EcmaScript.NET.Types.E4X.Namespace.Prefix">
            <summary> </summary>
            <returns>
            </returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.Namespace.ToString">
            <summary> </summary>
            <returns>
            </returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.Namespace.toLocaleString">
            <summary> </summary>
            <returns>
            </returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.Namespace.GetDefaultValue(System.Type)">
            <summary> </summary>
            <param name="">hint
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:EcmaScript.NET.Types.E4X.QName">
            <summary> Class QName
            
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.QName.ToString">
            <summary> </summary>
            <returns>
            </returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.QName.GetDefaultValue(System.Type)">
            <summary> </summary>
            <param name="">hint
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.AddNamespace(System.Object)">
            <summary>
            XML.prototype.addNamespace ( namespace )
            
            The addNamespace method adds a namespace declaration to the in scope
            namespaces for this XML object and returns this XML object. If the
            in scope namespaces for the XML object already contains a namespace
            with a prefix matching that of the given parameter, the prefix of the
            existing namespace is set to undefined.
            
            See ECMA 13.4.4.2
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.ToXMLString">
            <summary>
            XML.prototype.toXMLString ( )
            
            The toXMLString() method returns an XML encoded string
            representation of this XML object per the ToXMLString
            conversion operator described in section 10.2. Unlike
            the toString method, toXMLString provides no special treatment
            for XML objects that contain only XML text nodes (i.e., primitive values).
            The toXMLString method always includes the start tag, attributes and end
            tag of the XML object regardless of its content. It is provided for cases
            when the default XML to string conversion rules are not desired.
            
            See ECMA 13.4.4.39
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.ValueOf">
            <summary>
            XML.prototype.valueOf ( )
            
            The valueOf method returns this XML object.
            
            See ECMA 13.4.4.40
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.HasSimpleContent">
            <summary>
            XML.prototype.hasSimpleContent( )
            
            The hasSimpleContent method returns a Boolean value indicating whether
            this XML object contains simple content. An XML object is considered to
            contain simple content if it represents a text node, represents an attribute
            node or if it represents an XML element that has no child elements. XML
            objects representing comments and processing instructions do not have
            simple content. The existence of attributes, comments, processing instructions
            and text nodes within an XML object is not significant in determining if it
            has simple content.
            
            See ECMA 13.4.4.16
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.HasComplexContent">
            <summary>
            XML.prototype.hasComplexContent( )
            
            The hasComplexContent method returns a Boolean value
            indicating whether this XML object contains complex
            content. An XML object is considered to contain complex content
            if it represents an XML element that has child elements. XML
            objects representing attributes, comments, processing instructions 
            and text nodes do not have complex content. The existence of attributes,
            comments, processing instructions and text nodes within an XML object
            is not significant in determining if it has complex content.
            
            See ECMA 13.4.4.15
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.InScopeNamespaces">
            <summary>
            XML.prototype.inScopeNamespaces( )
            
            The inScopeNamespaces method returns an Array of Namespace objects
            representing the namespaces in scope for this XML object in the
            context of its parent. If the parent of this XML object is modified,
            the associated namespace declarations may change. The set of namespaces
            returned by this method may be a super set of the namespaces used by this value.
            
            See ECMA 13.4.4.17
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Length">
            <summary>
            XML.prototype.length ( )
            
            The length method always returns the integer 1 for XML objects.
            This treatment intentionally blurs the distinction between a single
            XML object and an XMLList containing only one value.
            
            See ECMA 13.4.4.20
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Namespace(System.Object)">
            <summary>
            XML.prototype.namespace ( [ prefix ] )
            
            If no prefix is specified, the namespace method returns the 
            Namespace associated with the qualified name of this XML object.
            
            If a prefix is specified, the namespace method looks for a namespace 
            in scope for this XML object with the given prefix and, if found,
            returns it. If no such namespace is found, the namespace method
            returns undefined.		
            
            See ECMA 13.4.4.23
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Parent">
            <summary>
            XML.prototype.parent ( )
            
            The parent method returns the parent of this XML object.
            
            See ECMA 13.4.4.27
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.ChildIndex">
            <summary>
            XML.prototype.childIndex ( )
            
            The childIndex method returns a Number representing the 
            ordinal position of this XML object within the context of its parent.
            
            See ECMA 13.4.4.7
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Children">
            <summary>
            XML.prototype.children ( )
            
            The children method returns an XMLList containing all the
            properties of this XML object in order.
            
            See ECMA 13.4.4.8
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Comments">
            <summary>
            XML.prototype.comments ( )
            
            The comments method returns an XMLList containing the properties of this
            XML object that represent XML comments.
            
            See ECMA 13.4.4.9
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.ProcessingInstructions(EcmaScript.NET.Types.E4X.XMLName)">
            <summary>
            XML.prototype.processingInstructions ( [ name ] )
            
            When the processingInstructions method is called with one 
            parameter name, it returns an XMLList containing all the 
            children of this XML object that are processing-instructions 
            with the given name. When the processingInstructions method 
            is called with no parameters, it returns an XMLList containing 
            all the children of this XML object that are processing-instructions
            regardless of their name.
            
            See ECMA 13.4.4.28
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Contains(System.Object)">
            <summary>
            XML.prototype.contains
            
            The contains method returns the result of comparing this XML object 
            with the given value. This treatment intentionally blurs the 
            distinction between a single XML object and an XMLList containing only one value.
            
            See ECMA 13.4.4.10
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Attribute(EcmaScript.NET.Types.E4X.XMLName)">
            <summary>
            XML.prototype.attribute ( attributeName )
            
            The attribute method returns an XMLList
            containing zero or one XML attributes associated with 
            this XML object that have the given attributeName.
            
            See ECMA 13.4.4.4
            </summary>
            <param name="xmlName"></param>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Attributes">
            <summary>
            XML.prototype.attributes ( )
            
            The attributes method returns an XMLList containing the XML attributes of this object.
            
            See ECMA 13.4.4.5
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Descendants(EcmaScript.NET.Types.E4X.XMLName)">
            <summary>
            XML.prototype.descendants ( [ name ] )
            
            The descendants method returns all the XML valued descendants 
            (children, grandchildren, great-grandchildren, etc.) of this XML
            object with the given name. If the name parameter is omitted,
            it returns all descendants of this XML object.
            
            See ECMA 13.4.4.12
            </summary>
            <param name="xmlName"></param>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Elements(EcmaScript.NET.Types.E4X.XMLName)">
            <summary>
            XML.prototype.elements ( [ name ] )
            
            When the elements method is called with one parameter name,
            it returns an XMLList containing all the children of this
            XML object that are XML elements with the given name. When
            the elements method is called with no parameters, it returns
            an XMLList containing all the children of this XML object that
            are XML elements regardless of their name.
            
            See ECMA 13.4.4.13
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Name">
            <summary>
            XML.prototype.name ( )
            
            The name method returns the qualified name associated with this XML object.
            
            See ECMA 13.4.4.22
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.LocalName">
            <summary>
            XML.prototype.localName ( )
            
            The localName method returns the local name portion of the qualified name of
            this XML object.
            
            See ECMA 13.4.4.21
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.NodeKind">
            <summary>
            XML.prototype.nodeKind ( )
            
            The nodeKind method returns a string representing the [[Class]] of this XML object.
            
            See ECMA 13.4.4.25
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Child(System.Int64)">
            <summary>
            XML.prototype.child ( propertyName )
            
            The child method returns the list of children in this 
            XML object matching the given propertyName. If propertyName is a numeric
            index, the child method returns a list containing the child at the
            ordinal position identified by propertyName.
            
            See ECMA 13.4.4.6 
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Child(EcmaScript.NET.Types.E4X.XMLName)">
            <summary>
            XML.prototype.child ( propertyName )
            
            The child method returns the list of children in this 
            XML object matching the given propertyName. If propertyName is a numeric
            index, the child method returns a list containing the child at the
            ordinal position identified by propertyName.
            
            See ECMA 13.4.4.6 
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Text">
            <summary>
            XML.prototype.text ( )
            
            The text method returns an XMLList containing all XML
            properties of this XML object that represent XML text
            nodes.
            
            See ECMA 13.4.4.37
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Normalize">
            <summary>
            XML.prototype.normalize ( )
            
            The normalize method puts all text nodes in this and all
            descendant XML objects into a normal form by merging adjacent
            text nodes and eliminating empty text nodes. It returns
            this XML object.
            
            See ECMA 13.4.4.26
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Copy">
            <summary>
            XML.prototype.copy ( )
            
            The copy method returns a deep copy of this XML object with the 
            internal [[Parent]] property set to null.
            
            See ECMA 13.4.4.11
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.NamespaceDeclarations">
            <summary>
            XML.prototype.namespaceDeclarations ( )
            
            The namespaceDeclarations method returns an Array of Namespace objects
            representing the namespace declarations associated with this XML
            object in the context of its parent. If the parent of this XML object 
            is modified, the associated namespace declarations may change.
            
            See ECMA 13.4.4.24
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.HasOwnProperty(EcmaScript.NET.Types.E4X.XMLName)">
            <summary>
            XML.prototype.hasOwnProperty ( P )
            
            The hasOwnProperty method returns a Boolean value indicating whether
            this object has the property specified by P. For all XML objects except
            the XML prototype object, this is the same result returned by the
            internal method [[HasProperty]]. For the XML prototype object,
            hasOwnProperty also examines the list of local properties to
            determine if there is a method property with the given name.
            
            See ECMA 13.4.4.14
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.AppendChild(System.Object)">
            <summary>
            XML.prototype.appendChild ( child )
            
            The appendChild method appends the given child to the end of
            this XML objects properties and returns this XML object.
            
            See ECMA 13.4.4.3
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.PrependChild(System.Object)">
            <summary>
            XML.prototype.prependChild ( value )
            
            The prependChild method inserts the given child into this object prior to
            its existing XML properties and returns this XML object
            
            See ECMA 13.4.4.29
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.PropertyIsEnumerable(System.Object)">
            <summary>
            XML.prototype.propertyIsEnumerable ( P )
            
            The propertyIsEnumerable method returns a Boolean value indicating
            whether the property P will be included in the set of properties
            iterated over when this XML object is used in a for-in statement.
            This method returns true when ToString(P) is "0"; otherwise, it returns
            false. This treatment intentionally blurs the distinction between a
            single XML object and an XMLList containing only one value.
            
            See ECMA 13.4.4.30
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.RemoveNamespace(System.Object)">
            <summary>
            XML.prototype.removeNamespace ( namespace )
            
            The removeNamespace method removes the given namespace from the
            in scope namespaces of this object and all its descendents,
            then returns a copy of this XML object. The removeNamespaces method
            will not remove a namespace from an object where it is referenced
            by that objects QName or the QNames of that objects attributes.
            
            See ECMA 13.4.4.31
            </summary>
            <param name="ns"></param>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.Replace(System.Object,System.Object)">
            <summary>
            XML.prototype.replace ( propertyName , value )
            
            The replace method replaces the XML properties of this XML object
            specified by propertyName with value and returns this XML object. If
            this XML object contains no properties that match propertyName, the
            replace method returns without modifying this XML object. The propertyName
            parameter may be a numeric property name, an unqualified name for a set
            of XML elements, a qualified name for a set of XML elements or the
            properties wildcard *. When the propertyName parameter is an unqualified
            name, it identifies XML elements in the default namespace. The value
            parameter may be an XML object, XMLList object or any value that may be
            converted to a String with ToString().
            
            See ECMA 13.4.4.32
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.SetChildren(System.Object)">
            <summary>
            XML.prototype.setChildren ( value )
            
            The setChildren method replaces the XML properties of this
            XML object with a new set of XML properties from value. value
            may be a single XML object or an XMLList. setChildren returns
            this XML object.
            
            See ECMA 13.4.4.33
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.SetLocalName(System.Object)">
            <summary>
            XML.prototype.setLocalName ( name )
            
            The setLocalName method replaces the local name of this
            XML object with a string constructed from the given name.
            
            See ECMA 13.4.4.34
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.SetName(System.Object)">
            <summary>
            XML.prototype.setName( name )
            
            The setName method replaces the name of this XML object with
            a QName or AttributeName constructed from the given name.
            
            See ECMA 13.4.4.35
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.SetNamespace(System.Object)">
            <summary>
            XML.prototype.setNamespace ( ns )
            
            The setNamespace method replaces the namespace associated with
            the name of this XML object with the given namespace.
            
            See ECMA 13.4.4.36
            </summary>
            <param name="ns"></param>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.InsertChildAfter(System.Object,System.Object)">
            <summary>
            XML.prototype.insertChildAfter ( child1 , child2)
            
            The insertChildAfter method inserts the given child2 after the given
            child1 in this XML object and returns this XML object. If child1 is null,
            the insertChildAfter method inserts child2 before all children of this XML
            object (i.e., after none of them). If child1 does not exist in this XML
            object, it returns without modifying this XML object.
            
            See ECMA 13.4.4.18
            </summary>
            <param name="newChild"></param>
            <param name="refChild"></param>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.InsertChildBefore(System.Object,System.Object)">
            <summary>
            XML.prototype.insertChildBefore ( child1 , child2 )
            
            The insertChildBefore method inserts the given child2 before the given
            child1 in this XML object and returns this XML object. If child1 is null,
            the insertChildBefore method inserts child2 after all children in this
            XML object (i.e., before none of them). If child1 does not exist in this
            XML object, it returns without modifying this XML object.
            
            See ECMA 13.4.4.19
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XML.ToString">
            <summary>
            XML.prototype.toString ( )
            
            The toString method returns a string representation of this XML object
            per the ToString conversion operator described in section 10.1.
            
            See ECMA 13.4.4.38
            </summary>
            <returns></returns>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XMLLib.IsXMLName(EcmaScript.NET.Context,System.Object)">
            See E4X 13.1.2.1.
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XMLList.Parent">
            <summary>
            If list is empty, return undefined, if elements have different parents return undefined,
            If they all have the same parent, return that parent.
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XMLList.Child(EcmaScript.NET.Types.E4X.XMLName)">
            <summary>
            XMLList.prototype.child ( propertyName )
            
            The child method calls the child() method of each XML object in
            this XMLList object and returns an XMLList containing the results
            in order.
            
            See ECMA 13.5.4.4
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XMLList.Contains(System.Object)">
            <summary>
            XMLList.prototype.contains ( value )
            
            The contains method returns a boolean value indicating whether
            this XMLList object contains an XML object that compares equal
            to the given value.
            
            See ECMA 13.5.4.8
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XMLList.ProcessingInstructions(EcmaScript.NET.Types.E4X.XMLName)">
            <summary>
            XMLList.prototype.processingInstructions ( [ name ] )
            
            The processingInstructions method calls the processingInstructions
            method of each XML object in this XMLList object passing the optional
            parameter name (or "*" if it is omitted) and returns an XMList
            containing the results in order.
            
            See ECMA 
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XMLList.PropertyIsEnumerable(System.Object)">
            <summary>
            XMLList.prototype.propertyIsEnumerable ( P )
            
            The propertyIsEnumerable method returns a Boolean value
            indicating whether the property P will be included in the
            set of properties iterated over when this XMLList object is used
            in a for-in statement.
            
            See ECMA 13.5.4.19
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.E4X.XMLList.ValueOf">
            <summary>
            XMLList.prototype.valueOf ( )
            
            The valueOf method returns this XMLList object.
            
            See ECMA 
            </summary>		
        </member>
        <!-- Badly formed XML comment ignored for member "M:EcmaScript.NET.Types.E4X.XMLObject.AddValues(EcmaScript.NET.Context,System.Boolean,System.Object)" -->
        <member name="T:EcmaScript.NET.Types.RegExp.BuiltinRegExp">
            <summary> This class implements the RegExp native object.
            
            Revision History:
            Implementation in C by Brendan Eich
            Initial port to Java by Norris Boyd from jsregexp.c version 1.36
            Merged up to version 1.38, which included Unicode support.
            Merged bug fixes in version 1.39.
            Merged JSFUN13_BRANCH changes up to 1.32.2.13
            
            </summary>				
        </member>
        <member name="M:EcmaScript.NET.Types.RegExp.REGlobalData.parens_index(System.Int32)">
            <summary> Get start of parenthesis capture contents, -1 for empty.</summary>
        </member>
        <member name="M:EcmaScript.NET.Types.RegExp.REGlobalData.parens_length(System.Int32)">
            <summary> Get length of parenthesis capture contents.</summary>
        </member>
        <member name="T:EcmaScript.NET.Types.RegExp.BuiltinRegExpCtor">
            <summary> This class implements the RegExp constructor native object.
            
            Revision History:
            Implementation in C by Brendan Eich
            Initial port to Java by Norris Boyd from jsregexp.c version 1.36
            Merged up to version 1.38, which included Unicode support.
            Merged bug fixes in version 1.39.
            Merged JSFUN13_BRANCH changes up to 1.32.2.11
            
            </summary>
        </member>
        <member name="T:EcmaScript.NET.Types.RegExp.RegExpImpl">
            <summary> </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.RegExp.RegExpImpl.matchOrReplace(EcmaScript.NET.Context,EcmaScript.NET.IScriptable,EcmaScript.NET.IScriptable,System.Object[],EcmaScript.NET.Types.RegExp.RegExpImpl,EcmaScript.NET.Types.RegExp.GlobData,System.Boolean)">
            <summary> Analog of C match_or_replace.</summary>
        </member>
        <member name="M:EcmaScript.NET.Types.RegExp.RegExpImpl.getParenSubString(System.Int32)">
            <summary> Analog of REGEXP_PAREN_SUBSTRING in C jsregexp.h.
            Assumes zero-based; i.e., for $3, i==2
            </summary>
        </member>
        <member name="M:EcmaScript.NET.Types.RegExp.RegExpImpl.do_replace(EcmaScript.NET.Types.RegExp.GlobData,EcmaScript.NET.Context,EcmaScript.NET.Types.RegExp.RegExpImpl)">
            <summary> Analog of do_replace in jsstr.c</summary>
        </member>
        <member name="T:EcmaScript.NET.Undefined">
            <summary>
            This class implements the Undefined value in JavaScript.
            </summary>	
        </member>
        <member name="T:EcmaScript.NET.UniqueTag">
            <summary>
            Class instances represent serializable tags to mark special Object values.    
            </summary>
        </member>
        <member name="F:EcmaScript.NET.UniqueTag.NotFound">
            <summary>
            Tag to mark non-existing values.
            </summary>		
        </member>
        <member name="F:EcmaScript.NET.UniqueTag.NullValue">
            <summary>
            Tag to distinguish between uninitialized and null values.
            </summary>		
        </member>
        <member name="F:EcmaScript.NET.UniqueTag.DoubleMark">
            <summary>
            Tag to indicate that a object represents "double" with the real value
            stored somewhere else.
            </summary>		
        </member>
        <member name="F:EcmaScript.NET.UniqueTag.LongMark">
            <summary>
            Tag to indicate that a object represents "long" with the real value
            stored somewhere else.
            </summary>		
        </member>
        <member name="M:EcmaScript.NET.UniqueTag.ToString">
            <summary>
            Returns a string represenation of this UniqueTag
            </summary>
            <returns></returns>
        </member>
        <member name="T:EcmaScript.NET.Wrapper">
            <summary>
            Objects that can wrap other values for reflection in the JS environment
            will implement Wrapper.
            
            Wrapper defines a single method that can be called to unwrap the object.
            </summary>	
        </member>
        <member name="M:EcmaScript.NET.Wrapper.Unwrap">
            <summary> 
            Unwrap the object by returning the wrapped value.
            </summary>
            <returns>a wrapped value</returns>
        </member>
        <member name="M:Yahoo.Yui.Compressor.Compressor.RemoveByteOrderMark(System.String)">
            <summary>
            This removes the BOM from -anywhere- in some source text.
            </summary>
            <remarks>We've notived that files concatenated together leave BOM's -within- the source text, not just at the start. As such, these cause compression errors.</remarks>
        </member>
        <member name="T:Yahoo.Yui.Compressor.Mozilla.Token">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
